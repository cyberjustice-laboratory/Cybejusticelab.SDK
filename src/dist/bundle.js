/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@azure/ms-rest-js')) :
    typeof define === 'function' && define.amd ? define(['exports', '@azure/ms-rest-js'], factory) :
    (factory((global.Bundle = {}),global.msRest));
}(this, (function (exports,msRest) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var index = /*#__PURE__*/Object.freeze({

    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var CyberjusticeLabKernelSharedAsyncModelsTimeEventApiRequestModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Async.Models.TimeEventApiRequestModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventApiRequestModel",
            modelProperties: {
                timeEventIds: {
                    serializedName: "TimeEventIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                fileIds: {
                    serializedName: "FileIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                timerCodes: {
                    serializedName: "TimerCodes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                timerStatuses: {
                    serializedName: "TimerStatuses",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                minDate: {
                    serializedName: "MinDate",
                    type: {
                        name: "DateTime"
                    }
                },
                maxDate: {
                    serializedName: "MaxDate",
                    type: {
                        name: "DateTime"
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                orderBy: {
                    serializedName: "OrderBy",
                    type: {
                        name: "String"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationResourceModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Async.Models.TimeEventNotificationResourceModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationResourceModel",
            modelProperties: {
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "Message",
                    type: {
                        name: "String"
                    }
                },
                parameters: {
                    serializedName: "Parameters",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Async.Models.TimeEventNotificationModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationModel",
            modelProperties: {
                notificationCode: {
                    serializedName: "NotificationCode",
                    type: {
                        name: "String"
                    }
                },
                partyType: {
                    serializedName: "PartyType",
                    type: {
                        name: "String"
                    }
                },
                link: {
                    serializedName: "Link",
                    type: {
                        name: "String"
                    }
                },
                aggregatorCode: {
                    serializedName: "AggregatorCode",
                    type: {
                        name: "String"
                    }
                },
                emailCode: {
                    serializedName: "EmailCode",
                    type: {
                        name: "String"
                    }
                },
                timeEventNotificationResourceModels: {
                    serializedName: "TimeEventNotificationResourceModels",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationResourceModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedAsyncModelsTimeEventLogResourceModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Async.Models.TimeEventLogResourceModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventLogResourceModel",
            modelProperties: {
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "Message",
                    type: {
                        name: "String"
                    }
                },
                parameters: {
                    serializedName: "Parameters",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedAsyncModelsTimeEventLogModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Async.Models.TimeEventLogModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventLogModel",
            modelProperties: {
                eventCode: {
                    serializedName: "EventCode",
                    type: {
                        name: "String"
                    }
                },
                authorName: {
                    serializedName: "AuthorName",
                    type: {
                        name: "String"
                    }
                },
                authorRole: {
                    serializedName: "AuthorRole",
                    type: {
                        name: "String"
                    }
                },
                authorUID: {
                    serializedName: "AuthorUID",
                    type: {
                        name: "String"
                    }
                },
                fileStep: {
                    serializedName: "FileStep",
                    type: {
                        name: "String"
                    }
                },
                entryDate: {
                    serializedName: "EntryDate",
                    type: {
                        name: "DateTime"
                    }
                },
                timeEventLogResourceModels: {
                    serializedName: "TimeEventLogResourceModels",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventLogResourceModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedAsyncModelsTimeEventEmailModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Async.Models.TimeEventEmailModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventEmailModel",
            modelProperties: {
                emailCode: {
                    serializedName: "EmailCode",
                    type: {
                        name: "String"
                    }
                },
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                parameters: {
                    serializedName: "Parameters",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedAsyncModelsTimeEventModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Async.Models.TimeEventModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventModel",
            modelProperties: {
                timeEventId: {
                    serializedName: "TimeEventId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                timerCode: {
                    serializedName: "TimerCode",
                    type: {
                        name: "String"
                    }
                },
                timerDate: {
                    serializedName: "TimerDate",
                    type: {
                        name: "DateTime"
                    }
                },
                timerStatus: {
                    serializedName: "TimerStatus",
                    type: {
                        name: "String"
                    }
                },
                notificationLinks: {
                    serializedName: "NotificationLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationModel"
                            }
                        }
                    }
                },
                logLinks: {
                    serializedName: "LogLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventLogModel"
                            }
                        }
                    }
                },
                emailLinks: {
                    serializedName: "EmailLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventEmailModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedAsyncModelsTimeEventApiResponseModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Async.Models.TimeEventApiResponseModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventApiResponseModel",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                timeEvents: {
                    serializedName: "TimeEvents",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedAsyncModelsTimeEventCreateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Async.Models.TimeEventCreateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventCreateModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                timerCode: {
                    serializedName: "TimerCode",
                    type: {
                        name: "String"
                    }
                },
                timerDate: {
                    serializedName: "TimerDate",
                    type: {
                        name: "DateTime"
                    }
                },
                timerStatus: {
                    serializedName: "TimerStatus",
                    type: {
                        name: "String"
                    }
                },
                notificationLinks: {
                    serializedName: "NotificationLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationModel"
                            }
                        }
                    }
                },
                logLinks: {
                    serializedName: "LogLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventLogModel"
                            }
                        }
                    }
                },
                emailLinks: {
                    serializedName: "EmailLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedAsyncModelsTimeEventEmailModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelDataAccessBusinessInformationJudicialFileWithFormProposalsCount = {
        serializedName: "CyberjusticeLab.Kernel.DataAccess.BusinessInformation.JudicialFileWithFormProposalsCount",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelDataAccessBusinessInformationJudicialFileWithFormProposalsCount",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    constraints: {
                        MaxLength: 256,
                        MinLength: 0
                    },
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                businessRuleName: {
                    serializedName: "BusinessRuleName",
                    constraints: {
                        MaxLength: 256,
                        MinLength: 0
                    },
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    constraints: {
                        MaxLength: 256,
                        MinLength: 0
                    },
                    type: {
                        name: "String"
                    }
                },
                closingReason: {
                    serializedName: "ClosingReason",
                    constraints: {
                        MaxLength: 256,
                        MinLength: 0
                    },
                    type: {
                        name: "String"
                    }
                },
                allProposalsCount: {
                    serializedName: "AllProposalsCount",
                    type: {
                        name: "Number"
                    }
                },
                negotiationProposalsCount: {
                    serializedName: "NegotiationProposalsCount",
                    type: {
                        name: "Number"
                    }
                },
                mediationProposalsCount: {
                    serializedName: "MediationProposalsCount",
                    type: {
                        name: "Number"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarBaseCalendarUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.BaseCalendarUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarBaseCalendarUpdateData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.PeriodAvailabilityUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityUpdateData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                periodGroupId: {
                    serializedName: "PeriodGroupId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarClosedDayUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.ClosedDayUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarClosedDayUpdateData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                rule: {
                    serializedName: "Rule",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.AssignmentWeekRoomUserLinkData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                assignmentCycleId: {
                    serializedName: "AssignmentCycleId",
                    type: {
                        name: "Uuid"
                    }
                },
                roomId: {
                    serializedName: "RoomId",
                    type: {
                        name: "Uuid"
                    }
                },
                realm: {
                    serializedName: "Realm",
                    type: {
                        name: "String"
                    }
                },
                userId: {
                    serializedName: "UserId",
                    type: {
                        name: "String"
                    }
                },
                year: {
                    serializedName: "Year",
                    type: {
                        name: "Number"
                    }
                },
                month: {
                    serializedName: "Month",
                    type: {
                        name: "Number"
                    }
                },
                week: {
                    serializedName: "Week",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.AssignmentCycleUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleUpdateData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                assignmentWeekRoomUserLinks: {
                    serializedName: "AssignmentWeekRoomUserLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkData"
                            }
                        }
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                resourceType: {
                    serializedName: "ResourceType",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarSchedulePatternUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.SchedulePatternUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarSchedulePatternUpdateData",
            modelProperties: {
                schedulePatternId: {
                    serializedName: "SchedulePatternId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarScheduleEntryUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.ScheduleEntryUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarScheduleEntryUpdateData",
            modelProperties: {
                scheduleEntryId: {
                    serializedName: "ScheduleEntryId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                entryType: {
                    serializedName: "EntryType",
                    type: {
                        name: "String"
                    }
                },
                weekday: {
                    serializedName: "Weekday",
                    type: {
                        name: "String"
                    }
                },
                weekPosition: {
                    serializedName: "WeekPosition",
                    type: {
                        name: "Number"
                    }
                },
                recurrence: {
                    serializedName: "Recurrence",
                    type: {
                        name: "Number"
                    }
                },
                recurrenceAlternateStart: {
                    serializedName: "RecurrenceAlternateStart",
                    type: {
                        name: "Number"
                    }
                },
                startTime: {
                    serializedName: "StartTime",
                    type: {
                        name: "String"
                    }
                },
                endTime: {
                    serializedName: "EndTime",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.PeriodAvailabilityJudicialFileData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileData",
            modelProperties: {
                periodAvailabilityId: {
                    serializedName: "PeriodAvailabilityId",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyEntityId: {
                    serializedName: "PartyEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                timeAllocation: {
                    serializedName: "TimeAllocation",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsEventPartyLinkModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.EventPartyLinkModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsEventPartyLinkModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsCreateAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.CreateAttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsCreateAttributeModel",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsUpdateEventModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.UpdateEventModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsUpdateEventModel",
            modelProperties: {
                eventId: {
                    serializedName: "EventId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                fileStatus: {
                    serializedName: "FileStatus",
                    type: {
                        name: "String"
                    }
                },
                title: {
                    serializedName: "Title",
                    type: {
                        name: "String"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                place: {
                    serializedName: "Place",
                    type: {
                        name: "String"
                    }
                },
                rank: {
                    serializedName: "Rank",
                    type: {
                        name: "Number"
                    }
                },
                category: {
                    serializedName: "Category",
                    type: {
                        name: "String"
                    }
                },
                subCategory: {
                    serializedName: "SubCategory",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                partiesLinks: {
                    serializedName: "PartiesLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventPartyLinkModel"
                            }
                        }
                    }
                },
                eventAttributes: {
                    serializedName: "EventAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsCreateAttributeModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsUpdateAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.UpdateAttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsUpdateAttributeModel",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsUpdateEventAttributesModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.UpdateEventAttributesModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsUpdateEventAttributesModel",
            modelProperties: {
                eventId: {
                    serializedName: "EventId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                eventAttributes: {
                    serializedName: "EventAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsUpdateAttributeModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsEventBehaviourPartyLinkModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.EventBehaviourPartyLinkModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsEventBehaviourPartyLinkModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehaviourModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.UpdateEventBehaviourModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehaviourModel",
            modelProperties: {
                behaviourCode: {
                    serializedName: "BehaviourCode",
                    type: {
                        name: "String"
                    }
                },
                behaviourAttributes: {
                    serializedName: "BehaviourAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsUpdateAttributeModel"
                            }
                        }
                    }
                },
                partiesLinks: {
                    serializedName: "PartiesLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventBehaviourPartyLinkModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehavioursModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.UpdateEventBehavioursModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehavioursModel",
            modelProperties: {
                eventId: {
                    serializedName: "EventId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                eventBehaviours: {
                    serializedName: "EventBehaviours",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehaviourModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsUpdateEventRankModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.UpdateEventRankModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsUpdateEventRankModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                eventId: {
                    serializedName: "EventId",
                    type: {
                        name: "Uuid"
                    }
                },
                targetRank: {
                    serializedName: "TargetRank",
                    type: {
                        name: "Number"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                removeDependency: {
                    serializedName: "RemoveDependency",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsUpdateEventStartDateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.UpdateEventStartDateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsUpdateEventStartDateModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                eventId: {
                    serializedName: "EventId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                startDate: {
                    serializedName: "StartDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsEventApiResquestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.EventApiResquestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsEventApiResquestData",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                eventId: {
                    serializedName: "EventId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileStatus: {
                    serializedName: "FileStatus",
                    type: {
                        name: "String"
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                eventBehaviourPartyLinks: {
                    serializedName: "EventBehaviourPartyLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                searchText: {
                    serializedName: "SearchText",
                    type: {
                        name: "String"
                    }
                },
                searchBy: {
                    serializedName: "SearchBy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                orderBy: {
                    serializedName: "OrderBy",
                    type: {
                        name: "String"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsEventAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.EventAttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsEventAttributeModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Number"
                    }
                },
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsEventPartyResponseModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.EventPartyResponseModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsEventPartyResponseModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                response: {
                    serializedName: "Response",
                    type: {
                        name: "Boolean"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsEventAttemptModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.EventAttemptModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsEventAttemptModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                partyResponses: {
                    serializedName: "PartyResponses",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventPartyResponseModel"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsEventBehaviourAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.EventBehaviourAttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsEventBehaviourAttributeModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Number"
                    }
                },
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsEventBehaviourModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.EventBehaviourModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsEventBehaviourModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Number"
                    }
                },
                behaviourCode: {
                    serializedName: "BehaviourCode",
                    type: {
                        name: "String"
                    }
                },
                behaviourAttributes: {
                    serializedName: "BehaviourAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventBehaviourAttributeModel"
                            }
                        }
                    }
                },
                behaviourPartyLinks: {
                    serializedName: "BehaviourPartyLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventBehaviourPartyLinkModel"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsEventModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.EventModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsEventModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                calendarId: {
                    serializedName: "CalendarId",
                    type: {
                        name: "Uuid"
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                fileStatus: {
                    serializedName: "FileStatus",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                title: {
                    serializedName: "Title",
                    type: {
                        name: "String"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                place: {
                    serializedName: "Place",
                    type: {
                        name: "String"
                    }
                },
                rank: {
                    serializedName: "Rank",
                    type: {
                        name: "Number"
                    }
                },
                category: {
                    serializedName: "Category",
                    type: {
                        name: "String"
                    }
                },
                subCategory: {
                    serializedName: "SubCategory",
                    type: {
                        name: "String"
                    }
                },
                eventAttributes: {
                    serializedName: "EventAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventAttributeModel"
                            }
                        }
                    }
                },
                eventPartyLinks: {
                    serializedName: "EventPartyLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventPartyLinkModel"
                            }
                        }
                    }
                },
                eventAttempts: {
                    serializedName: "EventAttempts",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventAttemptModel"
                            }
                        }
                    }
                },
                eventBehaviours: {
                    serializedName: "EventBehaviours",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventBehaviourModel"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsEventApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.EventApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsEventApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                events: {
                    serializedName: "Events",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.FullCalendarApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiRequestData",
            modelProperties: {
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                isHoliday: {
                    serializedName: "IsHoliday",
                    type: {
                        name: "Boolean"
                    }
                },
                isWeekend: {
                    serializedName: "IsWeekend",
                    type: {
                        name: "Boolean"
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsDayModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.DayModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsDayModel",
            modelProperties: {
                dateKey: {
                    serializedName: "dateKey",
                    type: {
                        name: "Number"
                    }
                },
                date: {
                    serializedName: "date",
                    type: {
                        name: "DateTime"
                    }
                },
                day: {
                    serializedName: "day",
                    type: {
                        name: "Number"
                    }
                },
                weekday: {
                    serializedName: "weekday",
                    type: {
                        name: "Number"
                    }
                },
                weekDayName: {
                    serializedName: "weekDayName",
                    type: {
                        name: "String"
                    }
                },
                isWeekend: {
                    serializedName: "isWeekend",
                    type: {
                        name: "Boolean"
                    }
                },
                isHoliday: {
                    serializedName: "isHoliday",
                    type: {
                        name: "Boolean"
                    }
                },
                holidayText: {
                    serializedName: "holidayText",
                    type: {
                        name: "String"
                    }
                },
                dowInMonth: {
                    serializedName: "dowInMonth",
                    type: {
                        name: "Number"
                    }
                },
                dayOfYear: {
                    serializedName: "dayOfYear",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.FullCalendarApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                days: {
                    serializedName: "Days",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsDayModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateRoleData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.BaseCalendarCreateRoleData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateRoleData",
            modelProperties: {
                role: {
                    serializedName: "Role",
                    type: {
                        name: "String"
                    }
                },
                realm: {
                    serializedName: "Realm",
                    type: {
                        name: "String"
                    }
                },
                userId: {
                    serializedName: "UserId",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.BaseCalendarCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateData",
            modelProperties: {
                locationRoomIds: {
                    serializedName: "LocationRoomIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                judicialEntityIds: {
                    serializedName: "JudicialEntityIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                roles: {
                    serializedName: "Roles",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateRoleData"
                            }
                        }
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleBaseData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.PeriodAvailabilityRoleBaseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleBaseData",
            modelProperties: {
                role: {
                    serializedName: "Role",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                realm: {
                    serializedName: "Realm",
                    type: {
                        name: "String"
                    }
                },
                userId: {
                    serializedName: "UserId",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileBaseData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.PeriodAvailabilityJudicialFileBaseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileBaseData",
            modelProperties: {
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyEntityId: {
                    serializedName: "PartyEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                timeAllocation: {
                    serializedName: "TimeAllocation",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityCreateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.PeriodAvailabilityCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityCreateData",
            modelProperties: {
                baseCalendarId: {
                    serializedName: "BaseCalendarId",
                    type: {
                        name: "Uuid"
                    }
                },
                roles: {
                    serializedName: "Roles",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleBaseData"
                            }
                        }
                    }
                },
                fileLinks: {
                    serializedName: "FileLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileBaseData"
                            }
                        }
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                periodGroupId: {
                    serializedName: "PeriodGroupId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarClosedWeekdayData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.ClosedWeekdayData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarClosedWeekdayData",
            modelProperties: {
                baseCalendarId: {
                    serializedName: "BaseCalendarId",
                    type: {
                        name: "Uuid"
                    }
                },
                weekday: {
                    serializedName: "Weekday",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarClosedDayCreateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.ClosedDayCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarClosedDayCreateData",
            modelProperties: {
                baseCalendarId: {
                    serializedName: "BaseCalendarId",
                    type: {
                        name: "Uuid"
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                rule: {
                    serializedName: "Rule",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkCreateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.AssignmentWeekRoomUserLinkCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkCreateData",
            modelProperties: {
                roomId: {
                    serializedName: "RoomId",
                    type: {
                        name: "Uuid"
                    }
                },
                realm: {
                    serializedName: "Realm",
                    type: {
                        name: "String"
                    }
                },
                userId: {
                    serializedName: "UserId",
                    type: {
                        name: "String"
                    }
                },
                year: {
                    serializedName: "Year",
                    type: {
                        name: "Number"
                    }
                },
                month: {
                    serializedName: "Month",
                    type: {
                        name: "Number"
                    }
                },
                week: {
                    serializedName: "Week",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleCreateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.AssignmentCycleCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleCreateData",
            modelProperties: {
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                assignmentWeekRoomUserLinks: {
                    serializedName: "AssignmentWeekRoomUserLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkCreateData"
                            }
                        }
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                resourceType: {
                    serializedName: "ResourceType",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleCreateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.PeriodAvailabilityRoleCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleCreateData",
            modelProperties: {
                periodAvailabilityId: {
                    serializedName: "PeriodAvailabilityId",
                    type: {
                        name: "Uuid"
                    }
                },
                role: {
                    serializedName: "Role",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                realm: {
                    serializedName: "Realm",
                    type: {
                        name: "String"
                    }
                },
                userId: {
                    serializedName: "UserId",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCopyRequestData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.SchedulePatternCopyRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCopyRequestData",
            modelProperties: {
                schedulePatternId: {
                    serializedName: "SchedulePatternId",
                    type: {
                        name: "Uuid"
                    }
                },
                baseCalendarId: {
                    serializedName: "BaseCalendarId",
                    type: {
                        name: "Uuid"
                    }
                },
                startDate: {
                    serializedName: "StartDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarScheduleEntryBaseData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.ScheduleEntryBaseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarScheduleEntryBaseData",
            modelProperties: {
                entryType: {
                    serializedName: "EntryType",
                    type: {
                        name: "String"
                    }
                },
                weekday: {
                    serializedName: "Weekday",
                    type: {
                        name: "String"
                    }
                },
                weekPosition: {
                    serializedName: "WeekPosition",
                    type: {
                        name: "Number"
                    }
                },
                recurrence: {
                    serializedName: "Recurrence",
                    type: {
                        name: "Number"
                    }
                },
                recurrenceAlternateStart: {
                    serializedName: "RecurrenceAlternateStart",
                    type: {
                        name: "Number"
                    }
                },
                startTime: {
                    serializedName: "StartTime",
                    type: {
                        name: "String"
                    }
                },
                endTime: {
                    serializedName: "EndTime",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCreateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.SchedulePatternCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCreateData",
            modelProperties: {
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                locationRoomIds: {
                    serializedName: "LocationRoomIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                scheduleEntries: {
                    serializedName: "ScheduleEntries",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarScheduleEntryBaseData"
                            }
                        }
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarScheduleEntryCreateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.ScheduleEntryCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarScheduleEntryCreateData",
            modelProperties: {
                schedulePatternId: {
                    serializedName: "SchedulePatternId",
                    type: {
                        name: "Uuid"
                    }
                },
                entryType: {
                    serializedName: "EntryType",
                    type: {
                        name: "String"
                    }
                },
                weekday: {
                    serializedName: "Weekday",
                    type: {
                        name: "String"
                    }
                },
                weekPosition: {
                    serializedName: "WeekPosition",
                    type: {
                        name: "Number"
                    }
                },
                recurrence: {
                    serializedName: "Recurrence",
                    type: {
                        name: "Number"
                    }
                },
                recurrenceAlternateStart: {
                    serializedName: "RecurrenceAlternateStart",
                    type: {
                        name: "Number"
                    }
                },
                startTime: {
                    serializedName: "StartTime",
                    type: {
                        name: "String"
                    }
                },
                endTime: {
                    serializedName: "EndTime",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsCreateCalendarModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.CreateCalendarModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsCreateCalendarModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsCreateEventAttemptModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.CreateEventAttemptModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsCreateEventAttemptModel",
            modelProperties: {
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsCreateEventBehaviourModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.CreateEventBehaviourModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsCreateEventBehaviourModel",
            modelProperties: {
                behaviourCode: {
                    serializedName: "BehaviourCode",
                    type: {
                        name: "String"
                    }
                },
                behaviourAttributes: {
                    serializedName: "BehaviourAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsCreateAttributeModel"
                            }
                        }
                    }
                },
                partiesLinks: {
                    serializedName: "PartiesLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventPartyLinkModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsCreateEventModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.CreateEventModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsCreateEventModel",
            modelProperties: {
                calendarId: {
                    serializedName: "CalendarId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                fileStatus: {
                    serializedName: "FileStatus",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                title: {
                    serializedName: "Title",
                    type: {
                        name: "String"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                place: {
                    serializedName: "Place",
                    type: {
                        name: "String"
                    }
                },
                rank: {
                    serializedName: "Rank",
                    type: {
                        name: "Number"
                    }
                },
                category: {
                    serializedName: "Category",
                    type: {
                        name: "String"
                    }
                },
                subCategory: {
                    serializedName: "SubCategory",
                    type: {
                        name: "String"
                    }
                },
                eventAttributes: {
                    serializedName: "EventAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsCreateAttributeModel"
                            }
                        }
                    }
                },
                partiesLinks: {
                    serializedName: "PartiesLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsEventPartyLinkModel"
                            }
                        }
                    }
                },
                eventAttempts: {
                    serializedName: "EventAttempts",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsCreateEventAttemptModel"
                            }
                        }
                    }
                },
                eventBehaviours: {
                    serializedName: "EventBehaviours",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsCreateEventBehaviourModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarClosedDayData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.ClosedDayData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarClosedDayData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                baseCalendarId: {
                    serializedName: "BaseCalendarId",
                    type: {
                        name: "Uuid"
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                rule: {
                    serializedName: "Rule",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.PeriodAvailabilityRoleData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                periodAvailabilityId: {
                    serializedName: "PeriodAvailabilityId",
                    type: {
                        name: "Uuid"
                    }
                },
                role: {
                    serializedName: "Role",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                realm: {
                    serializedName: "Realm",
                    type: {
                        name: "String"
                    }
                },
                userId: {
                    serializedName: "UserId",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.PeriodAvailabilityData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                baseCalendarId: {
                    serializedName: "BaseCalendarId",
                    type: {
                        name: "Uuid"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                roles: {
                    serializedName: "Roles",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleData"
                            }
                        }
                    }
                },
                fileLinks: {
                    serializedName: "FileLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileData"
                            }
                        }
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                periodGroupId: {
                    serializedName: "PeriodGroupId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarBaseCalendarRoleData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.BaseCalendarRoleData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarBaseCalendarRoleData",
            modelProperties: {
                baseCalendarId: {
                    serializedName: "BaseCalendarId",
                    type: {
                        name: "Uuid"
                    }
                },
                role: {
                    serializedName: "Role",
                    type: {
                        name: "String"
                    }
                },
                realm: {
                    serializedName: "Realm",
                    type: {
                        name: "String"
                    }
                },
                userId: {
                    serializedName: "UserId",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarBaseCalendarData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.BaseCalendarData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarBaseCalendarData",
            modelProperties: {
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                closedDays: {
                    serializedName: "ClosedDays",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarClosedDayData"
                            }
                        }
                    }
                },
                closedWeekdays: {
                    serializedName: "ClosedWeekdays",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarClosedWeekdayData"
                            }
                        }
                    }
                },
                locationRoomIds: {
                    serializedName: "LocationRoomIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                judicialEntityIds: {
                    serializedName: "JudicialEntityIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                periodAvailabilities: {
                    serializedName: "PeriodAvailabilities",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityData"
                            }
                        }
                    }
                },
                roles: {
                    serializedName: "Roles",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarBaseCalendarRoleData"
                            }
                        }
                    }
                },
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.AssignmentCycleData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                assignmentWeekRoomUserLinks: {
                    serializedName: "AssignmentWeekRoomUserLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkData"
                            }
                        }
                    }
                },
                beginDate: {
                    serializedName: "BeginDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                },
                resourceType: {
                    serializedName: "ResourceType",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarScheduleEntryData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.ScheduleEntryData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarScheduleEntryData",
            modelProperties: {
                scheduleEntryId: {
                    serializedName: "ScheduleEntryId",
                    type: {
                        name: "Uuid"
                    }
                },
                schedulePatternId: {
                    serializedName: "SchedulePatternId",
                    type: {
                        name: "Uuid"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                entryType: {
                    serializedName: "EntryType",
                    type: {
                        name: "String"
                    }
                },
                weekday: {
                    serializedName: "Weekday",
                    type: {
                        name: "String"
                    }
                },
                weekPosition: {
                    serializedName: "WeekPosition",
                    type: {
                        name: "Number"
                    }
                },
                recurrence: {
                    serializedName: "Recurrence",
                    type: {
                        name: "Number"
                    }
                },
                recurrenceAlternateStart: {
                    serializedName: "RecurrenceAlternateStart",
                    type: {
                        name: "Number"
                    }
                },
                startTime: {
                    serializedName: "StartTime",
                    type: {
                        name: "String"
                    }
                },
                endTime: {
                    serializedName: "EndTime",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsCalendarSchedulePatternData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Calendar.SchedulePatternData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsCalendarSchedulePatternData",
            modelProperties: {
                schedulePatternId: {
                    serializedName: "SchedulePatternId",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                locationRoomIds: {
                    serializedName: "LocationRoomIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                scheduleEntries: {
                    serializedName: "ScheduleEntries",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarScheduleEntryData"
                            }
                        }
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedCalendarModelsCalendarModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Calendar.Models.CalendarModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedCalendarModelsCalendarModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsDocumentDocumentData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Document.DocumentData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsDocumentDocumentData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                fileID: {
                    serializedName: "FileID",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                title: {
                    serializedName: "Title",
                    type: {
                        name: "String"
                    }
                },
                version: {
                    serializedName: "Version",
                    type: {
                        name: "Number"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                format: {
                    serializedName: "Format",
                    type: {
                        name: "String"
                    }
                },
                formatEnum: {
                    serializedName: "FormatEnum",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    serializedName: "Type",
                    type: {
                        name: "String"
                    }
                },
                typeEnum: {
                    serializedName: "TypeEnum",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                permission: {
                    serializedName: "Permission",
                    type: {
                        name: "String"
                    }
                },
                permissionEnum: {
                    serializedName: "PermissionEnum",
                    type: {
                        name: "String"
                    }
                },
                documentation: {
                    serializedName: "Documentation",
                    type: {
                        name: "String"
                    }
                },
                documentationEnum: {
                    serializedName: "DocumentationEnum",
                    type: {
                        name: "String"
                    }
                },
                reference: {
                    serializedName: "Reference",
                    type: {
                        name: "String"
                    }
                },
                partyID: {
                    serializedName: "PartyID",
                    type: {
                        name: "Uuid"
                    }
                },
                parties: {
                    serializedName: "Parties",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                forumId: {
                    serializedName: "ForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                parentForumId: {
                    serializedName: "ParentForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var SystemCollectionsGenericKeyValuePairSystemStringSystemString = {
        serializedName: "System.Collections.Generic.KeyValuePair_System.String_System.String_",
        type: {
            name: "Composite",
            className: "SystemCollectionsGenericKeyValuePairSystemStringSystemString",
            modelProperties: {
                key: {
                    readOnly: true,
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    readOnly: true,
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsAttributesFilters = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.AttributesFilters",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsAttributesFilters",
            modelProperties: {
                notAndAttributes: {
                    serializedName: "NotAndAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SystemCollectionsGenericKeyValuePairSystemStringSystemString"
                            }
                        }
                    }
                },
                andAttributes: {
                    serializedName: "AndAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SystemCollectionsGenericKeyValuePairSystemStringSystemString"
                            }
                        }
                    }
                },
                orAttributes: {
                    serializedName: "OrAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SystemCollectionsGenericKeyValuePairSystemStringSystemString"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsActionsFilters = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.ActionsFilters",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsActionsFilters",
            modelProperties: {
                restrictedCodesAndComplements: {
                    serializedName: "RestrictedCodesAndComplements",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SystemCollectionsGenericKeyValuePairSystemStringSystemString"
                            }
                        }
                    }
                },
                allowedPartyIds: {
                    serializedName: "AllowedPartyIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsDocumentApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.DocumentApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsDocumentApiRequestData",
            modelProperties: {
                documentIds: {
                    serializedName: "DocumentIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                fileIds: {
                    serializedName: "FileIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                partyIds: {
                    serializedName: "PartyIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                hasForumId: {
                    serializedName: "HasForumId",
                    type: {
                        name: "Boolean"
                    }
                },
                documentType: {
                    serializedName: "DocumentType",
                    type: {
                        name: "String"
                    }
                },
                searchText: {
                    serializedName: "SearchText",
                    type: {
                        name: "String"
                    }
                },
                searchBy: {
                    serializedName: "SearchBy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                orderBy: {
                    serializedName: "OrderBy",
                    type: {
                        name: "String"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                },
                documentsAttributesFilters: {
                    serializedName: "DocumentsAttributesFilters",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsAttributesFilters"
                            }
                        }
                    }
                },
                documentsActionsFilters: {
                    serializedName: "DocumentsActionsFilters",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsActionsFilters"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.AttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsAttributeModel",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsDocumentPartyActionModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.DocumentPartyActionModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsDocumentPartyActionModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Number"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                representativeId: {
                    serializedName: "RepresentativeId",
                    type: {
                        name: "Uuid"
                    }
                },
                actionCode: {
                    serializedName: "ActionCode",
                    type: {
                        name: "String"
                    }
                },
                actionDate: {
                    serializedName: "ActionDate",
                    type: {
                        name: "DateTime"
                    }
                },
                actionComplement: {
                    serializedName: "ActionComplement",
                    type: {
                        name: "String"
                    }
                },
                actionAttributes: {
                    serializedName: "ActionAttributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsDocumentModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.DocumentModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsDocumentModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                title: {
                    serializedName: "Title",
                    type: {
                        name: "String"
                    }
                },
                version: {
                    serializedName: "Version",
                    type: {
                        name: "Number"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                format: {
                    serializedName: "Format",
                    type: {
                        name: "String"
                    }
                },
                formatEnum: {
                    serializedName: "FormatEnum",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    serializedName: "Type",
                    type: {
                        name: "String"
                    }
                },
                typeEnum: {
                    serializedName: "TypeEnum",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                permission: {
                    serializedName: "Permission",
                    type: {
                        name: "String"
                    }
                },
                permissionEnum: {
                    serializedName: "PermissionEnum",
                    type: {
                        name: "String"
                    }
                },
                documentation: {
                    serializedName: "Documentation",
                    type: {
                        name: "String"
                    }
                },
                documentationEnum: {
                    serializedName: "DocumentationEnum",
                    type: {
                        name: "String"
                    }
                },
                reference: {
                    serializedName: "Reference",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyName: {
                    serializedName: "PartyName",
                    type: {
                        name: "String"
                    }
                },
                parties: {
                    serializedName: "Parties",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                forumId: {
                    serializedName: "ForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                parentForumId: {
                    serializedName: "ParentForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                hasRestriction: {
                    readOnly: true,
                    serializedName: "HasRestriction",
                    type: {
                        name: "Boolean"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsAttributeModel"
                            }
                        }
                    }
                },
                partyActions: {
                    serializedName: "PartyActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsDocumentPartyActionModel"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsDocumentApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.DocumentApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsDocumentApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                documents: {
                    serializedName: "Documents",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsDocumentModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsCreateDocumentPartyActionModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.CreateDocumentPartyActionModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsCreateDocumentPartyActionModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                representativeId: {
                    serializedName: "RepresentativeId",
                    type: {
                        name: "Uuid"
                    }
                },
                actionCode: {
                    serializedName: "ActionCode",
                    type: {
                        name: "String"
                    }
                },
                actionDate: {
                    serializedName: "ActionDate",
                    type: {
                        name: "DateTime"
                    }
                },
                actionComplement: {
                    serializedName: "ActionComplement",
                    type: {
                        name: "String"
                    }
                },
                actionAttributes: {
                    serializedName: "ActionAttributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.CreateDocumentModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                title: {
                    serializedName: "Title",
                    type: {
                        name: "String"
                    }
                },
                version: {
                    serializedName: "Version",
                    type: {
                        name: "Number"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                content: {
                    serializedName: "Content",
                    type: {
                        name: "Object"
                    }
                },
                format: {
                    serializedName: "Format",
                    type: {
                        name: "String"
                    }
                },
                typeEnum: {
                    serializedName: "TypeEnum",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                permissionEnum: {
                    serializedName: "PermissionEnum",
                    type: {
                        name: "String"
                    }
                },
                documentationEnum: {
                    serializedName: "DocumentationEnum",
                    type: {
                        name: "String"
                    }
                },
                reference: {
                    serializedName: "Reference",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                forumId: {
                    serializedName: "ForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                parentForumId: {
                    serializedName: "ParentForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsAttributeModel"
                            }
                        }
                    }
                },
                partiesIds: {
                    serializedName: "PartiesIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                hasRestriction: {
                    readOnly: true,
                    serializedName: "HasRestriction",
                    type: {
                        name: "Boolean"
                    }
                },
                partyActions: {
                    serializedName: "PartyActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsCreateDocumentPartyActionModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.CreateDocumentsModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsModel",
            modelProperties: {
                documentModels: {
                    serializedName: "DocumentModels",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsDocumentErrorModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.DocumentErrorModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsDocumentErrorModel",
            modelProperties: {
                title: {
                    serializedName: "Title",
                    type: {
                        name: "String"
                    }
                },
                errorMessage: {
                    serializedName: "ErrorMessage",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsDocumentResponseModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.DocumentResponseModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsDocumentResponseModel",
            modelProperties: {
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                title: {
                    serializedName: "Title",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                error: {
                    serializedName: "Error",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedDocumentModelsDocumentErrorModel"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsResponseModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.CreateDocumentsResponseModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsResponseModel",
            modelProperties: {
                documents: {
                    serializedName: "Documents",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsDocumentResponseModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentContentModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.UpdateDocumentContentModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentContentModel",
            modelProperties: {
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                version: {
                    serializedName: "Version",
                    type: {
                        name: "Number"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                format: {
                    serializedName: "Format",
                    type: {
                        name: "String"
                    }
                },
                formatEnum: {
                    serializedName: "FormatEnum",
                    type: {
                        name: "String"
                    }
                },
                binaryData: {
                    serializedName: "BinaryData",
                    type: {
                        name: "Object"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentMetadatasModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.UpdateDocumentMetadatasModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentMetadatasModel",
            modelProperties: {
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                documentTitle: {
                    serializedName: "DocumentTitle",
                    type: {
                        name: "String"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    serializedName: "Type",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                permission: {
                    serializedName: "Permission",
                    type: {
                        name: "String"
                    }
                },
                currentVersion: {
                    serializedName: "CurrentVersion",
                    type: {
                        name: "Number"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsAttributeModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsEditDocumentAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.EditDocumentAttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsEditDocumentAttributeModel",
            modelProperties: {
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsAttributeModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentPartyActionsModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Document.Models.UpdateDocumentPartyActionsModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentPartyActionsModel",
            modelProperties: {
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                updatedPartyActions: {
                    serializedName: "UpdatedPartyActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsDocumentPartyActionModel"
                            }
                        }
                    }
                },
                deletedPartyActions: {
                    serializedName: "DeletedPartyActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Number"
                            }
                        }
                    }
                },
                createdPartyActions: {
                    serializedName: "CreatedPartyActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedDocumentModelsCreateDocumentPartyActionModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsExchangeForumPartyLinkData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Exchange.ForumPartyLinkData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsExchangeForumPartyLinkData",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                role: {
                    serializedName: "Role",
                    type: {
                        name: "String"
                    }
                },
                roleEnum: {
                    serializedName: "RoleEnum",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsExchangeForumData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Exchange.ForumData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsExchangeForumData",
            modelProperties: {
                forumId: {
                    serializedName: "ForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                parentForumId: {
                    serializedName: "ParentForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                subject: {
                    serializedName: "Subject",
                    type: {
                        name: "String"
                    }
                },
                content: {
                    serializedName: "Content",
                    type: {
                        name: "String"
                    }
                },
                sender: {
                    serializedName: "Sender",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelServiceContractsExchangeForumPartyLinkData"
                    }
                },
                receivers: {
                    serializedName: "Receivers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsExchangeForumPartyLinkData"
                            }
                        }
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileName: {
                    serializedName: "FileName",
                    type: {
                        name: "String"
                    }
                },
                hasDocument: {
                    serializedName: "HasDocument",
                    type: {
                        name: "Boolean"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Exchange.Models.ForumMessageApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData",
            modelProperties: {
                forumIds: {
                    serializedName: "ForumIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                parentForumIds: {
                    serializedName: "ParentForumIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                includeParentForumIds: {
                    serializedName: "IncludeParentForumIds",
                    type: {
                        name: "Boolean"
                    }
                },
                fileIds: {
                    serializedName: "FileIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                noParentsOnly: {
                    serializedName: "NoParentsOnly",
                    type: {
                        name: "Boolean"
                    }
                },
                searchText: {
                    serializedName: "SearchText",
                    type: {
                        name: "String"
                    }
                },
                searchBy: {
                    serializedName: "SearchBy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                orderBy: {
                    serializedName: "OrderBy",
                    type: {
                        name: "String"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                },
                lastRefresh: {
                    serializedName: "LastRefresh",
                    type: {
                        name: "DateTime"
                    }
                },
                isRefresh: {
                    serializedName: "IsRefresh",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedExchangeModelsForumMessagePartyLinkModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Exchange.Models.ForumMessagePartyLinkModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedExchangeModelsForumMessagePartyLinkModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                role: {
                    serializedName: "Role",
                    type: {
                        name: "String"
                    }
                },
                roleEnum: {
                    serializedName: "RoleEnum",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedExchangeModelsAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Exchange.Models.AttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedExchangeModelsAttributeModel",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedExchangeModelsForumMessageModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Exchange.Models.ForumMessageModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedExchangeModelsForumMessageModel",
            modelProperties: {
                forumId: {
                    serializedName: "ForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                parentForumId: {
                    serializedName: "ParentForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                subject: {
                    serializedName: "Subject",
                    type: {
                        name: "String"
                    }
                },
                content: {
                    serializedName: "Content",
                    type: {
                        name: "String"
                    }
                },
                sender: {
                    serializedName: "Sender",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedExchangeModelsForumMessagePartyLinkModel"
                    }
                },
                receivers: {
                    serializedName: "Receivers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedExchangeModelsForumMessagePartyLinkModel"
                            }
                        }
                    }
                },
                hasDocument: {
                    serializedName: "HasDocument",
                    type: {
                        name: "Boolean"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedExchangeModelsAttributeModel"
                            }
                        }
                    }
                },
                lastMessageForum: {
                    serializedName: "LastMessageForum",
                    type: {
                        name: "DateTime"
                    }
                },
                childCount: {
                    serializedName: "ChildCount",
                    type: {
                        name: "Number"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Exchange.Models.ForumMessageApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                messages: {
                    serializedName: "Messages",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedExchangeModelsForumMessageModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Exchange.Models.AddForumMessageModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                parentForumId: {
                    serializedName: "ParentForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                subject: {
                    serializedName: "Subject",
                    type: {
                        name: "String"
                    }
                },
                content: {
                    serializedName: "Content",
                    type: {
                        name: "String"
                    }
                },
                sender: {
                    serializedName: "Sender",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedExchangeModelsForumMessagePartyLinkModel"
                    }
                },
                receivers: {
                    serializedName: "Receivers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedExchangeModelsForumMessagePartyLinkModel"
                            }
                        }
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedExchangeModelsAttributeModel"
                            }
                        }
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Exchange.Models.AddPartyToForumMessagesModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel",
            modelProperties: {
                party: {
                    serializedName: "Party",
                    type: {
                        name: "Uuid"
                    }
                },
                partyName: {
                    serializedName: "PartyName",
                    type: {
                        name: "String"
                    }
                },
                role: {
                    serializedName: "Role",
                    type: {
                        name: "String"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedExchangeModelsAttributeModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Exchange.Models.AddForumMessageAttributesModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                forumId: {
                    serializedName: "ForumId",
                    type: {
                        name: "Uuid"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedExchangeModelsAttributeModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormResourceOptionData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.ResourceOptionData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormResourceOptionData",
            modelProperties: {
                optionId: {
                    serializedName: "OptionId",
                    type: {
                        name: "Uuid"
                    }
                },
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                optionCaption: {
                    serializedName: "OptionCaption",
                    type: {
                        name: "String"
                    }
                },
                optionComplementCaption: {
                    serializedName: "OptionComplementCaption",
                    type: {
                        name: "String"
                    }
                },
                optionHelp: {
                    serializedName: "OptionHelp",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormFormSectionOptionData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.FormSectionOptionData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormFormSectionOptionData",
            modelProperties: {
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                optionVersion: {
                    serializedName: "OptionVersion",
                    type: {
                        name: "Number"
                    }
                },
                complementValue: {
                    serializedName: "ComplementValue",
                    type: {
                        name: "String"
                    }
                },
                partyType: {
                    serializedName: "PartyType",
                    type: {
                        name: "String"
                    }
                },
                optionId: {
                    serializedName: "OptionId",
                    type: {
                        name: "Uuid"
                    }
                },
                sectionId: {
                    serializedName: "SectionId",
                    type: {
                        name: "Uuid"
                    }
                },
                optionCaption: {
                    serializedName: "OptionCaption",
                    type: {
                        name: "String"
                    }
                },
                optionComplementCaption: {
                    serializedName: "OptionComplementCaption",
                    type: {
                        name: "String"
                    }
                },
                optionComplementType: {
                    serializedName: "OptionComplementType",
                    type: {
                        name: "Number"
                    }
                },
                optionComplementLength: {
                    serializedName: "OptionComplementLength",
                    type: {
                        name: "Number"
                    }
                },
                optionHelp: {
                    serializedName: "OptionHelp",
                    type: {
                        name: "String"
                    }
                },
                optionRank: {
                    serializedName: "OptionRank",
                    type: {
                        name: "Number"
                    }
                },
                optionResources: {
                    serializedName: "OptionResources",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormResourceOptionData"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormResourceData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.ResourceData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormResourceData",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                caption: {
                    serializedName: "Caption",
                    type: {
                        name: "String"
                    }
                },
                help: {
                    serializedName: "Help",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormFormSectionData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.FormSectionData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormFormSectionData",
            modelProperties: {
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                sectionOptions: {
                    serializedName: "SectionOptions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormSectionOptionData"
                            }
                        }
                    }
                },
                sectionId: {
                    serializedName: "SectionId",
                    type: {
                        name: "Uuid"
                    }
                },
                formId: {
                    serializedName: "FormId",
                    type: {
                        name: "Uuid"
                    }
                },
                sectionCaption: {
                    serializedName: "SectionCaption",
                    type: {
                        name: "String"
                    }
                },
                sectionHelp: {
                    serializedName: "SectionHelp",
                    type: {
                        name: "String"
                    }
                },
                sectionRank: {
                    serializedName: "SectionRank",
                    type: {
                        name: "Number"
                    }
                },
                sectionResources: {
                    serializedName: "SectionResources",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormResourceData"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormFormQuestionData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.FormQuestionData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData",
            modelProperties: {
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                formSections: {
                    serializedName: "FormSections",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormSectionData"
                            }
                        }
                    }
                },
                formId: {
                    serializedName: "FormId",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                formCaption: {
                    serializedName: "FormCaption",
                    type: {
                        name: "String"
                    }
                },
                formHelp: {
                    serializedName: "FormHelp",
                    type: {
                        name: "String"
                    }
                },
                formRank: {
                    serializedName: "FormRank",
                    type: {
                        name: "Number"
                    }
                },
                formVersion: {
                    serializedName: "FormVersion",
                    type: {
                        name: "Number"
                    }
                },
                formCode: {
                    serializedName: "FormCode",
                    type: {
                        name: "String"
                    }
                },
                formStatus: {
                    serializedName: "FormStatus",
                    type: {
                        name: "String"
                    }
                },
                formStatusEnum: {
                    serializedName: "FormStatusEnum",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormFormData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.FormData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormFormData",
            modelProperties: {
                formResources: {
                    serializedName: "FormResources",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormResourceData"
                            }
                        }
                    }
                },
                problemDescriptionSections: {
                    serializedName: "ProblemDescriptionSections",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormSectionData"
                            }
                        }
                    }
                },
                solutionProposalSections: {
                    serializedName: "SolutionProposalSections",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormSectionData"
                            }
                        }
                    }
                },
                formId: {
                    serializedName: "FormId",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                formCaption: {
                    serializedName: "FormCaption",
                    type: {
                        name: "String"
                    }
                },
                formHelp: {
                    serializedName: "FormHelp",
                    type: {
                        name: "String"
                    }
                },
                formRank: {
                    serializedName: "FormRank",
                    type: {
                        name: "Number"
                    }
                },
                formVersion: {
                    serializedName: "FormVersion",
                    type: {
                        name: "Number"
                    }
                },
                formCode: {
                    serializedName: "FormCode",
                    type: {
                        name: "String"
                    }
                },
                formStatus: {
                    serializedName: "FormStatus",
                    type: {
                        name: "String"
                    }
                },
                formStatusEnum: {
                    serializedName: "FormStatusEnum",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionOptionData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.FormPartyDescriptionOptionData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionOptionData",
            modelProperties: {
                formDescriptionOptionId: {
                    serializedName: "FormDescriptionOptionId",
                    type: {
                        name: "Uuid"
                    }
                },
                formDescriptionPartyId: {
                    serializedName: "FormDescriptionPartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                descriptionOptionId: {
                    serializedName: "DescriptionOptionId",
                    type: {
                        name: "Uuid"
                    }
                },
                caseDescriptionOptionComplement: {
                    serializedName: "CaseDescriptionOptionComplement",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.FormPartyDescriptionData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionData",
            modelProperties: {
                formDescriptionPartyId: {
                    serializedName: "FormDescriptionPartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                formId: {
                    serializedName: "FormId",
                    type: {
                        name: "Uuid"
                    }
                },
                descriptionOther: {
                    serializedName: "DescriptionOther",
                    type: {
                        name: "String"
                    }
                },
                descriptionProblem: {
                    serializedName: "DescriptionProblem",
                    type: {
                        name: "String"
                    }
                },
                descriptionDate: {
                    serializedName: "DescriptionDate",
                    type: {
                        name: "DateTime"
                    }
                },
                descriptionSectionVersion: {
                    serializedName: "DescriptionSectionVersion",
                    type: {
                        name: "Number"
                    }
                },
                optionList: {
                    serializedName: "OptionList",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionOptionData"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormApprovalPartyData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.ApprovalPartyData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormApprovalPartyData",
            modelProperties: {
                replyDate: {
                    serializedName: "ReplyDate",
                    type: {
                        name: "DateTime"
                    }
                },
                replyState: {
                    serializedName: "ReplyState",
                    type: {
                        name: "Number"
                    }
                },
                approvalJournalId: {
                    serializedName: "ApprovalJournalId",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyType: {
                    serializedName: "PartyType",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormFormProposalPartyOptionData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.FormProposalPartyOptionData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormFormProposalPartyOptionData",
            modelProperties: {
                formProposalOptionId: {
                    serializedName: "FormProposalOptionId",
                    type: {
                        name: "Uuid"
                    }
                },
                formProposalPartyId: {
                    serializedName: "FormProposalPartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                proposalOptionId: {
                    serializedName: "ProposalOptionId",
                    type: {
                        name: "Uuid"
                    }
                },
                caseProposalOptionComplement: {
                    serializedName: "CaseProposalOptionComplement",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormFormPartyProposalData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.FormPartyProposalData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormFormPartyProposalData",
            modelProperties: {
                formProposalPartyId: {
                    serializedName: "FormProposalPartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                formId: {
                    serializedName: "FormId",
                    type: {
                        name: "Uuid"
                    }
                },
                proposalOther: {
                    serializedName: "ProposalOther",
                    type: {
                        name: "String"
                    }
                },
                proposalState: {
                    serializedName: "ProposalState",
                    type: {
                        name: "Number"
                    }
                },
                proposalDate: {
                    serializedName: "ProposalDate",
                    type: {
                        name: "DateTime"
                    }
                },
                proposalWhy: {
                    serializedName: "ProposalWhy",
                    type: {
                        name: "String"
                    }
                },
                proposalSectionVersion: {
                    serializedName: "ProposalSectionVersion",
                    type: {
                        name: "Number"
                    }
                },
                approvalPartyList: {
                    serializedName: "ApprovalPartyList",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormApprovalPartyData"
                            }
                        }
                    }
                },
                optionList: {
                    serializedName: "OptionList",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormProposalPartyOptionData"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsFormPartyQuestionProposalCountData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Form.PartyQuestionProposalCountData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsFormPartyQuestionProposalCountData",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                proposalNb: {
                    serializedName: "ProposalNb",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedFormModelsQuestionFormApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Form.Models.QuestionFormApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedFormModelsQuestionFormApiRequestData",
            modelProperties: {
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                formIds: {
                    serializedName: "FormIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                formCodes: {
                    serializedName: "FormCodes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                formCaptions: {
                    serializedName: "FormCaptions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                searchText: {
                    serializedName: "SearchText",
                    type: {
                        name: "String"
                    }
                },
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                searchBy: {
                    serializedName: "SearchBy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                orderBy: {
                    serializedName: "OrderBy",
                    type: {
                        name: "String"
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                isOrderByDescending: {
                    serializedName: "IsOrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedFormModelsQuestionFormModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Form.Models.QuestionFormModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedFormModelsQuestionFormModel",
            modelProperties: {
                formId: {
                    serializedName: "FormId",
                    type: {
                        name: "Uuid"
                    }
                },
                formCode: {
                    serializedName: "FormCode",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                formCaption: {
                    serializedName: "FormCaption",
                    type: {
                        name: "String"
                    }
                },
                formHelp: {
                    serializedName: "FormHelp",
                    type: {
                        name: "String"
                    }
                },
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                formRank: {
                    serializedName: "FormRank",
                    type: {
                        name: "Number"
                    }
                },
                formVersion: {
                    serializedName: "FormVersion",
                    type: {
                        name: "Number"
                    }
                },
                formStatus: {
                    serializedName: "FormStatus",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedFormModelsQuestionFormApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Form.Models.QuestionFormApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedFormModelsQuestionFormApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                questionForms: {
                    serializedName: "QuestionForms",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedFormModelsQuestionFormModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsHearingMenuData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Hearing.MenuData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsHearingMenuData",
            modelProperties: {
                menuId: {
                    serializedName: "MenuId",
                    type: {
                        name: "Uuid"
                    }
                },
                hearingId: {
                    serializedName: "HearingId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                position: {
                    serializedName: "Position",
                    type: {
                        name: "Number"
                    }
                },
                parentId: {
                    serializedName: "ParentId",
                    type: {
                        name: "Uuid"
                    }
                },
                rootId: {
                    serializedName: "RootId",
                    type: {
                        name: "Uuid"
                    }
                },
                listDocumentId: {
                    serializedName: "ListDocumentId",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                listSubMenus: {
                    serializedName: "ListSubMenus",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsHearingMenuData"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJournalJournalData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Journal.JournalData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJournalJournalData",
            modelProperties: {
                journalId: {
                    serializedName: "JournalId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                isSystemEntry: {
                    serializedName: "IsSystemEntry",
                    type: {
                        name: "Number"
                    }
                },
                journalDate: {
                    serializedName: "JournalDate",
                    type: {
                        name: "DateTime"
                    }
                },
                journalTitle: {
                    serializedName: "JournalTitle",
                    type: {
                        name: "String"
                    }
                },
                journalFrom: {
                    serializedName: "JournalFrom",
                    type: {
                        name: "String"
                    }
                },
                journalTo: {
                    serializedName: "JournalTo",
                    type: {
                        name: "String"
                    }
                },
                journalCc: {
                    serializedName: "JournalCc",
                    type: {
                        name: "String"
                    }
                },
                journalDescription: {
                    serializedName: "JournalDescription",
                    type: {
                        name: "String"
                    }
                },
                journalKey: {
                    serializedName: "JournalKey",
                    type: {
                        name: "String"
                    }
                },
                journalParameters: {
                    serializedName: "JournalParameters",
                    type: {
                        name: "String"
                    }
                },
                journalParametersArray: {
                    serializedName: "JournalParametersArray",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJournalModelsJournalModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Journal.Models.JournalModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJournalModelsJournalModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                journalCode: {
                    serializedName: "JournalCode",
                    type: {
                        name: "String"
                    }
                },
                journalDate: {
                    serializedName: "JournalDate",
                    type: {
                        name: "DateTime"
                    }
                },
                journalSubject: {
                    serializedName: "JournalSubject",
                    type: {
                        name: "String"
                    }
                },
                journalFrom: {
                    serializedName: "JournalFrom",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJournalModelsJournalApiResquestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Journal.Models.JournalApiResquestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJournalModelsJournalApiResquestData",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                currentLanguage: {
                    serializedName: "CurrentLanguage",
                    type: {
                        name: "String"
                    }
                },
                searchText: {
                    serializedName: "SearchText",
                    type: {
                        name: "String"
                    }
                },
                searchBy: {
                    serializedName: "SearchBy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                orderBy: {
                    serializedName: "OrderBy",
                    type: {
                        name: "String"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJournalModelsJournalApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Journal.Models.JournalApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJournalModelsJournalApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                journals: {
                    serializedName: "Journals",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJournalModelsJournalModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResquestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Journal.Models.JournalLatestApiResquestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResquestData",
            modelProperties: {
                language: {
                    serializedName: "Language",
                    type: {
                        name: "String"
                    }
                },
                fileIds: {
                    serializedName: "FileIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJournalModelsFileLatestJournalModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Journal.Models.FileLatestJournalModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJournalModelsFileLatestJournalModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                journalDate: {
                    serializedName: "JournalDate",
                    type: {
                        name: "DateTime"
                    }
                },
                journalMessage: {
                    serializedName: "JournalMessage",
                    type: {
                        name: "String"
                    }
                },
                journalId: {
                    serializedName: "JournalId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Journal.Models.JournalLatestApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResponseData",
            modelProperties: {
                journals: {
                    serializedName: "Journals",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJournalModelsFileLatestJournalModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJournalModelsCreateJournalModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Journal.Models.CreateJournalModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJournalModelsCreateJournalModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                journalKey: {
                    serializedName: "JournalKey",
                    type: {
                        name: "String"
                    }
                },
                journalParameters: {
                    serializedName: "JournalParameters",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialEntityNeutralPredicateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialEntity.NeutralPredicateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialEntityNeutralPredicateData",
            modelProperties: {
                neutralPredicateId: {
                    serializedName: "NeutralPredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                neutralPredicateName: {
                    serializedName: "NeutralPredicateName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialEntityProsecutingAgentPredicateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialEntity.ProsecutingAgentPredicateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialEntityProsecutingAgentPredicateData",
            modelProperties: {
                prosecutingAgentPredicateId: {
                    serializedName: "ProsecutingAgentPredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                prosecutingAgentPredicateName: {
                    serializedName: "ProsecutingAgentPredicateName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialEntityJudicialEntityData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialEntity.JudicialEntityData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialEntityJudicialEntityData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                uRN: {
                    serializedName: "URN",
                    type: {
                        name: "String"
                    }
                },
                clerkPredicateId: {
                    serializedName: "ClerkPredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                clerkPredicateName: {
                    serializedName: "ClerkPredicateName",
                    type: {
                        name: "String"
                    }
                },
                judgePredicateId: {
                    serializedName: "JudgePredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                judgePredicateName: {
                    serializedName: "JudgePredicateName",
                    type: {
                        name: "String"
                    }
                },
                tenantPredicateId: {
                    serializedName: "TenantPredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                tenantPredicateName: {
                    serializedName: "TenantPredicateName",
                    type: {
                        name: "String"
                    }
                },
                neutralPredicates: {
                    serializedName: "NeutralPredicates",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialEntityNeutralPredicateData"
                            }
                        }
                    }
                },
                prosecutingAgentPredicates: {
                    serializedName: "ProsecutingAgentPredicates",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialEntityProsecutingAgentPredicateData"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialEntity.Models.MatterApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiRequestData",
            modelProperties: {
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialEntityModelsMatterModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialEntity.Models.MatterModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialEntityModelsMatterModel",
            modelProperties: {
                matterId: {
                    serializedName: "MatterId",
                    type: {
                        name: "Uuid"
                    }
                },
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialEntity.Models.MatterApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                matters: {
                    serializedName: "Matters",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialEntityModelsMatterModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialEntity.Models.JudicialEntityApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiRequestData",
            modelProperties: {
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                },
                filterByMatter: {
                    serializedName: "FilterByMatter",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialEntityModelsEntityNeutralPredicateLinkModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialEntity.Models.EntityNeutralPredicateLinkModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialEntityModelsEntityNeutralPredicateLinkModel",
            modelProperties: {
                neutralPredicateId: {
                    serializedName: "NeutralPredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                neutralPredicateName: {
                    serializedName: "NeutralPredicateName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialEntityModelsEntityProsecutingAgentPredicateLinkModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialEntity.Models.EntityProsecutingAgentPredicateLinkModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialEntityModelsEntityProsecutingAgentPredicateLinkModel",
            modelProperties: {
                predicateId: {
                    serializedName: "PredicateId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialEntityModelsMatterJudicialEntityLinkModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialEntity.Models.MatterJudicialEntityLinkModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialEntityModelsMatterJudicialEntityLinkModel",
            modelProperties: {
                matter: {
                    serializedName: "Matter",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialEntityModelsMatterModel"
                    }
                },
                businessRuleId: {
                    serializedName: "BusinessRuleId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialEntity.Models.JudicialEntityModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityModel",
            modelProperties: {
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                uRN: {
                    serializedName: "URN",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                clerkPredicateId: {
                    serializedName: "ClerkPredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                clerkPredicateName: {
                    serializedName: "ClerkPredicateName",
                    type: {
                        name: "String"
                    }
                },
                judgePredicateId: {
                    serializedName: "JudgePredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                judgePredicateName: {
                    serializedName: "JudgePredicateName",
                    type: {
                        name: "String"
                    }
                },
                tenantPredicateId: {
                    serializedName: "TenantPredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                tenantPredicateName: {
                    serializedName: "TenantPredicateName",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                entityNeutralPredicateLinks: {
                    serializedName: "EntityNeutralPredicateLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialEntityModelsEntityNeutralPredicateLinkModel"
                            }
                        }
                    }
                },
                entityProsecutingAgentPredicateLinks: {
                    serializedName: "EntityProsecutingAgentPredicateLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialEntityModelsEntityProsecutingAgentPredicateLinkModel"
                            }
                        }
                    }
                },
                judicialEntityMatterLinks: {
                    serializedName: "JudicialEntityMatterLinks",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialEntityModelsMatterJudicialEntityLinkModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialEntity.Models.JudicialEntityApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                judicialEntities: {
                    serializedName: "JudicialEntities",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsDetachRepresentativeFromPartyModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.DetachRepresentativeFromPartyModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsDetachRepresentativeFromPartyModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                representativeId: {
                    serializedName: "RepresentativeId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileContactPhoneNumberData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.ContactPhoneNumberData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileContactPhoneNumberData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                phoneNumber: {
                    serializedName: "PhoneNumber",
                    type: {
                        name: "String"
                    }
                },
                phoneTypeID: {
                    serializedName: "PhoneTypeID",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileContactAttributeData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.ContactAttributeData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileContactAttributeData",
            modelProperties: {
                contactAttributeKey: {
                    serializedName: "ContactAttributeKey",
                    type: {
                        name: "String"
                    }
                },
                contactAttributeValue: {
                    serializedName: "ContactAttributeValue",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileContactData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.ContactData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileContactData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                isCompany: {
                    serializedName: "IsCompany",
                    type: {
                        name: "Boolean"
                    }
                },
                companyName: {
                    serializedName: "CompanyName",
                    type: {
                        name: "String"
                    }
                },
                firstName: {
                    serializedName: "FirstName",
                    type: {
                        name: "String"
                    }
                },
                lastName: {
                    serializedName: "LastName",
                    type: {
                        name: "String"
                    }
                },
                adresse: {
                    serializedName: "Adresse",
                    type: {
                        name: "String"
                    }
                },
                adresse2: {
                    serializedName: "Adresse2",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                state: {
                    serializedName: "State",
                    type: {
                        name: "String"
                    }
                },
                country: {
                    serializedName: "Country",
                    type: {
                        name: "String"
                    }
                },
                zipCode: {
                    serializedName: "ZipCode",
                    type: {
                        name: "String"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                website: {
                    serializedName: "Website",
                    type: {
                        name: "String"
                    }
                },
                latitude: {
                    serializedName: "Latitude",
                    type: {
                        name: "String"
                    }
                },
                longitude: {
                    serializedName: "Longitude",
                    type: {
                        name: "String"
                    }
                },
                phoneNumbers: {
                    serializedName: "PhoneNumbers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileContactPhoneNumberData"
                            }
                        }
                    }
                },
                contactAttributes: {
                    serializedName: "ContactAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileContactAttributeData"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.RepresentativeData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                contact: {
                    serializedName: "Contact",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelServiceContractsJudicialFileContactData"
                    }
                },
                fileInternalReferenceNumber: {
                    serializedName: "FileInternalReferenceNumber",
                    type: {
                        name: "String"
                    }
                },
                predicateID: {
                    serializedName: "PredicateID",
                    type: {
                        name: "Uuid"
                    }
                },
                predicateName: {
                    serializedName: "PredicateName",
                    type: {
                        name: "String"
                    }
                },
                authorityId: {
                    serializedName: "AuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                competenceCategories: {
                    serializedName: "CompetenceCategories",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileChargeAttributeData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.ChargeAttributeData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileChargeAttributeData",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFilePleaData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.PleaData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFilePleaData",
            modelProperties: {
                pleaId: {
                    serializedName: "PleaId",
                    type: {
                        name: "Uuid"
                    }
                },
                chargeId: {
                    serializedName: "ChargeId",
                    type: {
                        name: "Uuid"
                    }
                },
                type: {
                    serializedName: "Type",
                    type: {
                        name: "String"
                    }
                },
                typeEnum: {
                    serializedName: "TypeEnum",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                statusReason: {
                    serializedName: "StatusReason",
                    type: {
                        name: "String"
                    }
                },
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileChargePenalOffenceStatementData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.ChargePenalOffenceStatementData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileChargePenalOffenceStatementData",
            modelProperties: {
                offenceStatementDate: {
                    serializedName: "OffenceStatementDate",
                    type: {
                        name: "DateTime"
                    }
                },
                offenceStatementDescription: {
                    serializedName: "OffenceStatementDescription",
                    type: {
                        name: "String"
                    }
                },
                offenceStatementNumber: {
                    serializedName: "OffenceStatementNumber",
                    type: {
                        name: "String"
                    }
                },
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                chargeId: {
                    serializedName: "ChargeId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                ruleType: {
                    serializedName: "RuleType",
                    type: {
                        name: "String"
                    }
                },
                ruleCode: {
                    serializedName: "RuleCode",
                    type: {
                        name: "String"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileChargeAttributeData"
                            }
                        }
                    }
                },
                plea: {
                    serializedName: "Plea",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelServiceContractsJudicialFilePleaData"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFilePartyAttributeData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.PartyAttributeData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFilePartyAttributeData",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFilePartyHearingPreferenceTimeData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.PartyHearingPreferenceTimeData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFilePartyHearingPreferenceTimeData",
            modelProperties: {
                startTime: {
                    serializedName: "StartTime",
                    type: {
                        name: "String"
                    }
                },
                endTime: {
                    serializedName: "EndTime",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFilePartyData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.PartyData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFilePartyData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyType: {
                    serializedName: "PartyType",
                    type: {
                        name: "String"
                    }
                },
                contact: {
                    serializedName: "Contact",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelServiceContractsJudicialFileContactData"
                    }
                },
                mainRepresentativeContact: {
                    serializedName: "MainRepresentativeContact",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelServiceContractsJudicialFileContactData"
                    }
                },
                representatives: {
                    serializedName: "Representatives",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeData"
                            }
                        }
                    }
                },
                disputeDescription: {
                    serializedName: "DisputeDescription",
                    type: {
                        name: "String"
                    }
                },
                authorityId: {
                    serializedName: "AuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyEntityId: {
                    serializedName: "PartyEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                penalCharges: {
                    serializedName: "PenalCharges",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileChargePenalOffenceStatementData"
                            }
                        }
                    }
                },
                partyAttributes: {
                    serializedName: "PartyAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFilePartyAttributeData"
                            }
                        }
                    }
                },
                hearingPreferenceTimes: {
                    serializedName: "HearingPreferenceTimes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFilePartyHearingPreferenceTimeData"
                            }
                        }
                    }
                },
                hearingPreferenceLocations: {
                    serializedName: "HearingPreferenceLocations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileTrackingStatusData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.TrackingStatusData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileTrackingStatusData",
            modelProperties: {
                judicialFileStatus: {
                    serializedName: "JudicialFileStatus",
                    type: {
                        name: "String"
                    }
                },
                judicialFileStatusEnum: {
                    serializedName: "JudicialFileStatusEnum",
                    type: {
                        name: "String"
                    }
                },
                date: {
                    serializedName: "Date",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileAttributeData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.AttributeData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileAttributeData",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileTagData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.JudicialFileTagData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileTagData",
            modelProperties: {
                tagId: {
                    serializedName: "TagId",
                    type: {
                        name: "Uuid"
                    }
                },
                tagCode: {
                    serializedName: "TagCode",
                    type: {
                        name: "String"
                    }
                },
                taskStatus: {
                    serializedName: "TaskStatus",
                    type: {
                        name: "String"
                    }
                },
                taskActor: {
                    serializedName: "TaskActor",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.JudicialFileData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialFileID: {
                    serializedName: "JudicialFileID",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityID: {
                    serializedName: "JudicialEntityID",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialEntityName: {
                    serializedName: "JudicialEntityName",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                parties: {
                    serializedName: "Parties",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFilePartyData"
                            }
                        }
                    }
                },
                permission: {
                    serializedName: "Permission",
                    type: {
                        name: "String"
                    }
                },
                permissionEnum: {
                    serializedName: "PermissionEnum",
                    type: {
                        name: "String"
                    }
                },
                formId: {
                    serializedName: "FormId",
                    type: {
                        name: "Uuid"
                    }
                },
                businessRuleId: {
                    serializedName: "BusinessRuleId",
                    type: {
                        name: "Uuid"
                    }
                },
                businessRuleName: {
                    serializedName: "BusinessRuleName",
                    type: {
                        name: "String"
                    }
                },
                closingReason: {
                    serializedName: "ClosingReason",
                    type: {
                        name: "String"
                    }
                },
                closingReasonEnum: {
                    serializedName: "ClosingReasonEnum",
                    type: {
                        name: "String"
                    }
                },
                statusBeforeClosing: {
                    serializedName: "StatusBeforeClosing",
                    type: {
                        name: "String"
                    }
                },
                statusBeforeClosingEnum: {
                    serializedName: "StatusBeforeClosingEnum",
                    type: {
                        name: "String"
                    }
                },
                procedureCategory: {
                    serializedName: "ProcedureCategory",
                    type: {
                        name: "String"
                    }
                },
                procedureCategoryEnum: {
                    serializedName: "ProcedureCategoryEnum",
                    type: {
                        name: "String"
                    }
                },
                agentAuthorityId: {
                    serializedName: "AgentAuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                trackingStatuses: {
                    serializedName: "TrackingStatuses",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileTrackingStatusData"
                            }
                        }
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileAttributeData"
                            }
                        }
                    }
                },
                fileTags: {
                    serializedName: "FileTags",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileTagData"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResquestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.JudicialFileApiResquestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResquestData",
            modelProperties: {
                fileIds: {
                    serializedName: "FileIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                judicialFileIds: {
                    serializedName: "JudicialFileIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                judicialEntityIds: {
                    serializedName: "JudicialEntityIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                businessRuleNames: {
                    serializedName: "BusinessRuleNames",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                representativeIds: {
                    serializedName: "RepresentativeIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                excludedFormCodes: {
                    serializedName: "ExcludedFormCodes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                includedFormIds: {
                    serializedName: "IncludedFormIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                excludedStatuses: {
                    serializedName: "ExcludedStatuses",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                fileAttributesQuery: {
                    serializedName: "FileAttributesQuery",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                statuses: {
                    serializedName: "Statuses",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                closingReasons: {
                    serializedName: "ClosingReasons",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                minCreatedDate: {
                    serializedName: "MinCreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                maxCreatedDate: {
                    serializedName: "MaxCreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                searchStatuses: {
                    serializedName: "SearchStatuses",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                searchText: {
                    serializedName: "SearchText",
                    type: {
                        name: "String"
                    }
                },
                searchBy: {
                    serializedName: "SearchBy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                searchActions: {
                    serializedName: "SearchActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                orderBy: {
                    serializedName: "OrderBy",
                    type: {
                        name: "String"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsContactPhoneNumberModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.ContactPhoneNumberModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsContactPhoneNumberModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                phoneNumber: {
                    serializedName: "PhoneNumber",
                    type: {
                        name: "String"
                    }
                },
                phoneTypeId: {
                    serializedName: "PhoneTypeId",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsContactAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.ContactAttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsContactAttributeModel",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsContactModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.ContactModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsContactModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                isCompany: {
                    serializedName: "IsCompany",
                    type: {
                        name: "Boolean"
                    }
                },
                companyName: {
                    serializedName: "CompanyName",
                    type: {
                        name: "String"
                    }
                },
                firstName: {
                    serializedName: "FirstName",
                    type: {
                        name: "String"
                    }
                },
                lastName: {
                    serializedName: "LastName",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                address2: {
                    serializedName: "Address2",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                state: {
                    serializedName: "State",
                    type: {
                        name: "String"
                    }
                },
                country: {
                    serializedName: "Country",
                    type: {
                        name: "String"
                    }
                },
                zipCode: {
                    serializedName: "ZipCode",
                    type: {
                        name: "String"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                website: {
                    serializedName: "Website",
                    type: {
                        name: "String"
                    }
                },
                latitude: {
                    serializedName: "Latitude",
                    type: {
                        name: "String"
                    }
                },
                longitude: {
                    serializedName: "Longitude",
                    type: {
                        name: "String"
                    }
                },
                phoneNumbers: {
                    serializedName: "PhoneNumbers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsContactPhoneNumberModel"
                            }
                        }
                    }
                },
                contactAttributes: {
                    serializedName: "ContactAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsContactAttributeModel"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPartyRepresentativeLinkAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PartyRepresentativeLinkAttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyRepresentativeLinkAttributeModel",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.RepresentativeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                contact: {
                    serializedName: "Contact",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsContactModel"
                    }
                },
                fileInternalReferenceNumber: {
                    serializedName: "FileInternalReferenceNumber",
                    type: {
                        name: "String"
                    }
                },
                predicateId: {
                    serializedName: "PredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                predicateName: {
                    serializedName: "PredicateName",
                    type: {
                        name: "String"
                    }
                },
                authorityId: {
                    serializedName: "AuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                competenceCategories: {
                    serializedName: "CompetenceCategories",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                partyRepresentativeLinkAttributes: {
                    serializedName: "PartyRepresentativeLinkAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyRepresentativeLinkAttributeModel"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsChargeAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.ChargeAttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsChargeAttributeModel",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPleaModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PleaModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPleaModel",
            modelProperties: {
                pleaId: {
                    serializedName: "PleaId",
                    type: {
                        name: "Uuid"
                    }
                },
                chargeId: {
                    serializedName: "ChargeId",
                    type: {
                        name: "Uuid"
                    }
                },
                type: {
                    serializedName: "Type",
                    type: {
                        name: "String"
                    }
                },
                typeEnum: {
                    serializedName: "TypeEnum",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                statusReason: {
                    serializedName: "StatusReason",
                    type: {
                        name: "String"
                    }
                },
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsChargePenalOffenceStatementModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.ChargePenalOffenceStatementModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsChargePenalOffenceStatementModel",
            modelProperties: {
                offenceStatementDate: {
                    serializedName: "OffenceStatementDate",
                    type: {
                        name: "DateTime"
                    }
                },
                offenceStatementDescription: {
                    serializedName: "OffenceStatementDescription",
                    type: {
                        name: "String"
                    }
                },
                offenceStatementNumber: {
                    serializedName: "OffenceStatementNumber",
                    type: {
                        name: "String"
                    }
                },
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                chargeId: {
                    serializedName: "ChargeId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                ruleType: {
                    serializedName: "RuleType",
                    type: {
                        name: "String"
                    }
                },
                ruleCode: {
                    serializedName: "RuleCode",
                    type: {
                        name: "String"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsChargeAttributeModel"
                            }
                        }
                    }
                },
                plea: {
                    serializedName: "Plea",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsPleaModel"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPartyAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PartyAttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyAttributeModel",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPartyHearingPreferenceTimeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PartyHearingPreferenceTimeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyHearingPreferenceTimeModel",
            modelProperties: {
                startTime: {
                    serializedName: "StartTime",
                    type: {
                        name: "String"
                    }
                },
                endTime: {
                    serializedName: "EndTime",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPartyModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PartyModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyType: {
                    serializedName: "PartyType",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                contact: {
                    serializedName: "Contact",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsContactModel"
                    }
                },
                mainRepresentativeContact: {
                    serializedName: "MainRepresentativeContact",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsContactModel"
                    }
                },
                representatives: {
                    serializedName: "Representatives",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeModel"
                            }
                        }
                    }
                },
                disputeDescription: {
                    serializedName: "DisputeDescription",
                    type: {
                        name: "String"
                    }
                },
                authorityId: {
                    serializedName: "AuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyEntityId: {
                    serializedName: "PartyEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                penalCharges: {
                    serializedName: "PenalCharges",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsChargePenalOffenceStatementModel"
                            }
                        }
                    }
                },
                partyAttributes: {
                    serializedName: "PartyAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyAttributeModel"
                            }
                        }
                    }
                },
                hearingPreferenceTimes: {
                    serializedName: "HearingPreferenceTimes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyHearingPreferenceTimeModel"
                            }
                        }
                    }
                },
                hearingPreferenceLocations: {
                    serializedName: "HearingPreferenceLocations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsTrackingStatusModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.TrackingStatusModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsTrackingStatusModel",
            modelProperties: {
                judicialFileStatus: {
                    serializedName: "JudicialFileStatus",
                    type: {
                        name: "String"
                    }
                },
                judicialFileStatusEnum: {
                    serializedName: "JudicialFileStatusEnum",
                    type: {
                        name: "String"
                    }
                },
                date: {
                    serializedName: "Date",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsFileAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.FileAttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsFileAttributeModel",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.JudicialFileTagComplementModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel",
            modelProperties: {
                complementId: {
                    serializedName: "ComplementId",
                    type: {
                        name: "Uuid"
                    }
                },
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                actor: {
                    serializedName: "Actor",
                    type: {
                        name: "String"
                    }
                },
                date: {
                    serializedName: "Date",
                    type: {
                        name: "DateTime"
                    }
                },
                additionalText: {
                    serializedName: "AdditionalText",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.JudicialFileTagModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagModel",
            modelProperties: {
                tagId: {
                    serializedName: "TagId",
                    type: {
                        name: "Uuid"
                    }
                },
                tagCode: {
                    serializedName: "TagCode",
                    type: {
                        name: "String"
                    }
                },
                taskStatus: {
                    serializedName: "TaskStatus",
                    type: {
                        name: "String"
                    }
                },
                taskActor: {
                    serializedName: "TaskActor",
                    type: {
                        name: "String"
                    }
                },
                complements: {
                    serializedName: "Complements",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.JudicialFileModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileModel",
            modelProperties: {
                businessRuleId: {
                    serializedName: "BusinessRuleId",
                    type: {
                        name: "Uuid"
                    }
                },
                businessRuleName: {
                    serializedName: "BusinessRuleName",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialEntityName: {
                    serializedName: "JudicialEntityName",
                    type: {
                        name: "String"
                    }
                },
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                parties: {
                    serializedName: "Parties",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyModel"
                            }
                        }
                    }
                },
                permission: {
                    serializedName: "Permission",
                    type: {
                        name: "String"
                    }
                },
                permissionEnum: {
                    serializedName: "PermissionEnum",
                    type: {
                        name: "String"
                    }
                },
                formId: {
                    serializedName: "FormId",
                    type: {
                        name: "Uuid"
                    }
                },
                closingReason: {
                    serializedName: "ClosingReason",
                    type: {
                        name: "String"
                    }
                },
                statusBeforeClosing: {
                    serializedName: "StatusBeforeClosing",
                    type: {
                        name: "String"
                    }
                },
                statusBeforeClosingEnum: {
                    serializedName: "StatusBeforeClosingEnum",
                    type: {
                        name: "String"
                    }
                },
                procedureCategory: {
                    serializedName: "ProcedureCategory",
                    type: {
                        name: "String"
                    }
                },
                procedureCategoryEnum: {
                    serializedName: "ProcedureCategoryEnum",
                    type: {
                        name: "String"
                    }
                },
                agentAuthorityId: {
                    serializedName: "AgentAuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                trackingStatuses: {
                    serializedName: "TrackingStatuses",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsTrackingStatusModel"
                            }
                        }
                    }
                },
                fileAttributes: {
                    serializedName: "FileAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsFileAttributeModel"
                            }
                        }
                    }
                },
                fileTags: {
                    serializedName: "FileTags",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagModel"
                            }
                        }
                    }
                },
                matterId: {
                    serializedName: "MatterId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.JudicialFileApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                files: {
                    serializedName: "Files",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet1Data = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.JudicialFileSet1Data",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet1Data",
            modelProperties: {
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet2Data = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.JudicialFileSet2Data",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet2Data",
            modelProperties: {
                statusEnum: {
                    serializedName: "StatusEnum",
                    type: {
                        name: "String"
                    }
                },
                closingReasonEnum: {
                    serializedName: "ClosingReasonEnum",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeProfileData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.RepresentativeProfileData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeProfileData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                userName: {
                    serializedName: "UserName",
                    type: {
                        name: "String"
                    }
                },
                contactInfo: {
                    serializedName: "ContactInfo",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelServiceContractsJudicialFileContactData"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeUserData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.RepresentativeUserData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeUserData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                representativeProfiles: {
                    serializedName: "RepresentativeProfiles",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeProfileData"
                            }
                        }
                    }
                },
                predicateID: {
                    serializedName: "PredicateID",
                    type: {
                        name: "Uuid"
                    }
                },
                predicateName: {
                    serializedName: "PredicateName",
                    type: {
                        name: "String"
                    }
                },
                authorityId: {
                    serializedName: "AuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                competenceCategories: {
                    serializedName: "CompetenceCategories",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileOfPartyEntityData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.JudicialFileOfPartyEntityData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileOfPartyEntityData",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFilePartyEntityData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.PartyEntityData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFilePartyEntityData",
            modelProperties: {
                partyEntityId: {
                    serializedName: "PartyEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyEntityCode: {
                    serializedName: "PartyEntityCode",
                    type: {
                        name: "String"
                    }
                },
                partyEntityStatus: {
                    serializedName: "PartyEntityStatus",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                contact: {
                    serializedName: "Contact",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelServiceContractsJudicialFileContactData"
                    }
                },
                representatives: {
                    serializedName: "Representatives",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeUserData"
                            }
                        }
                    }
                },
                judicialFiles: {
                    serializedName: "JudicialFiles",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileOfPartyEntityData"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleEntityData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.BusinessRuleEntityData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleEntityData",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                businessRuleId: {
                    serializedName: "BusinessRuleId",
                    type: {
                        name: "Uuid"
                    }
                },
                applicationName: {
                    serializedName: "ApplicationName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.BusinessRuleData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleData",
            modelProperties: {
                businessRuleId: {
                    serializedName: "BusinessRuleId",
                    type: {
                        name: "Uuid"
                    }
                },
                businessRuleName: {
                    serializedName: "BusinessRuleName",
                    type: {
                        name: "String"
                    }
                },
                businessRuleEntities: {
                    serializedName: "BusinessRuleEntities",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleEntityData"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileNeutralZipCodeData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.NeutralZipCodeData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileNeutralZipCodeData",
            modelProperties: {
                representativeId: {
                    serializedName: "RepresentativeId",
                    type: {
                        name: "Uuid"
                    }
                },
                zipCode: {
                    serializedName: "ZipCode",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileVerifyData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.JudicialFile.JudicialFileVerifyData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileVerifyData",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "String"
                    }
                },
                currentUserIsRepresentative: {
                    serializedName: "CurrentUserIsRepresentative",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.FileInvitationModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationModel",
            modelProperties: {
                fileInvitationId: {
                    serializedName: "FileInvitationId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                representativeId: {
                    serializedName: "RepresentativeId",
                    type: {
                        name: "Uuid"
                    }
                },
                applicationName: {
                    serializedName: "ApplicationName",
                    type: {
                        name: "String"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                expiryDate: {
                    serializedName: "ExpiryDate",
                    type: {
                        name: "DateTime"
                    }
                },
                invitationType: {
                    serializedName: "InvitationType",
                    type: {
                        name: "String"
                    }
                },
                validationCode: {
                    serializedName: "ValidationCode",
                    type: {
                        name: "String"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "String"
                    }
                },
                representativeAttributes: {
                    serializedName: "RepresentativeAttributes",
                    type: {
                        name: "String"
                    }
                },
                additionalAttributes: {
                    serializedName: "AdditionalAttributes",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileFileInvitationPartyInformationModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.FileInvitationPartyInformationModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileFileInvitationPartyInformationModel",
            modelProperties: {
                partyName: {
                    serializedName: "PartyName",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyType: {
                    serializedName: "PartyType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationInformationModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.FileInvitationInformationModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationInformationModel",
            modelProperties: {
                fileInvitationId: {
                    serializedName: "FileInvitationId",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                parties: {
                    serializedName: "Parties",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileFileInvitationPartyInformationModel"
                            }
                        }
                    }
                },
                additionalAttributes: {
                    serializedName: "AdditionalAttributes",
                    type: {
                        name: "String"
                    }
                },
                invitationType: {
                    serializedName: "InvitationType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPhoneNumber = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PhoneNumber",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPhoneNumber",
            modelProperties: {
                number: {
                    serializedName: "Number",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    serializedName: "Type",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsAtribute = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.Atribute",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsAtribute",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPartyInformation = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PartyInformation",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyInformation",
            modelProperties: {
                partyType: {
                    serializedName: "PartyType",
                    type: {
                        name: "String"
                    }
                },
                isCompany: {
                    serializedName: "IsCompany",
                    type: {
                        name: "Boolean"
                    }
                },
                companyName: {
                    serializedName: "CompanyName",
                    type: {
                        name: "String"
                    }
                },
                firstName: {
                    serializedName: "FirstName",
                    type: {
                        name: "String"
                    }
                },
                lastName: {
                    serializedName: "LastName",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                address2: {
                    serializedName: "Address2",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                state: {
                    serializedName: "State",
                    type: {
                        name: "String"
                    }
                },
                country: {
                    serializedName: "Country",
                    type: {
                        name: "String"
                    }
                },
                zipCode: {
                    serializedName: "ZipCode",
                    type: {
                        name: "String"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                phoneNumbers: {
                    serializedName: "PhoneNumbers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsPhoneNumber"
                            }
                        }
                    }
                },
                partyAttributes: {
                    serializedName: "PartyAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsAtribute"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsFileInformationFromPartyInvitationModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.FileInformationFromPartyInvitationModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsFileInformationFromPartyInvitationModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileName: {
                    serializedName: "FileName",
                    type: {
                        name: "String"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "String"
                    }
                },
                invitationId: {
                    serializedName: "InvitationId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyInvited: {
                    serializedName: "PartyInvited",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyInformation"
                    }
                },
                parties: {
                    serializedName: "Parties",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByFileModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationCountByFileModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByFileModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "String"
                    }
                },
                newNotificationsCount: {
                    serializedName: "NewNotificationsCount",
                    type: {
                        name: "Number"
                    }
                },
                mostRecentNotification: {
                    serializedName: "MostRecentNotification",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByAggregatorCodeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationCountByAggregatorCodeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByAggregatorCodeModel",
            modelProperties: {
                aggregatorCode: {
                    serializedName: "AggregatorCode",
                    type: {
                        name: "String"
                    }
                },
                newNotificationsCount: {
                    serializedName: "NewNotificationsCount",
                    type: {
                        name: "Number"
                    }
                },
                mostRecentNotification: {
                    serializedName: "MostRecentNotification",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationTypeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeModel",
            modelProperties: {
                notificationCode: {
                    serializedName: "NotificationCode",
                    type: {
                        name: "String"
                    }
                },
                businessRuleName: {
                    serializedName: "BusinessRuleName",
                    type: {
                        name: "String"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                cultureContentDictionary: {
                    serializedName: "CultureContentDictionary",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationCreateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PartyInvitationCreateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationCreateModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                expiryDate: {
                    serializedName: "ExpiryDate",
                    type: {
                        name: "DateTime"
                    }
                },
                validationParameter: {
                    serializedName: "ValidationParameter",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationCreateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.FileInvitationCreateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationCreateModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                invitationType: {
                    serializedName: "InvitationType",
                    type: {
                        name: "String"
                    }
                },
                substitutionParameter: {
                    serializedName: "SubstitutionParameter",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                expiryDate: {
                    serializedName: "ExpiryDate",
                    type: {
                        name: "DateTime"
                    }
                },
                representativeAttributes: {
                    serializedName: "RepresentativeAttributes",
                    type: {
                        name: "String"
                    }
                },
                representativeId: {
                    serializedName: "RepresentativeId",
                    type: {
                        name: "Uuid"
                    }
                },
                applicationName: {
                    serializedName: "ApplicationName",
                    type: {
                        name: "String"
                    }
                },
                additionalAttributes: {
                    serializedName: "AdditionalAttributes",
                    type: {
                        name: "String"
                    }
                },
                mailCode: {
                    serializedName: "MailCode",
                    type: {
                        name: "String"
                    }
                },
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationRefuseModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PartyInvitationRefuseModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationRefuseModel",
            modelProperties: {
                partyInvitationId: {
                    serializedName: "PartyInvitationId",
                    type: {
                        name: "Uuid"
                    }
                },
                tagCode: {
                    serializedName: "TagCode",
                    type: {
                        name: "String"
                    }
                },
                taskStatus: {
                    serializedName: "TaskStatus",
                    type: {
                        name: "String"
                    }
                },
                complement: {
                    serializedName: "Complement",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationRefuseModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.FileInvitationRefuseModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationRefuseModel",
            modelProperties: {
                invitationCode: {
                    serializedName: "InvitationCode",
                    type: {
                        name: "String"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "String"
                    }
                },
                tagCode: {
                    serializedName: "TagCode",
                    type: {
                        name: "String"
                    }
                },
                taskStatus: {
                    serializedName: "TaskStatus",
                    type: {
                        name: "String"
                    }
                },
                complement: {
                    serializedName: "Complement",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagCreateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.JudicialFileTagCreateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagCreateModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                tagCode: {
                    serializedName: "TagCode",
                    type: {
                        name: "String"
                    }
                },
                taskStatus: {
                    serializedName: "TaskStatus",
                    type: {
                        name: "String"
                    }
                },
                taskActor: {
                    serializedName: "TaskActor",
                    type: {
                        name: "String"
                    }
                },
                complements: {
                    serializedName: "Complements",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsRepresentativesToPartyModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.RepresentativesToPartyModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsRepresentativesToPartyModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                representativesWithAttributes: {
                    serializedName: "RepresentativesWithAttributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "Sequence",
                                element: {
                                    type: {
                                        name: "Composite",
                                        className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyRepresentativeLinkAttributeModel"
                                    }
                                }
                            }
                        }
                    }
                },
                fileInternalReferenceNumber: {
                    serializedName: "FileInternalReferenceNumber",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLinkRepresentativesToPartyModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LinkRepresentativesToPartyModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLinkRepresentativesToPartyModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                representativesWithAttributes: {
                    serializedName: "RepresentativesWithAttributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "Sequence",
                                element: {
                                    type: {
                                        name: "Composite",
                                        className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyRepresentativeLinkAttributeModel"
                                    }
                                }
                            }
                        }
                    }
                },
                fileInternalReferenceNumber: {
                    serializedName: "FileInternalReferenceNumber",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationAcceptModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.FileInvitationAcceptModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationAcceptModel",
            modelProperties: {
                invitationCode: {
                    serializedName: "InvitationCode",
                    type: {
                        name: "String"
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationTypeApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiRequestData",
            modelProperties: {
                searchText: {
                    serializedName: "SearchText",
                    type: {
                        name: "String"
                    }
                },
                searchBy: {
                    serializedName: "SearchBy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                businessRuleNames: {
                    serializedName: "BusinessRuleNames",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationTypeApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                notifications: {
                    serializedName: "Notifications",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiRequestData",
            modelProperties: {
                fileIds: {
                    serializedName: "FileIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                businessRuleNames: {
                    serializedName: "BusinessRuleNames",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                prioritizeNewNotifications: {
                    serializedName: "PrioritizeNewNotifications",
                    type: {
                        name: "Boolean"
                    }
                },
                filterOnlyNewNotifications: {
                    serializedName: "FilterOnlyNewNotifications",
                    type: {
                        name: "Boolean"
                    }
                },
                filterNotificationsCodes: {
                    serializedName: "FilterNotificationsCodes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                filterAttributeKeys: {
                    serializedName: "FilterAttributeKeys",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationResourceModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationResourceModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationResourceModel",
            modelProperties: {
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "Message",
                    type: {
                        name: "String"
                    }
                },
                substitutionParameters: {
                    serializedName: "SubstitutionParameters",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationModel",
            modelProperties: {
                notificationId: {
                    serializedName: "NotificationId",
                    type: {
                        name: "Number"
                    }
                },
                notificationCode: {
                    serializedName: "NotificationCode",
                    type: {
                        name: "String"
                    }
                },
                businessRuleName: {
                    serializedName: "BusinessRuleName",
                    type: {
                        name: "String"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                aggregatorCode: {
                    serializedName: "AggregatorCode",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "Message",
                    type: {
                        name: "String"
                    }
                },
                cultureContentDictionary: {
                    serializedName: "CultureContentDictionary",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                notificationSubstitutionParameters: {
                    serializedName: "NotificationSubstitutionParameters",
                    type: {
                        name: "String"
                    }
                },
                link: {
                    serializedName: "Link",
                    type: {
                        name: "String"
                    }
                },
                accessDate: {
                    serializedName: "AccessDate",
                    type: {
                        name: "DateTime"
                    }
                },
                sentDate: {
                    serializedName: "SentDate",
                    type: {
                        name: "DateTime"
                    }
                },
                notificationDismissed: {
                    serializedName: "NotificationDismissed",
                    type: {
                        name: "Boolean"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                notificationResources: {
                    serializedName: "NotificationResources",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationResourceModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                notifications: {
                    serializedName: "Notifications",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationsSummaryByFileApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiRequestData",
            modelProperties: {
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationsSummaryByFileApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiResponseData",
            modelProperties: {
                totalNotificationsCount: {
                    serializedName: "TotalNotificationsCount",
                    type: {
                        name: "Number"
                    }
                },
                notificationsByFile: {
                    serializedName: "NotificationsByFile",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByFileModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreatePartyRepresentativeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationCreatePartyRepresentativeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreatePartyRepresentativeModel",
            modelProperties: {
                representativeId: {
                    serializedName: "RepresentativeId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                notificationDismissed: {
                    serializedName: "NotificationDismissed",
                    type: {
                        name: "Boolean"
                    }
                },
                accessDate: {
                    serializedName: "AccessDate",
                    type: {
                        name: "DateTime"
                    }
                },
                sentDate: {
                    serializedName: "SentDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationCreateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreateModel",
            modelProperties: {
                notificationCode: {
                    serializedName: "NotificationCode",
                    type: {
                        name: "String"
                    }
                },
                businessRuleName: {
                    serializedName: "BusinessRuleName",
                    type: {
                        name: "String"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                aggregatorCode: {
                    serializedName: "AggregatorCode",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "Message",
                    type: {
                        name: "String"
                    }
                },
                notificationSubstitutionParameters: {
                    serializedName: "NotificationSubstitutionParameters",
                    type: {
                        name: "String"
                    }
                },
                link: {
                    serializedName: "Link",
                    type: {
                        name: "String"
                    }
                },
                partyAndRepresentatives: {
                    serializedName: "PartyAndRepresentatives",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreatePartyRepresentativeModel"
                            }
                        }
                    }
                },
                notificationResources: {
                    serializedName: "NotificationResources",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationResourceModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileCreateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.JudicialFileCreateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileCreateModel",
            modelProperties: {
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                businessRuleName: {
                    serializedName: "BusinessRuleName",
                    type: {
                        name: "String"
                    }
                },
                permission: {
                    serializedName: "Permission",
                    type: {
                        name: "String"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                judicialFileId: {
                    serializedName: "JudicialFileId",
                    type: {
                        name: "String"
                    }
                },
                formId: {
                    serializedName: "FormId",
                    type: {
                        name: "Uuid"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                currentWorkflow: {
                    serializedName: "CurrentWorkflow",
                    type: {
                        name: "String"
                    }
                },
                matterId: {
                    serializedName: "MatterId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLastActorRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LastActorRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLastActorRequestData",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyName: {
                    serializedName: "PartyName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogTemplateApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiRequestData",
            modelProperties: {
                logTemplateIds: {
                    serializedName: "LogTemplateIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                eventCodes: {
                    serializedName: "EventCodes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                entryCodeSearchText: {
                    serializedName: "EntryCodeSearchText",
                    type: {
                        name: "String"
                    }
                },
                searchInMessages: {
                    serializedName: "SearchInMessages",
                    type: {
                        name: "String"
                    }
                },
                searchInMessagesLanguages: {
                    serializedName: "SearchInMessagesLanguages",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                searchStatus: {
                    serializedName: "SearchStatus",
                    type: {
                        name: "String"
                    }
                },
                specificStatus: {
                    serializedName: "SpecificStatus",
                    type: {
                        name: "String"
                    }
                },
                orderBy: {
                    serializedName: "OrderBy",
                    type: {
                        name: "String"
                    }
                },
                orderByCulture: {
                    serializedName: "OrderByCulture",
                    type: {
                        name: "String"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogPermissionModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogPermissionModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogPermissionModel",
            modelProperties: {
                logPermissionId: {
                    serializedName: "LogPermissionId",
                    type: {
                        name: "Uuid"
                    }
                },
                visibleByDefault: {
                    serializedName: "VisibleByDefault",
                    type: {
                        name: "Boolean"
                    }
                },
                permissionExceptions: {
                    serializedName: "PermissionExceptions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogTemplateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateModel",
            modelProperties: {
                logTemplateId: {
                    serializedName: "LogTemplateId",
                    type: {
                        name: "Uuid"
                    }
                },
                eventCode: {
                    serializedName: "EventCode",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                permissionModel: {
                    serializedName: "PermissionModel",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsLogPermissionModel"
                    }
                },
                templateMessages: {
                    serializedName: "TemplateMessages",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogTemplateApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                logTemplates: {
                    serializedName: "LogTemplates",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestDataDedicatedSearch = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogEntryApiRequestData_DedicatedSearch",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestDataDedicatedSearch",
            modelProperties: {
                entryDate: {
                    serializedName: "EntryDate",
                    type: {
                        name: "String"
                    }
                },
                authorName: {
                    serializedName: "AuthorName",
                    type: {
                        name: "String"
                    }
                },
                authorRole: {
                    serializedName: "AuthorRole",
                    type: {
                        name: "String"
                    }
                },
                fileStep: {
                    serializedName: "FileStep",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "Message",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogEntryApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestData",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                currentRole: {
                    serializedName: "CurrentRole",
                    type: {
                        name: "String"
                    }
                },
                minEntryDate: {
                    serializedName: "MinEntryDate",
                    type: {
                        name: "DateTime"
                    }
                },
                maxEntryDate: {
                    serializedName: "MaxEntryDate",
                    type: {
                        name: "DateTime"
                    }
                },
                globalSearchText: {
                    serializedName: "GlobalSearchText",
                    type: {
                        name: "String"
                    }
                },
                searchMessageLanguage: {
                    serializedName: "SearchMessageLanguage",
                    type: {
                        name: "String"
                    }
                },
                globalSearchBy: {
                    serializedName: "GlobalSearchBy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                dedicatedSearch: {
                    serializedName: "DedicatedSearch",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestDataDedicatedSearch"
                    }
                },
                orderBy: {
                    serializedName: "OrderBy",
                    type: {
                        name: "String"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogEntryResourceModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogEntryResourceModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogEntryResourceModel",
            modelProperties: {
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "Message",
                    type: {
                        name: "String"
                    }
                },
                dynamicParameters: {
                    serializedName: "DynamicParameters",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogEntryModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogEntryModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogEntryModel",
            modelProperties: {
                logEntryId: {
                    serializedName: "LogEntryId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                logTemplateId: {
                    serializedName: "LogTemplateId",
                    type: {
                        name: "Uuid"
                    }
                },
                authorName: {
                    serializedName: "AuthorName",
                    type: {
                        name: "String"
                    }
                },
                authorRole: {
                    serializedName: "AuthorRole",
                    type: {
                        name: "String"
                    }
                },
                authorUID: {
                    serializedName: "AuthorUID",
                    type: {
                        name: "String"
                    }
                },
                fileStep: {
                    serializedName: "FileStep",
                    type: {
                        name: "String"
                    }
                },
                entryDate: {
                    serializedName: "EntryDate",
                    type: {
                        name: "DateTime"
                    }
                },
                logEntryResources: {
                    serializedName: "LogEntryResources",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsLogEntryResourceModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogEntryApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                logEntries: {
                    serializedName: "LogEntries",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsLogEntryModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateCreateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogTemplateCreateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateCreateModel",
            modelProperties: {
                eventCode: {
                    serializedName: "EventCode",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                permissionModel: {
                    serializedName: "PermissionModel",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsLogPermissionModel"
                    }
                },
                templateMessages: {
                    serializedName: "TemplateMessages",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogEntryCreateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogEntryCreateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogEntryCreateModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                eventCode: {
                    serializedName: "EventCode",
                    type: {
                        name: "String"
                    }
                },
                authorName: {
                    serializedName: "AuthorName",
                    type: {
                        name: "String"
                    }
                },
                authorRole: {
                    serializedName: "AuthorRole",
                    type: {
                        name: "String"
                    }
                },
                authorUID: {
                    serializedName: "AuthorUID",
                    type: {
                        name: "String"
                    }
                },
                fileStep: {
                    serializedName: "FileStep",
                    type: {
                        name: "String"
                    }
                },
                entryDate: {
                    serializedName: "EntryDate",
                    type: {
                        name: "DateTime"
                    }
                },
                cultureDynamicParametersDictionary: {
                    serializedName: "CultureDynamicParametersDictionary",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeCreateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PenalChargeCreateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeCreateModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                ruleType: {
                    serializedName: "RuleType",
                    type: {
                        name: "String"
                    }
                },
                ruleCode: {
                    serializedName: "RuleCode",
                    type: {
                        name: "String"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsChargeAttributeModel"
                            }
                        }
                    }
                },
                plea: {
                    serializedName: "Plea",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsPleaModel"
                    }
                },
                offenceStatementDate: {
                    serializedName: "OffenceStatementDate",
                    type: {
                        name: "DateTime"
                    }
                },
                offenceStatementDescription: {
                    serializedName: "OffenceStatementDescription",
                    type: {
                        name: "String"
                    }
                },
                offenceStatementNumber: {
                    serializedName: "OffenceStatementNumber",
                    type: {
                        name: "String"
                    }
                },
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeContactModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.RepresentativeContactModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeContactModel",
            modelProperties: {
                firstName: {
                    serializedName: "FirstName",
                    type: {
                        name: "String"
                    }
                },
                lastName: {
                    serializedName: "LastName",
                    type: {
                        name: "String"
                    }
                },
                adresse: {
                    serializedName: "Adresse",
                    type: {
                        name: "String"
                    }
                },
                adresse2: {
                    serializedName: "Adresse2",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                state: {
                    serializedName: "State",
                    type: {
                        name: "String"
                    }
                },
                country: {
                    serializedName: "Country",
                    type: {
                        name: "String"
                    }
                },
                zipCode: {
                    serializedName: "ZipCode",
                    type: {
                        name: "String"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                website: {
                    serializedName: "Website",
                    type: {
                        name: "String"
                    }
                },
                latitude: {
                    serializedName: "Latitude",
                    type: {
                        name: "String"
                    }
                },
                longitude: {
                    serializedName: "Longitude",
                    type: {
                        name: "String"
                    }
                },
                phoneNumbers: {
                    serializedName: "PhoneNumbers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsContactPhoneNumberModel"
                            }
                        }
                    }
                },
                contactAttributes: {
                    serializedName: "ContactAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsContactAttributeModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsCreateRepresentativeProfileModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.CreateRepresentativeProfileModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsCreateRepresentativeProfileModel",
            modelProperties: {
                representativeId: {
                    serializedName: "RepresentativeId",
                    type: {
                        name: "Uuid"
                    }
                },
                contact: {
                    serializedName: "Contact",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeContactModel"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsCloseFileModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.CloseFileModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsCloseFileModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                reason: {
                    serializedName: "Reason",
                    type: {
                        name: "String"
                    }
                },
                lastModified: {
                    serializedName: "LastModified",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileAttributesUpdateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.JudicialFileAttributesUpdateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileAttributesUpdateModel",
            modelProperties: {
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsFileAttributeModel"
                            }
                        }
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDateTicks: {
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPartyUpsertModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PartyUpsertModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyUpsertModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyType: {
                    serializedName: "PartyType",
                    type: {
                        name: "String"
                    }
                },
                contact: {
                    serializedName: "Contact",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsContactModel"
                    }
                },
                mainRepresentativeContact: {
                    serializedName: "MainRepresentativeContact",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsContactModel"
                    }
                },
                disputeDescription: {
                    serializedName: "DisputeDescription",
                    type: {
                        name: "String"
                    }
                },
                authorityId: {
                    serializedName: "AuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyEntityId: {
                    serializedName: "PartyEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyAttributes: {
                    serializedName: "PartyAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyAttributeModel"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPartyContactUpsertModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PartyContactUpsertModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPartyContactUpsertModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                isMainPartyContact: {
                    serializedName: "IsMainPartyContact",
                    type: {
                        name: "Boolean"
                    }
                },
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                isCompany: {
                    serializedName: "IsCompany",
                    type: {
                        name: "Boolean"
                    }
                },
                companyName: {
                    serializedName: "CompanyName",
                    type: {
                        name: "String"
                    }
                },
                firstName: {
                    serializedName: "FirstName",
                    type: {
                        name: "String"
                    }
                },
                lastName: {
                    serializedName: "LastName",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                address2: {
                    serializedName: "Address2",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                state: {
                    serializedName: "State",
                    type: {
                        name: "String"
                    }
                },
                country: {
                    serializedName: "Country",
                    type: {
                        name: "String"
                    }
                },
                zipCode: {
                    serializedName: "ZipCode",
                    type: {
                        name: "String"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                website: {
                    serializedName: "Website",
                    type: {
                        name: "String"
                    }
                },
                latitude: {
                    serializedName: "Latitude",
                    type: {
                        name: "String"
                    }
                },
                longitude: {
                    serializedName: "Longitude",
                    type: {
                        name: "String"
                    }
                },
                phoneNumbers: {
                    serializedName: "PhoneNumbers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsContactPhoneNumberModel"
                            }
                        }
                    }
                },
                contactAttributes: {
                    serializedName: "ContactAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsContactAttributeModel"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.JudicialFileTagUpdateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                tagCode: {
                    serializedName: "TagCode",
                    type: {
                        name: "String"
                    }
                },
                taskStatus: {
                    serializedName: "TaskStatus",
                    type: {
                        name: "String"
                    }
                },
                taskActor: {
                    serializedName: "TaskActor",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateWithComplementModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.JudicialFileTagUpdateWithComplementModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateWithComplementModel",
            modelProperties: {
                complements: {
                    serializedName: "Complements",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel"
                            }
                        }
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                tagCode: {
                    serializedName: "TagCode",
                    type: {
                        name: "String"
                    }
                },
                taskStatus: {
                    serializedName: "TaskStatus",
                    type: {
                        name: "String"
                    }
                },
                taskActor: {
                    serializedName: "TaskActor",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeResourceUpdateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationTypeResourceUpdateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeResourceUpdateModel",
            modelProperties: {
                notificationCode: {
                    serializedName: "NotificationCode",
                    type: {
                        name: "String"
                    }
                },
                businessRuleName: {
                    serializedName: "BusinessRuleName",
                    type: {
                        name: "String"
                    }
                },
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                content: {
                    serializedName: "Content",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationUpdateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationUpdateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationUpdateModel",
            modelProperties: {
                notificationId: {
                    serializedName: "NotificationId",
                    type: {
                        name: "Number"
                    }
                },
                aggregatorCode: {
                    serializedName: "AggregatorCode",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "Message",
                    type: {
                        name: "String"
                    }
                },
                notificationSubstitutionParameters: {
                    serializedName: "NotificationSubstitutionParameters",
                    type: {
                        name: "String"
                    }
                },
                link: {
                    serializedName: "Link",
                    type: {
                        name: "String"
                    }
                },
                notificationResources: {
                    serializedName: "NotificationResources",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationResourceModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsNotificationRepresentativeUpdateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.NotificationRepresentativeUpdateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationRepresentativeUpdateModel",
            modelProperties: {
                notificationId: {
                    serializedName: "NotificationId",
                    type: {
                        name: "Number"
                    }
                },
                accessDate: {
                    serializedName: "AccessDate",
                    type: {
                        name: "DateTime"
                    }
                },
                sentDate: {
                    serializedName: "SentDate",
                    type: {
                        name: "DateTime"
                    }
                },
                notificationDismissed: {
                    serializedName: "NotificationDismissed",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateUpdateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.LogTemplateUpdateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateUpdateModel",
            modelProperties: {
                logTemplateId: {
                    serializedName: "LogTemplateId",
                    type: {
                        name: "Uuid"
                    }
                },
                eventCode: {
                    serializedName: "EventCode",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                permissionModel: {
                    serializedName: "PermissionModel",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsLogPermissionModel"
                    }
                },
                templateMessages: {
                    serializedName: "TemplateMessages",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeUpdateModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.JudicialFile.Models.PenalChargeUpdateModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeUpdateModel",
            modelProperties: {
                chargeId: {
                    serializedName: "ChargeId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                ruleType: {
                    serializedName: "RuleType",
                    type: {
                        name: "String"
                    }
                },
                ruleCode: {
                    serializedName: "RuleCode",
                    type: {
                        name: "String"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsChargeAttributeModel"
                            }
                        }
                    }
                },
                plea: {
                    serializedName: "Plea",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedJudicialFileModelsPleaModel"
                    }
                },
                offenceStatementDate: {
                    serializedName: "OffenceStatementDate",
                    type: {
                        name: "DateTime"
                    }
                },
                offenceStatementDescription: {
                    serializedName: "OffenceStatementDescription",
                    type: {
                        name: "String"
                    }
                },
                offenceStatementNumber: {
                    serializedName: "OffenceStatementNumber",
                    type: {
                        name: "String"
                    }
                },
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDateTicks: {
                    readOnly: true,
                    serializedName: "ModifiedDateTicks",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedLocationLocationRoomData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Location.LocationRoomData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedLocationLocationRoomData",
            modelProperties: {
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                locationRoomId: {
                    serializedName: "LocationRoomId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                locationBuildingId: {
                    serializedName: "LocationBuildingId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                roomNumber: {
                    serializedName: "RoomNumber",
                    type: {
                        name: "String"
                    }
                },
                capacity: {
                    serializedName: "Capacity",
                    type: {
                        name: "Number"
                    }
                },
                locationStatus: {
                    serializedName: "LocationStatus",
                    type: {
                        name: "String"
                    }
                },
                startDate: {
                    serializedName: "StartDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedLocationLocationBuildingData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Location.LocationBuildingData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedLocationLocationBuildingData",
            modelProperties: {
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                locationRooms: {
                    serializedName: "LocationRooms",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedLocationLocationRoomData"
                            }
                        }
                    }
                },
                locationBuildingId: {
                    serializedName: "LocationBuildingId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                state: {
                    serializedName: "State",
                    type: {
                        name: "String"
                    }
                },
                postalCode: {
                    serializedName: "PostalCode",
                    type: {
                        name: "String"
                    }
                },
                country: {
                    serializedName: "Country",
                    type: {
                        name: "String"
                    }
                },
                locationStatus: {
                    serializedName: "LocationStatus",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedLocationLocationBuildingUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Location.LocationBuildingUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedLocationLocationBuildingUpdateData",
            modelProperties: {
                locationBuildingId: {
                    serializedName: "LocationBuildingId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                state: {
                    serializedName: "State",
                    type: {
                        name: "String"
                    }
                },
                postalCode: {
                    serializedName: "PostalCode",
                    type: {
                        name: "String"
                    }
                },
                country: {
                    serializedName: "Country",
                    type: {
                        name: "String"
                    }
                },
                locationStatus: {
                    serializedName: "LocationStatus",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedLocationLocationRoomUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Location.LocationRoomUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedLocationLocationRoomUpdateData",
            modelProperties: {
                locationRoomId: {
                    serializedName: "LocationRoomId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                locationBuildingId: {
                    serializedName: "LocationBuildingId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                roomNumber: {
                    serializedName: "RoomNumber",
                    type: {
                        name: "String"
                    }
                },
                capacity: {
                    serializedName: "Capacity",
                    type: {
                        name: "Number"
                    }
                },
                locationStatus: {
                    serializedName: "LocationStatus",
                    type: {
                        name: "String"
                    }
                },
                startDate: {
                    serializedName: "StartDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedLocationLocationBuildingCreateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Location.LocationBuildingCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedLocationLocationBuildingCreateData",
            modelProperties: {
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                state: {
                    serializedName: "State",
                    type: {
                        name: "String"
                    }
                },
                postalCode: {
                    serializedName: "PostalCode",
                    type: {
                        name: "String"
                    }
                },
                country: {
                    serializedName: "Country",
                    type: {
                        name: "String"
                    }
                },
                locationStatus: {
                    serializedName: "LocationStatus",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedLocationLocationRoomCreateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Location.LocationRoomCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedLocationLocationRoomCreateData",
            modelProperties: {
                locationBuildingId: {
                    serializedName: "LocationBuildingId",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                roomNumber: {
                    serializedName: "RoomNumber",
                    type: {
                        name: "String"
                    }
                },
                capacity: {
                    serializedName: "Capacity",
                    type: {
                        name: "Number"
                    }
                },
                locationStatus: {
                    serializedName: "LocationStatus",
                    type: {
                        name: "String"
                    }
                },
                startDate: {
                    serializedName: "StartDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "EndDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedLookupModelsLookupValueModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Lookup.Models.LookupValueModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedLookupModelsLookupValueModel",
            modelProperties: {
                cultureName: {
                    serializedName: "CultureName",
                    type: {
                        name: "String"
                    }
                },
                localizedValue: {
                    serializedName: "LocalizedValue",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedLookupModelsLookupModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Lookup.Models.LookupModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedLookupModelsLookupModel",
            modelProperties: {
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                lookupValues: {
                    serializedName: "LookupValues",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedLookupModelsLookupValueModel"
                            }
                        }
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                children: {
                    serializedName: "Children",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedLookupModelsLookupModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedLookupModelsLookupApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Lookup.Models.LookupApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedLookupModelsLookupApiRequestData",
            modelProperties: {
                lookupNames: {
                    serializedName: "LookupNames",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                cultures: {
                    serializedName: "Cultures",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationDeleteData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.ProsecutingAuthority.ProsecutingAuthorityDelegationDeleteData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationDeleteData",
            modelProperties: {
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                delegatingAuthorityId: {
                    serializedName: "DelegatingAuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                procedureCategory: {
                    serializedName: "ProcedureCategory",
                    type: {
                        name: "String"
                    }
                },
                delegateAuthorityId: {
                    serializedName: "DelegateAuthorityId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedProsecutingAuthorityBaseProsecutingAuthorityData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.ProsecutingAuthority.BaseProsecutingAuthorityData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedProsecutingAuthorityBaseProsecutingAuthorityData",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.ProsecutingAuthority.ProsecutingAuthorityDelegationData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationData",
            modelProperties: {
                delegateAuthority: {
                    serializedName: "DelegateAuthority",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedProsecutingAuthorityBaseProsecutingAuthorityData"
                    }
                },
                delegatingAuthorityId: {
                    serializedName: "DelegatingAuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                procedureCategory: {
                    serializedName: "ProcedureCategory",
                    type: {
                        name: "String"
                    }
                },
                delegateAuthorityId: {
                    serializedName: "DelegateAuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.ProsecutingAuthority.ProsecutingAuthorityData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityData",
            modelProperties: {
                delegateAuthorities: {
                    serializedName: "DelegateAuthorities",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationData"
                            }
                        }
                    }
                },
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.ProsecutingAuthority.ProsecutingAuthorityUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityUpdateData",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityCreateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.ProsecutingAuthority.ProsecutingAuthorityCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityCreateData",
            modelProperties: {
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationCreateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.ProsecutingAuthority.ProsecutingAuthorityDelegationCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationCreateData",
            modelProperties: {
                delegatingAuthorityId: {
                    serializedName: "DelegatingAuthorityId",
                    type: {
                        name: "Uuid"
                    }
                },
                procedureCategory: {
                    serializedName: "ProcedureCategory",
                    type: {
                        name: "String"
                    }
                },
                delegateAuthorityId: {
                    serializedName: "DelegateAuthorityId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedRequestRequestAttributeData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Request.RequestAttributeData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedRequestRequestAttributeData",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedRequestRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Request.RequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedRequestRequestData",
            modelProperties: {
                requestId: {
                    serializedName: "RequestId",
                    type: {
                        name: "Uuid"
                    }
                },
                requestCode: {
                    serializedName: "RequestCode",
                    type: {
                        name: "String"
                    }
                },
                requestDate: {
                    serializedName: "RequestDate",
                    type: {
                        name: "DateTime"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                requestAttributes: {
                    serializedName: "RequestAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedRequestRequestAttributeData"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedRequestRequestCreateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Request.RequestCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedRequestRequestCreateData",
            modelProperties: {
                requestDate: {
                    serializedName: "RequestDate",
                    type: {
                        name: "DateTime"
                    }
                },
                requestAttributes: {
                    serializedName: "RequestAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedRequestRequestAttributeData"
                            }
                        }
                    }
                },
                requestCode: {
                    serializedName: "RequestCode",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedRequestRequestUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Request.RequestUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedRequestRequestUpdateData",
            modelProperties: {
                requestId: {
                    serializedName: "RequestId",
                    type: {
                        name: "Uuid"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                requestCode: {
                    serializedName: "RequestCode",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedRequestRequestUpdateAttributeData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Request.RequestUpdateAttributeData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedRequestRequestUpdateAttributeData",
            modelProperties: {
                requestId: {
                    serializedName: "RequestId",
                    type: {
                        name: "Uuid"
                    }
                },
                requestAttributes: {
                    serializedName: "RequestAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedRequestRequestAttributeData"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsSecureMailEmailData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.SecureMail.EmailData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsSecureMailEmailData",
            modelProperties: {
                emailId: {
                    serializedName: "EmailId",
                    type: {
                        name: "Number"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                culture: {
                    serializedName: "Culture",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    serializedName: "Type",
                    type: {
                        name: "String"
                    }
                },
                subject: {
                    serializedName: "Subject",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "Message",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsSecurityClaimValueData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Security.ClaimValueData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsSecurityClaimValueData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                issuer: {
                    serializedName: "Issuer",
                    type: {
                        name: "String"
                    }
                },
                claimType: {
                    serializedName: "ClaimType",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                },
                isAction: {
                    serializedName: "IsAction",
                    type: {
                        name: "Boolean"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsSecurityPredicateData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Security.PredicateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsSecurityPredicateData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Uuid"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "Status",
                    type: {
                        name: "String"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                referredPredicates: {
                    serializedName: "ReferredPredicates",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsSecurityPredicateData"
                            }
                        }
                    }
                },
                claims: {
                    serializedName: "Claims",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsSecurityClaimValueData"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedTagLocalizedLabelData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Tag.LocalizedLabelData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedTagLocalizedLabelData",
            modelProperties: {
                labelId: {
                    serializedName: "LabelId",
                    type: {
                        name: "Uuid"
                    }
                },
                text: {
                    serializedName: "Text",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedTagTagData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Tag.TagData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedTagTagData",
            modelProperties: {
                tagId: {
                    serializedName: "TagId",
                    type: {
                        name: "Uuid"
                    }
                },
                tagCode: {
                    serializedName: "TagCode",
                    type: {
                        name: "String"
                    }
                },
                targetCode: {
                    serializedName: "TargetCode",
                    type: {
                        name: "String"
                    }
                },
                judicialEntityId: {
                    serializedName: "JudicialEntityId",
                    type: {
                        name: "Uuid"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedTagTagLinkData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Tag.TagLinkData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedTagTagLinkData",
            modelProperties: {
                tagId: {
                    serializedName: "TagId",
                    type: {
                        name: "Uuid"
                    }
                },
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                tagTaskStatus: {
                    serializedName: "TagTaskStatus",
                    type: {
                        name: "String"
                    }
                },
                tag: {
                    serializedName: "Tag",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedTagTagData"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedTagLabelLocalizationData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Tag.LabelLocalizationData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedTagLabelLocalizationData",
            modelProperties: {
                labelId: {
                    serializedName: "LabelId",
                    type: {
                        name: "Uuid"
                    }
                },
                cultureCode: {
                    serializedName: "CultureCode",
                    type: {
                        name: "String"
                    }
                },
                labelText: {
                    serializedName: "LabelText",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedTagLabelData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Tag.LabelData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedTagLabelData",
            modelProperties: {
                labelId: {
                    serializedName: "LabelId",
                    type: {
                        name: "Uuid"
                    }
                },
                section: {
                    serializedName: "Section",
                    type: {
                        name: "String"
                    }
                },
                rank: {
                    serializedName: "Rank",
                    type: {
                        name: "Number"
                    }
                },
                default: {
                    serializedName: "Default",
                    type: {
                        name: "Boolean"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                labelLocalizations: {
                    serializedName: "LabelLocalizations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedTagLabelLocalizationData"
                            }
                        }
                    }
                },
                tags: {
                    serializedName: "Tags",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedTagTagData"
                            }
                        }
                    }
                },
                roleCodes: {
                    serializedName: "RoleCodes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedTagTagLinkUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Tag.TagLinkUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedTagTagLinkUpdateData",
            modelProperties: {
                tagId: {
                    serializedName: "TagId",
                    type: {
                        name: "Uuid"
                    }
                },
                tagTaskStatus: {
                    serializedName: "TagTaskStatus",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedTagLabelLocalizationBaseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Tag.LabelLocalizationBaseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedTagLabelLocalizationBaseData",
            modelProperties: {
                cultureCode: {
                    serializedName: "CultureCode",
                    type: {
                        name: "String"
                    }
                },
                labelText: {
                    serializedName: "LabelText",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedTagLabelUpdateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Tag.LabelUpdateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedTagLabelUpdateData",
            modelProperties: {
                labelId: {
                    serializedName: "LabelId",
                    type: {
                        name: "Uuid"
                    }
                },
                section: {
                    serializedName: "Section",
                    type: {
                        name: "String"
                    }
                },
                rank: {
                    serializedName: "Rank",
                    type: {
                        name: "Number"
                    }
                },
                default: {
                    serializedName: "Default",
                    type: {
                        name: "Boolean"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                labelLocalizations: {
                    serializedName: "LabelLocalizations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedTagLabelLocalizationBaseData"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedTagTagLinkCreateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Tag.TagLinkCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedTagTagLinkCreateData",
            modelProperties: {
                tagId: {
                    serializedName: "TagId",
                    type: {
                        name: "Uuid"
                    }
                },
                code: {
                    serializedName: "Code",
                    type: {
                        name: "String"
                    }
                },
                tagTaskStatus: {
                    serializedName: "TagTaskStatus",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedTagLabelCreateData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Tag.LabelCreateData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedTagLabelCreateData",
            modelProperties: {
                section: {
                    serializedName: "Section",
                    type: {
                        name: "String"
                    }
                },
                rank: {
                    serializedName: "Rank",
                    type: {
                        name: "Number"
                    }
                },
                default: {
                    serializedName: "Default",
                    type: {
                        name: "Boolean"
                    }
                },
                labelLocalizations: {
                    serializedName: "LabelLocalizations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedTagLabelLocalizationBaseData"
                            }
                        }
                    }
                },
                tags: {
                    serializedName: "Tags",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                roleCodes: {
                    serializedName: "RoleCodes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsUProfileUserPhoneNumberData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.UProfile.UserPhoneNumberData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsUProfileUserPhoneNumberData",
            modelProperties: {
                userPhoneNumberId: {
                    serializedName: "UserPhoneNumberId",
                    type: {
                        name: "Uuid"
                    }
                },
                phoneNumber: {
                    serializedName: "PhoneNumber",
                    type: {
                        name: "String"
                    }
                },
                phoneType: {
                    serializedName: "PhoneType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsUProfileUserAttributeData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.UProfile.UserAttributeData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsUProfileUserAttributeData",
            modelProperties: {
                userAttributeKey: {
                    serializedName: "UserAttributeKey",
                    type: {
                        name: "String"
                    }
                },
                userAttributeValue: {
                    serializedName: "UserAttributeValue",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsUProfileUserData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.UProfile.UserData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsUProfileUserData",
            modelProperties: {
                userId: {
                    serializedName: "UserId",
                    type: {
                        name: "Uuid"
                    }
                },
                username: {
                    serializedName: "Username",
                    type: {
                        name: "String"
                    }
                },
                realm: {
                    serializedName: "Realm",
                    type: {
                        name: "String"
                    }
                },
                predicateId: {
                    serializedName: "PredicateId",
                    type: {
                        name: "Uuid"
                    }
                },
                firstname: {
                    serializedName: "Firstname",
                    type: {
                        name: "String"
                    }
                },
                lastname: {
                    serializedName: "Lastname",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                complementAddress: {
                    serializedName: "ComplementAddress",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                state: {
                    serializedName: "State",
                    type: {
                        name: "String"
                    }
                },
                zipCode: {
                    serializedName: "ZipCode",
                    type: {
                        name: "String"
                    }
                },
                country: {
                    serializedName: "Country",
                    type: {
                        name: "String"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                userPhoneNumbers: {
                    serializedName: "UserPhoneNumbers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsUProfileUserPhoneNumberData"
                            }
                        }
                    }
                },
                userAttributes: {
                    serializedName: "UserAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsUProfileUserAttributeData"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsUserUserData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.User.UserData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsUserUserData",
            modelProperties: {
                id: {
                    serializedName: "ID",
                    type: {
                        name: "Number"
                    }
                },
                organizationID: {
                    serializedName: "OrganizationID",
                    type: {
                        name: "Number"
                    }
                },
                userName: {
                    serializedName: "UserName",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                country: {
                    serializedName: "Country",
                    type: {
                        name: "String"
                    }
                },
                province: {
                    serializedName: "Province",
                    type: {
                        name: "String"
                    }
                },
                zipcode: {
                    serializedName: "Zipcode",
                    type: {
                        name: "String"
                    }
                },
                phone: {
                    serializedName: "Phone",
                    type: {
                        name: "String"
                    }
                },
                phone2: {
                    serializedName: "Phone2",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                address2: {
                    serializedName: "Address2",
                    type: {
                        name: "String"
                    }
                },
                password: {
                    serializedName: "Password",
                    type: {
                        name: "String"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                firstName: {
                    serializedName: "FirstName",
                    type: {
                        name: "String"
                    }
                },
                lastName: {
                    serializedName: "LastName",
                    type: {
                        name: "String"
                    }
                },
                isActive: {
                    serializedName: "IsActive",
                    type: {
                        name: "Boolean"
                    }
                },
                groups: {
                    serializedName: "Groups",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsUserGroupData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.User.GroupData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsUserGroupData",
            modelProperties: {
                groupId: {
                    serializedName: "GroupId",
                    type: {
                        name: "Number"
                    }
                },
                groupName: {
                    serializedName: "GroupName",
                    type: {
                        name: "String"
                    }
                },
                organizationId: {
                    serializedName: "OrganizationId",
                    type: {
                        name: "Number"
                    }
                },
                description: {
                    serializedName: "Description",
                    type: {
                        name: "String"
                    }
                },
                users: {
                    serializedName: "Users",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsUserUserData"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsUserClaimTransformationRuleData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.User.ClaimTransformationRuleData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsUserClaimTransformationRuleData",
            modelProperties: {
                claimRuleId: {
                    serializedName: "ClaimRuleId",
                    type: {
                        name: "Number"
                    }
                },
                organizationId: {
                    serializedName: "OrganizationId",
                    type: {
                        name: "Number"
                    }
                },
                groupId: {
                    serializedName: "GroupId",
                    type: {
                        name: "Number"
                    }
                },
                claimTypeURI: {
                    serializedName: "ClaimTypeURI",
                    type: {
                        name: "String"
                    }
                },
                claimType: {
                    serializedName: "ClaimType",
                    type: {
                        name: "String"
                    }
                },
                isUserName: {
                    serializedName: "IsUserName",
                    type: {
                        name: "Boolean"
                    }
                },
                isFirstName: {
                    serializedName: "IsFirstName",
                    type: {
                        name: "Boolean"
                    }
                },
                isLastName: {
                    serializedName: "IsLastName",
                    type: {
                        name: "Boolean"
                    }
                },
                isEmail: {
                    serializedName: "IsEmail",
                    type: {
                        name: "Boolean"
                    }
                },
                isTenant: {
                    serializedName: "IsTenant",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsUserOrganizationData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.User.OrganizationData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsUserOrganizationData",
            modelProperties: {
                organizationId: {
                    serializedName: "OrganizationId",
                    type: {
                        name: "Number"
                    }
                },
                organizationName: {
                    serializedName: "OrganizationName",
                    type: {
                        name: "String"
                    }
                },
                organizationDomain: {
                    serializedName: "OrganizationDomain",
                    type: {
                        name: "String"
                    }
                },
                organizationGuid: {
                    serializedName: "OrganizationGuid",
                    type: {
                        name: "Uuid"
                    }
                },
                tenantId: {
                    serializedName: "TenantId",
                    type: {
                        name: "Uuid"
                    }
                },
                groups: {
                    serializedName: "Groups",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsUserGroupData"
                            }
                        }
                    }
                },
                users: {
                    serializedName: "Users",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsUserUserData"
                            }
                        }
                    }
                },
                claimTransformationRules: {
                    serializedName: "ClaimTransformationRules",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsUserClaimTransformationRuleData"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedUserModelsOrganizationSummaryModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.User.Models.OrganizationSummaryModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedUserModelsOrganizationSummaryModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Number"
                    }
                },
                name: {
                    serializedName: "Name",
                    type: {
                        name: "String"
                    }
                },
                domain: {
                    serializedName: "Domain",
                    type: {
                        name: "String"
                    }
                },
                publicId: {
                    serializedName: "PublicId",
                    type: {
                        name: "Uuid"
                    }
                },
                tenantId: {
                    serializedName: "TenantId",
                    type: {
                        name: "Uuid"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsWitnessWitnessPhoneNumberData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Witness.WitnessPhoneNumberData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsWitnessWitnessPhoneNumberData",
            modelProperties: {
                witnessPhoneNumberId: {
                    serializedName: "WitnessPhoneNumberId",
                    type: {
                        name: "Uuid"
                    }
                },
                witnessId: {
                    serializedName: "WitnessId",
                    type: {
                        name: "Uuid"
                    }
                },
                phone: {
                    serializedName: "Phone",
                    type: {
                        name: "String"
                    }
                },
                phoneTypeId: {
                    serializedName: "PhoneTypeId",
                    type: {
                        name: "String"
                    }
                },
                phoneExtention: {
                    serializedName: "PhoneExtention",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsWitnessWitnessExpertiseData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Witness.WitnessExpertiseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsWitnessWitnessExpertiseData",
            modelProperties: {
                witnessId: {
                    serializedName: "WitnessId",
                    type: {
                        name: "Uuid"
                    }
                },
                expertiseCode: {
                    serializedName: "ExpertiseCode",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsWitnessWitnessDocumentData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Witness.WitnessDocumentData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsWitnessWitnessDocumentData",
            modelProperties: {
                witnessId: {
                    serializedName: "WitnessId",
                    type: {
                        name: "Uuid"
                    }
                },
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsWitnessWitnessData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Witness.WitnessData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsWitnessWitnessData",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                menuId: {
                    serializedName: "MenuId",
                    type: {
                        name: "Uuid"
                    }
                },
                isExpert: {
                    serializedName: "IsExpert",
                    type: {
                        name: "Boolean"
                    }
                },
                userCode: {
                    serializedName: "UserCode",
                    type: {
                        name: "String"
                    }
                },
                password: {
                    serializedName: "Password",
                    type: {
                        name: "String"
                    }
                },
                firstname: {
                    serializedName: "Firstname",
                    type: {
                        name: "String"
                    }
                },
                lastname: {
                    serializedName: "Lastname",
                    type: {
                        name: "String"
                    }
                },
                isActive: {
                    serializedName: "IsActive",
                    type: {
                        name: "Boolean"
                    }
                },
                gender: {
                    serializedName: "Gender",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                address2: {
                    serializedName: "Address2",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                province: {
                    serializedName: "Province",
                    type: {
                        name: "String"
                    }
                },
                postalCode: {
                    serializedName: "PostalCode",
                    type: {
                        name: "String"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                witnessPhoneNumbers: {
                    serializedName: "WitnessPhoneNumbers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsWitnessWitnessPhoneNumberData"
                            }
                        }
                    }
                },
                witnessExpertises: {
                    serializedName: "WitnessExpertises",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsWitnessWitnessExpertiseData"
                            }
                        }
                    }
                },
                witnessDocuments: {
                    serializedName: "WitnessDocuments",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsWitnessWitnessDocumentData"
                            }
                        }
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                createdDate: {
                    serializedName: "CreatedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                createdBy: {
                    serializedName: "CreatedBy",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessAttributesFilters = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.AttributesFilters",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessAttributesFilters",
            modelProperties: {
                notAndAttributes: {
                    serializedName: "NotAndAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SystemCollectionsGenericKeyValuePairSystemStringSystemString"
                            }
                        }
                    }
                },
                andAttributes: {
                    serializedName: "AndAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SystemCollectionsGenericKeyValuePairSystemStringSystemString"
                            }
                        }
                    }
                },
                orAttributes: {
                    serializedName: "OrAttributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SystemCollectionsGenericKeyValuePairSystemStringSystemString"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsActionsFilters = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.ActionsFilters",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsActionsFilters",
            modelProperties: {
                restrictedCodesAndComplements: {
                    serializedName: "RestrictedCodesAndComplements",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SystemCollectionsGenericKeyValuePairSystemStringSystemString"
                            }
                        }
                    }
                },
                allowedPartyIds: {
                    serializedName: "AllowedPartyIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsWitnessApiRequestData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.WitnessApiRequestData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsWitnessApiRequestData",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyIds: {
                    serializedName: "PartyIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                witnessIds: {
                    serializedName: "WitnessIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                searchText: {
                    serializedName: "SearchText",
                    type: {
                        name: "String"
                    }
                },
                searchBy: {
                    serializedName: "SearchBy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                take: {
                    serializedName: "Take",
                    type: {
                        name: "Number"
                    }
                },
                skip: {
                    serializedName: "Skip",
                    type: {
                        name: "Number"
                    }
                },
                orderBy: {
                    serializedName: "OrderBy",
                    type: {
                        name: "String"
                    }
                },
                orderByDescending: {
                    serializedName: "OrderByDescending",
                    type: {
                        name: "Boolean"
                    }
                },
                attributesFilters: {
                    serializedName: "AttributesFilters",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessAttributesFilters"
                            }
                        }
                    }
                },
                actionsFilters: {
                    serializedName: "ActionsFilters",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsActionsFilters"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsPhoneNumberModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.PhoneNumberModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsPhoneNumberModel",
            modelProperties: {
                phoneNumberId: {
                    serializedName: "PhoneNumberId",
                    type: {
                        name: "Uuid"
                    }
                },
                phone: {
                    serializedName: "Phone",
                    type: {
                        name: "String"
                    }
                },
                phoneTypeId: {
                    serializedName: "PhoneTypeId",
                    type: {
                        name: "String"
                    }
                },
                phoneExtension: {
                    serializedName: "PhoneExtension",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsAttributeModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.AttributeModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsAttributeModel",
            modelProperties: {
                key: {
                    serializedName: "Key",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "Value",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsWitnessPartyActionModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.WitnessPartyActionModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsWitnessPartyActionModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Number"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                representativeId: {
                    serializedName: "RepresentativeId",
                    type: {
                        name: "Uuid"
                    }
                },
                actionCode: {
                    serializedName: "ActionCode",
                    type: {
                        name: "String"
                    }
                },
                actionDate: {
                    serializedName: "ActionDate",
                    type: {
                        name: "DateTime"
                    }
                },
                actionComplement: {
                    serializedName: "ActionComplement",
                    type: {
                        name: "String"
                    }
                },
                actionAttributes: {
                    serializedName: "ActionAttributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsWitnessModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.WitnessModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsWitnessModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                menuId: {
                    serializedName: "MenuId",
                    type: {
                        name: "Uuid"
                    }
                },
                isExpert: {
                    serializedName: "IsExpert",
                    type: {
                        name: "Boolean"
                    }
                },
                userCode: {
                    serializedName: "UserCode",
                    type: {
                        name: "String"
                    }
                },
                firstName: {
                    serializedName: "FirstName",
                    type: {
                        name: "String"
                    }
                },
                lastName: {
                    serializedName: "LastName",
                    type: {
                        name: "String"
                    }
                },
                isActive: {
                    serializedName: "IsActive",
                    type: {
                        name: "Boolean"
                    }
                },
                gender: {
                    serializedName: "Gender",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                address2: {
                    serializedName: "Address2",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                province: {
                    serializedName: "Province",
                    type: {
                        name: "String"
                    }
                },
                postalCode: {
                    serializedName: "PostalCode",
                    type: {
                        name: "String"
                    }
                },
                addedBy: {
                    serializedName: "AddedBy",
                    type: {
                        name: "String"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                phoneNumbers: {
                    serializedName: "PhoneNumbers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsPhoneNumberModel"
                            }
                        }
                    }
                },
                expertises: {
                    serializedName: "Expertises",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                documents: {
                    serializedName: "Documents",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsAttributeModel"
                            }
                        }
                    }
                },
                partyActions: {
                    serializedName: "PartyActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsWitnessPartyActionModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsWitnessApiResponseData = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.WitnessApiResponseData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsWitnessApiResponseData",
            modelProperties: {
                count: {
                    serializedName: "Count",
                    type: {
                        name: "Number"
                    }
                },
                countFiltered: {
                    serializedName: "CountFiltered",
                    type: {
                        name: "Number"
                    }
                },
                witnesses: {
                    serializedName: "Witnesses",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsWitnessModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelServiceContractsWitnessJudicialFileExternalWitnessData = {
        serializedName: "CyberjusticeLab.Kernel.ServiceContracts.Witness.JudicialFileExternalWitnessData",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelServiceContractsWitnessJudicialFileExternalWitnessData",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                witnessCode: {
                    serializedName: "WitnessCode",
                    type: {
                        name: "String"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                witnessType: {
                    serializedName: "WitnessType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsCreateWitnessPartyActionModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.CreateWitnessPartyActionModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsCreateWitnessPartyActionModel",
            modelProperties: {
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                representativeId: {
                    serializedName: "RepresentativeId",
                    type: {
                        name: "Uuid"
                    }
                },
                actionCode: {
                    serializedName: "ActionCode",
                    type: {
                        name: "String"
                    }
                },
                actionDate: {
                    serializedName: "ActionDate",
                    type: {
                        name: "DateTime"
                    }
                },
                actionComplement: {
                    serializedName: "ActionComplement",
                    type: {
                        name: "String"
                    }
                },
                actionAttributes: {
                    serializedName: "ActionAttributes",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsCreateWitnessModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.CreateWitnessModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsCreateWitnessModel",
            modelProperties: {
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                menuId: {
                    serializedName: "MenuId",
                    type: {
                        name: "Uuid"
                    }
                },
                isExpert: {
                    serializedName: "IsExpert",
                    type: {
                        name: "Boolean"
                    }
                },
                userCode: {
                    serializedName: "UserCode",
                    type: {
                        name: "String"
                    }
                },
                password: {
                    serializedName: "Password",
                    type: {
                        name: "String"
                    }
                },
                firstname: {
                    serializedName: "Firstname",
                    type: {
                        name: "String"
                    }
                },
                lastname: {
                    serializedName: "Lastname",
                    type: {
                        name: "String"
                    }
                },
                isActive: {
                    serializedName: "IsActive",
                    type: {
                        name: "Boolean"
                    }
                },
                gender: {
                    serializedName: "Gender",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                address2: {
                    serializedName: "Address2",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                province: {
                    serializedName: "Province",
                    type: {
                        name: "String"
                    }
                },
                postalCode: {
                    serializedName: "PostalCode",
                    type: {
                        name: "String"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                addedBy: {
                    serializedName: "AddedBy",
                    type: {
                        name: "String"
                    }
                },
                phoneNumbers: {
                    serializedName: "PhoneNumbers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsPhoneNumberModel"
                            }
                        }
                    }
                },
                expertises: {
                    serializedName: "Expertises",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                document: {
                    serializedName: "Document",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsAttributeModel"
                            }
                        }
                    }
                },
                partyActions: {
                    serializedName: "PartyActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsCreateWitnessPartyActionModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessAttributes = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.UpdateWitnessAttributes",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessAttributes",
            modelProperties: {
                witnessId: {
                    serializedName: "WitnessId",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsAttributeModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.UpdateWitnessModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessModel",
            modelProperties: {
                id: {
                    serializedName: "Id",
                    type: {
                        name: "Uuid"
                    }
                },
                fileId: {
                    serializedName: "FileId",
                    type: {
                        name: "Uuid"
                    }
                },
                partyId: {
                    serializedName: "PartyId",
                    type: {
                        name: "Uuid"
                    }
                },
                menuId: {
                    serializedName: "MenuId",
                    type: {
                        name: "Uuid"
                    }
                },
                isExpert: {
                    serializedName: "IsExpert",
                    type: {
                        name: "Boolean"
                    }
                },
                userCode: {
                    serializedName: "UserCode",
                    type: {
                        name: "String"
                    }
                },
                password: {
                    serializedName: "Password",
                    type: {
                        name: "String"
                    }
                },
                firstName: {
                    serializedName: "FirstName",
                    type: {
                        name: "String"
                    }
                },
                lastName: {
                    serializedName: "LastName",
                    type: {
                        name: "String"
                    }
                },
                isActive: {
                    serializedName: "IsActive",
                    type: {
                        name: "Boolean"
                    }
                },
                gender: {
                    serializedName: "Gender",
                    type: {
                        name: "String"
                    }
                },
                address: {
                    serializedName: "Address",
                    type: {
                        name: "String"
                    }
                },
                address2: {
                    serializedName: "Address2",
                    type: {
                        name: "String"
                    }
                },
                city: {
                    serializedName: "City",
                    type: {
                        name: "String"
                    }
                },
                province: {
                    serializedName: "Province",
                    type: {
                        name: "String"
                    }
                },
                postalCode: {
                    serializedName: "PostalCode",
                    type: {
                        name: "String"
                    }
                },
                modifiedBy: {
                    serializedName: "ModifiedBy",
                    type: {
                        name: "String"
                    }
                },
                modifiedDate: {
                    serializedName: "ModifiedDate",
                    type: {
                        name: "DateTime"
                    }
                },
                email: {
                    serializedName: "Email",
                    type: {
                        name: "String"
                    }
                },
                phoneNumbers: {
                    serializedName: "PhoneNumbers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsPhoneNumberModel"
                            }
                        }
                    }
                },
                expertises: {
                    serializedName: "Expertises",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                document: {
                    serializedName: "Document",
                    type: {
                        name: "Composite",
                        className: "CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel"
                    }
                },
                documentId: {
                    serializedName: "DocumentId",
                    type: {
                        name: "Uuid"
                    }
                },
                attributes: {
                    serializedName: "Attributes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsAttributeModel"
                            }
                        }
                    }
                }
            }
        }
    };
    var CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessPartyActionsModel = {
        serializedName: "CyberjusticeLab.Kernel.Shared.Witness.Models.UpdateWitnessPartyActionsModel",
        type: {
            name: "Composite",
            className: "CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessPartyActionsModel",
            modelProperties: {
                witnessId: {
                    serializedName: "WitnessId",
                    type: {
                        name: "Uuid"
                    }
                },
                updatedPartyActions: {
                    serializedName: "UpdatedPartyActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsWitnessPartyActionModel"
                            }
                        }
                    }
                },
                deletedPartyActions: {
                    serializedName: "DeletedPartyActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Number"
                            }
                        }
                    }
                },
                createdPartyActions: {
                    serializedName: "CreatedPartyActions",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedWitnessModelsCreateWitnessPartyActionModel"
                            }
                        }
                    }
                }
            }
        }
    };

    var mappers = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelSharedAsyncModelsTimeEventApiRequestModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventApiRequestModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationResourceModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationResourceModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventLogResourceModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventLogResourceModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventLogModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventLogModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventEmailModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventEmailModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventApiResponseModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventApiResponseModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventCreateModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventCreateModel,
        CyberjusticeLabKernelDataAccessBusinessInformationJudicialFileWithFormProposalsCount: CyberjusticeLabKernelDataAccessBusinessInformationJudicialFileWithFormProposalsCount,
        CyberjusticeLabKernelServiceContractsCalendarBaseCalendarUpdateData: CyberjusticeLabKernelServiceContractsCalendarBaseCalendarUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityUpdateData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarClosedDayUpdateData: CyberjusticeLabKernelServiceContractsCalendarClosedDayUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkData: CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkData,
        CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleUpdateData: CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarSchedulePatternUpdateData: CyberjusticeLabKernelServiceContractsCalendarSchedulePatternUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarScheduleEntryUpdateData: CyberjusticeLabKernelServiceContractsCalendarScheduleEntryUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileData,
        CyberjusticeLabKernelSharedCalendarModelsEventPartyLinkModel: CyberjusticeLabKernelSharedCalendarModelsEventPartyLinkModel,
        CyberjusticeLabKernelSharedCalendarModelsCreateAttributeModel: CyberjusticeLabKernelSharedCalendarModelsCreateAttributeModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateAttributeModel: CyberjusticeLabKernelSharedCalendarModelsUpdateAttributeModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventAttributesModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventAttributesModel,
        CyberjusticeLabKernelSharedCalendarModelsEventBehaviourPartyLinkModel: CyberjusticeLabKernelSharedCalendarModelsEventBehaviourPartyLinkModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehaviourModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehaviourModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehavioursModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehavioursModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventRankModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventRankModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventStartDateModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventStartDateModel,
        CyberjusticeLabKernelSharedCalendarModelsEventApiResquestData: CyberjusticeLabKernelSharedCalendarModelsEventApiResquestData,
        CyberjusticeLabKernelSharedCalendarModelsEventAttributeModel: CyberjusticeLabKernelSharedCalendarModelsEventAttributeModel,
        CyberjusticeLabKernelSharedCalendarModelsEventPartyResponseModel: CyberjusticeLabKernelSharedCalendarModelsEventPartyResponseModel,
        CyberjusticeLabKernelSharedCalendarModelsEventAttemptModel: CyberjusticeLabKernelSharedCalendarModelsEventAttemptModel,
        CyberjusticeLabKernelSharedCalendarModelsEventBehaviourAttributeModel: CyberjusticeLabKernelSharedCalendarModelsEventBehaviourAttributeModel,
        CyberjusticeLabKernelSharedCalendarModelsEventBehaviourModel: CyberjusticeLabKernelSharedCalendarModelsEventBehaviourModel,
        CyberjusticeLabKernelSharedCalendarModelsEventModel: CyberjusticeLabKernelSharedCalendarModelsEventModel,
        CyberjusticeLabKernelSharedCalendarModelsEventApiResponseData: CyberjusticeLabKernelSharedCalendarModelsEventApiResponseData,
        CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiRequestData: CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiRequestData,
        CyberjusticeLabKernelSharedCalendarModelsDayModel: CyberjusticeLabKernelSharedCalendarModelsDayModel,
        CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiResponseData: CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiResponseData,
        CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateRoleData: CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateRoleData,
        CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateData: CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleBaseData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleBaseData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileBaseData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileBaseData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityCreateData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityCreateData,
        CyberjusticeLabKernelServiceContractsCalendarClosedWeekdayData: CyberjusticeLabKernelServiceContractsCalendarClosedWeekdayData,
        CyberjusticeLabKernelServiceContractsCalendarClosedDayCreateData: CyberjusticeLabKernelServiceContractsCalendarClosedDayCreateData,
        CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkCreateData: CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkCreateData,
        CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleCreateData: CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleCreateData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleCreateData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleCreateData,
        CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCopyRequestData: CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCopyRequestData,
        CyberjusticeLabKernelServiceContractsCalendarScheduleEntryBaseData: CyberjusticeLabKernelServiceContractsCalendarScheduleEntryBaseData,
        CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCreateData: CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCreateData,
        CyberjusticeLabKernelServiceContractsCalendarScheduleEntryCreateData: CyberjusticeLabKernelServiceContractsCalendarScheduleEntryCreateData,
        CyberjusticeLabKernelSharedCalendarModelsCreateCalendarModel: CyberjusticeLabKernelSharedCalendarModelsCreateCalendarModel,
        CyberjusticeLabKernelSharedCalendarModelsCreateEventAttemptModel: CyberjusticeLabKernelSharedCalendarModelsCreateEventAttemptModel,
        CyberjusticeLabKernelSharedCalendarModelsCreateEventBehaviourModel: CyberjusticeLabKernelSharedCalendarModelsCreateEventBehaviourModel,
        CyberjusticeLabKernelSharedCalendarModelsCreateEventModel: CyberjusticeLabKernelSharedCalendarModelsCreateEventModel,
        CyberjusticeLabKernelServiceContractsCalendarClosedDayData: CyberjusticeLabKernelServiceContractsCalendarClosedDayData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityData,
        CyberjusticeLabKernelServiceContractsCalendarBaseCalendarRoleData: CyberjusticeLabKernelServiceContractsCalendarBaseCalendarRoleData,
        CyberjusticeLabKernelServiceContractsCalendarBaseCalendarData: CyberjusticeLabKernelServiceContractsCalendarBaseCalendarData,
        CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleData: CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleData,
        CyberjusticeLabKernelServiceContractsCalendarScheduleEntryData: CyberjusticeLabKernelServiceContractsCalendarScheduleEntryData,
        CyberjusticeLabKernelServiceContractsCalendarSchedulePatternData: CyberjusticeLabKernelServiceContractsCalendarSchedulePatternData,
        CyberjusticeLabKernelSharedCalendarModelsCalendarModel: CyberjusticeLabKernelSharedCalendarModelsCalendarModel,
        CyberjusticeLabKernelServiceContractsDocumentDocumentData: CyberjusticeLabKernelServiceContractsDocumentDocumentData,
        SystemCollectionsGenericKeyValuePairSystemStringSystemString: SystemCollectionsGenericKeyValuePairSystemStringSystemString,
        CyberjusticeLabKernelSharedDocumentModelsAttributesFilters: CyberjusticeLabKernelSharedDocumentModelsAttributesFilters,
        CyberjusticeLabKernelSharedDocumentModelsActionsFilters: CyberjusticeLabKernelSharedDocumentModelsActionsFilters,
        CyberjusticeLabKernelSharedDocumentModelsDocumentApiRequestData: CyberjusticeLabKernelSharedDocumentModelsDocumentApiRequestData,
        CyberjusticeLabKernelSharedDocumentModelsAttributeModel: CyberjusticeLabKernelSharedDocumentModelsAttributeModel,
        CyberjusticeLabKernelSharedDocumentModelsDocumentPartyActionModel: CyberjusticeLabKernelSharedDocumentModelsDocumentPartyActionModel,
        CyberjusticeLabKernelSharedDocumentModelsDocumentModel: CyberjusticeLabKernelSharedDocumentModelsDocumentModel,
        CyberjusticeLabKernelSharedDocumentModelsDocumentApiResponseData: CyberjusticeLabKernelSharedDocumentModelsDocumentApiResponseData,
        CyberjusticeLabKernelSharedDocumentModelsCreateDocumentPartyActionModel: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentPartyActionModel,
        CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel,
        CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsModel: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsModel,
        CyberjusticeLabKernelSharedDocumentModelsDocumentErrorModel: CyberjusticeLabKernelSharedDocumentModelsDocumentErrorModel,
        CyberjusticeLabKernelSharedDocumentModelsDocumentResponseModel: CyberjusticeLabKernelSharedDocumentModelsDocumentResponseModel,
        CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsResponseModel: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsResponseModel,
        CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentContentModel: CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentContentModel,
        CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentMetadatasModel: CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentMetadatasModel,
        CyberjusticeLabKernelSharedDocumentModelsEditDocumentAttributeModel: CyberjusticeLabKernelSharedDocumentModelsEditDocumentAttributeModel,
        CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentPartyActionsModel: CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentPartyActionsModel,
        CyberjusticeLabKernelServiceContractsExchangeForumPartyLinkData: CyberjusticeLabKernelServiceContractsExchangeForumPartyLinkData,
        CyberjusticeLabKernelServiceContractsExchangeForumData: CyberjusticeLabKernelServiceContractsExchangeForumData,
        CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData: CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData,
        CyberjusticeLabKernelSharedExchangeModelsForumMessagePartyLinkModel: CyberjusticeLabKernelSharedExchangeModelsForumMessagePartyLinkModel,
        CyberjusticeLabKernelSharedExchangeModelsAttributeModel: CyberjusticeLabKernelSharedExchangeModelsAttributeModel,
        CyberjusticeLabKernelSharedExchangeModelsForumMessageModel: CyberjusticeLabKernelSharedExchangeModelsForumMessageModel,
        CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData: CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData,
        CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel: CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel,
        CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel: CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel,
        CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel: CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel,
        CyberjusticeLabKernelServiceContractsFormResourceOptionData: CyberjusticeLabKernelServiceContractsFormResourceOptionData,
        CyberjusticeLabKernelServiceContractsFormFormSectionOptionData: CyberjusticeLabKernelServiceContractsFormFormSectionOptionData,
        CyberjusticeLabKernelServiceContractsFormResourceData: CyberjusticeLabKernelServiceContractsFormResourceData,
        CyberjusticeLabKernelServiceContractsFormFormSectionData: CyberjusticeLabKernelServiceContractsFormFormSectionData,
        CyberjusticeLabKernelServiceContractsFormFormQuestionData: CyberjusticeLabKernelServiceContractsFormFormQuestionData,
        CyberjusticeLabKernelServiceContractsFormFormData: CyberjusticeLabKernelServiceContractsFormFormData,
        CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionOptionData: CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionOptionData,
        CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionData: CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionData,
        CyberjusticeLabKernelServiceContractsFormApprovalPartyData: CyberjusticeLabKernelServiceContractsFormApprovalPartyData,
        CyberjusticeLabKernelServiceContractsFormFormProposalPartyOptionData: CyberjusticeLabKernelServiceContractsFormFormProposalPartyOptionData,
        CyberjusticeLabKernelServiceContractsFormFormPartyProposalData: CyberjusticeLabKernelServiceContractsFormFormPartyProposalData,
        CyberjusticeLabKernelServiceContractsFormPartyQuestionProposalCountData: CyberjusticeLabKernelServiceContractsFormPartyQuestionProposalCountData,
        CyberjusticeLabKernelSharedFormModelsQuestionFormApiRequestData: CyberjusticeLabKernelSharedFormModelsQuestionFormApiRequestData,
        CyberjusticeLabKernelSharedFormModelsQuestionFormModel: CyberjusticeLabKernelSharedFormModelsQuestionFormModel,
        CyberjusticeLabKernelSharedFormModelsQuestionFormApiResponseData: CyberjusticeLabKernelSharedFormModelsQuestionFormApiResponseData,
        CyberjusticeLabKernelServiceContractsHearingMenuData: CyberjusticeLabKernelServiceContractsHearingMenuData,
        CyberjusticeLabKernelServiceContractsJournalJournalData: CyberjusticeLabKernelServiceContractsJournalJournalData,
        CyberjusticeLabKernelSharedJournalModelsJournalModel: CyberjusticeLabKernelSharedJournalModelsJournalModel,
        CyberjusticeLabKernelSharedJournalModelsJournalApiResquestData: CyberjusticeLabKernelSharedJournalModelsJournalApiResquestData,
        CyberjusticeLabKernelSharedJournalModelsJournalApiResponseData: CyberjusticeLabKernelSharedJournalModelsJournalApiResponseData,
        CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResquestData: CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResquestData,
        CyberjusticeLabKernelSharedJournalModelsFileLatestJournalModel: CyberjusticeLabKernelSharedJournalModelsFileLatestJournalModel,
        CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResponseData: CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResponseData,
        CyberjusticeLabKernelSharedJournalModelsCreateJournalModel: CyberjusticeLabKernelSharedJournalModelsCreateJournalModel,
        CyberjusticeLabKernelServiceContractsJudicialEntityNeutralPredicateData: CyberjusticeLabKernelServiceContractsJudicialEntityNeutralPredicateData,
        CyberjusticeLabKernelServiceContractsJudicialEntityProsecutingAgentPredicateData: CyberjusticeLabKernelServiceContractsJudicialEntityProsecutingAgentPredicateData,
        CyberjusticeLabKernelServiceContractsJudicialEntityJudicialEntityData: CyberjusticeLabKernelServiceContractsJudicialEntityJudicialEntityData,
        CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiRequestData: CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiRequestData,
        CyberjusticeLabKernelSharedJudicialEntityModelsMatterModel: CyberjusticeLabKernelSharedJudicialEntityModelsMatterModel,
        CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiResponseData: CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiResponseData,
        CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiRequestData: CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiRequestData,
        CyberjusticeLabKernelSharedJudicialEntityModelsEntityNeutralPredicateLinkModel: CyberjusticeLabKernelSharedJudicialEntityModelsEntityNeutralPredicateLinkModel,
        CyberjusticeLabKernelSharedJudicialEntityModelsEntityProsecutingAgentPredicateLinkModel: CyberjusticeLabKernelSharedJudicialEntityModelsEntityProsecutingAgentPredicateLinkModel,
        CyberjusticeLabKernelSharedJudicialEntityModelsMatterJudicialEntityLinkModel: CyberjusticeLabKernelSharedJudicialEntityModelsMatterJudicialEntityLinkModel,
        CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityModel: CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityModel,
        CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiResponseData: CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsDetachRepresentativeFromPartyModel: CyberjusticeLabKernelSharedJudicialFileModelsDetachRepresentativeFromPartyModel,
        CyberjusticeLabKernelServiceContractsJudicialFileContactPhoneNumberData: CyberjusticeLabKernelServiceContractsJudicialFileContactPhoneNumberData,
        CyberjusticeLabKernelServiceContractsJudicialFileContactAttributeData: CyberjusticeLabKernelServiceContractsJudicialFileContactAttributeData,
        CyberjusticeLabKernelServiceContractsJudicialFileContactData: CyberjusticeLabKernelServiceContractsJudicialFileContactData,
        CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeData: CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeData,
        CyberjusticeLabKernelServiceContractsJudicialFileChargeAttributeData: CyberjusticeLabKernelServiceContractsJudicialFileChargeAttributeData,
        CyberjusticeLabKernelServiceContractsJudicialFilePleaData: CyberjusticeLabKernelServiceContractsJudicialFilePleaData,
        CyberjusticeLabKernelServiceContractsJudicialFileChargePenalOffenceStatementData: CyberjusticeLabKernelServiceContractsJudicialFileChargePenalOffenceStatementData,
        CyberjusticeLabKernelServiceContractsJudicialFilePartyAttributeData: CyberjusticeLabKernelServiceContractsJudicialFilePartyAttributeData,
        CyberjusticeLabKernelServiceContractsJudicialFilePartyHearingPreferenceTimeData: CyberjusticeLabKernelServiceContractsJudicialFilePartyHearingPreferenceTimeData,
        CyberjusticeLabKernelServiceContractsJudicialFilePartyData: CyberjusticeLabKernelServiceContractsJudicialFilePartyData,
        CyberjusticeLabKernelServiceContractsJudicialFileTrackingStatusData: CyberjusticeLabKernelServiceContractsJudicialFileTrackingStatusData,
        CyberjusticeLabKernelServiceContractsJudicialFileAttributeData: CyberjusticeLabKernelServiceContractsJudicialFileAttributeData,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileTagData: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileTagData,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileData: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileData,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResquestData: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResquestData,
        CyberjusticeLabKernelSharedJudicialFileModelsContactPhoneNumberModel: CyberjusticeLabKernelSharedJudicialFileModelsContactPhoneNumberModel,
        CyberjusticeLabKernelSharedJudicialFileModelsContactAttributeModel: CyberjusticeLabKernelSharedJudicialFileModelsContactAttributeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsContactModel: CyberjusticeLabKernelSharedJudicialFileModelsContactModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyRepresentativeLinkAttributeModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyRepresentativeLinkAttributeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeModel: CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsChargeAttributeModel: CyberjusticeLabKernelSharedJudicialFileModelsChargeAttributeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPleaModel: CyberjusticeLabKernelSharedJudicialFileModelsPleaModel,
        CyberjusticeLabKernelSharedJudicialFileModelsChargePenalOffenceStatementModel: CyberjusticeLabKernelSharedJudicialFileModelsChargePenalOffenceStatementModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyAttributeModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyAttributeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyHearingPreferenceTimeModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyHearingPreferenceTimeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyModel,
        CyberjusticeLabKernelSharedJudicialFileModelsTrackingStatusModel: CyberjusticeLabKernelSharedJudicialFileModelsTrackingStatusModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileAttributeModel: CyberjusticeLabKernelSharedJudicialFileModelsFileAttributeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResponseData,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet1Data: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet1Data,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet2Data: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet2Data,
        CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeProfileData: CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeProfileData,
        CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeUserData: CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeUserData,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileOfPartyEntityData: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileOfPartyEntityData,
        CyberjusticeLabKernelServiceContractsJudicialFilePartyEntityData: CyberjusticeLabKernelServiceContractsJudicialFilePartyEntityData,
        CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleEntityData: CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleEntityData,
        CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleData: CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleData,
        CyberjusticeLabKernelServiceContractsJudicialFileNeutralZipCodeData: CyberjusticeLabKernelServiceContractsJudicialFileNeutralZipCodeData,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileVerifyData: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileVerifyData,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationModel,
        CyberjusticeLabKernelSharedJudicialFileFileInvitationPartyInformationModel: CyberjusticeLabKernelSharedJudicialFileFileInvitationPartyInformationModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationInformationModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationInformationModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPhoneNumber: CyberjusticeLabKernelSharedJudicialFileModelsPhoneNumber,
        CyberjusticeLabKernelSharedJudicialFileModelsAtribute: CyberjusticeLabKernelSharedJudicialFileModelsAtribute,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyInformation: CyberjusticeLabKernelSharedJudicialFileModelsPartyInformation,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInformationFromPartyInvitationModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInformationFromPartyInvitationModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByFileModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByFileModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByAggregatorCodeModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByAggregatorCodeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationRefuseModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationRefuseModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationRefuseModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationRefuseModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsRepresentativesToPartyModel: CyberjusticeLabKernelSharedJudicialFileModelsRepresentativesToPartyModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLinkRepresentativesToPartyModel: CyberjusticeLabKernelSharedJudicialFileModelsLinkRepresentativesToPartyModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationAcceptModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationAcceptModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiRequestData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiRequestData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationResourceModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationResourceModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiRequestData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreatePartyRepresentativeModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreatePartyRepresentativeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLastActorRequestData: CyberjusticeLabKernelSharedJudicialFileModelsLastActorRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiRequestData: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsLogPermissionModel: CyberjusticeLabKernelSharedJudicialFileModelsLogPermissionModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateModel: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestDataDedicatedSearch: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestDataDedicatedSearch,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestData: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryResourceModel: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryResourceModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryModel: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeContactModel: CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeContactModel,
        CyberjusticeLabKernelSharedJudicialFileModelsCreateRepresentativeProfileModel: CyberjusticeLabKernelSharedJudicialFileModelsCreateRepresentativeProfileModel,
        CyberjusticeLabKernelSharedJudicialFileModelsCloseFileModel: CyberjusticeLabKernelSharedJudicialFileModelsCloseFileModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileAttributesUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileAttributesUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyUpsertModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyUpsertModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyContactUpsertModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyContactUpsertModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateWithComplementModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateWithComplementModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeResourceUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeResourceUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationRepresentativeUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationRepresentativeUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeUpdateModel,
        CyberjusticeLabKernelSharedLocationLocationRoomData: CyberjusticeLabKernelSharedLocationLocationRoomData,
        CyberjusticeLabKernelSharedLocationLocationBuildingData: CyberjusticeLabKernelSharedLocationLocationBuildingData,
        CyberjusticeLabKernelSharedLocationLocationBuildingUpdateData: CyberjusticeLabKernelSharedLocationLocationBuildingUpdateData,
        CyberjusticeLabKernelSharedLocationLocationRoomUpdateData: CyberjusticeLabKernelSharedLocationLocationRoomUpdateData,
        CyberjusticeLabKernelSharedLocationLocationBuildingCreateData: CyberjusticeLabKernelSharedLocationLocationBuildingCreateData,
        CyberjusticeLabKernelSharedLocationLocationRoomCreateData: CyberjusticeLabKernelSharedLocationLocationRoomCreateData,
        CyberjusticeLabKernelSharedLookupModelsLookupValueModel: CyberjusticeLabKernelSharedLookupModelsLookupValueModel,
        CyberjusticeLabKernelSharedLookupModelsLookupModel: CyberjusticeLabKernelSharedLookupModelsLookupModel,
        CyberjusticeLabKernelSharedLookupModelsLookupApiRequestData: CyberjusticeLabKernelSharedLookupModelsLookupApiRequestData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationDeleteData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationDeleteData,
        CyberjusticeLabKernelSharedProsecutingAuthorityBaseProsecutingAuthorityData: CyberjusticeLabKernelSharedProsecutingAuthorityBaseProsecutingAuthorityData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityUpdateData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityUpdateData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityCreateData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityCreateData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationCreateData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationCreateData,
        CyberjusticeLabKernelSharedRequestRequestAttributeData: CyberjusticeLabKernelSharedRequestRequestAttributeData,
        CyberjusticeLabKernelSharedRequestRequestData: CyberjusticeLabKernelSharedRequestRequestData,
        CyberjusticeLabKernelSharedRequestRequestCreateData: CyberjusticeLabKernelSharedRequestRequestCreateData,
        CyberjusticeLabKernelSharedRequestRequestUpdateData: CyberjusticeLabKernelSharedRequestRequestUpdateData,
        CyberjusticeLabKernelSharedRequestRequestUpdateAttributeData: CyberjusticeLabKernelSharedRequestRequestUpdateAttributeData,
        CyberjusticeLabKernelServiceContractsSecureMailEmailData: CyberjusticeLabKernelServiceContractsSecureMailEmailData,
        CyberjusticeLabKernelServiceContractsSecurityClaimValueData: CyberjusticeLabKernelServiceContractsSecurityClaimValueData,
        CyberjusticeLabKernelServiceContractsSecurityPredicateData: CyberjusticeLabKernelServiceContractsSecurityPredicateData,
        CyberjusticeLabKernelSharedTagLocalizedLabelData: CyberjusticeLabKernelSharedTagLocalizedLabelData,
        CyberjusticeLabKernelSharedTagTagData: CyberjusticeLabKernelSharedTagTagData,
        CyberjusticeLabKernelSharedTagTagLinkData: CyberjusticeLabKernelSharedTagTagLinkData,
        CyberjusticeLabKernelSharedTagLabelLocalizationData: CyberjusticeLabKernelSharedTagLabelLocalizationData,
        CyberjusticeLabKernelSharedTagLabelData: CyberjusticeLabKernelSharedTagLabelData,
        CyberjusticeLabKernelSharedTagTagLinkUpdateData: CyberjusticeLabKernelSharedTagTagLinkUpdateData,
        CyberjusticeLabKernelSharedTagLabelLocalizationBaseData: CyberjusticeLabKernelSharedTagLabelLocalizationBaseData,
        CyberjusticeLabKernelSharedTagLabelUpdateData: CyberjusticeLabKernelSharedTagLabelUpdateData,
        CyberjusticeLabKernelSharedTagTagLinkCreateData: CyberjusticeLabKernelSharedTagTagLinkCreateData,
        CyberjusticeLabKernelSharedTagLabelCreateData: CyberjusticeLabKernelSharedTagLabelCreateData,
        CyberjusticeLabKernelServiceContractsUProfileUserPhoneNumberData: CyberjusticeLabKernelServiceContractsUProfileUserPhoneNumberData,
        CyberjusticeLabKernelServiceContractsUProfileUserAttributeData: CyberjusticeLabKernelServiceContractsUProfileUserAttributeData,
        CyberjusticeLabKernelServiceContractsUProfileUserData: CyberjusticeLabKernelServiceContractsUProfileUserData,
        CyberjusticeLabKernelServiceContractsUserUserData: CyberjusticeLabKernelServiceContractsUserUserData,
        CyberjusticeLabKernelServiceContractsUserGroupData: CyberjusticeLabKernelServiceContractsUserGroupData,
        CyberjusticeLabKernelServiceContractsUserClaimTransformationRuleData: CyberjusticeLabKernelServiceContractsUserClaimTransformationRuleData,
        CyberjusticeLabKernelServiceContractsUserOrganizationData: CyberjusticeLabKernelServiceContractsUserOrganizationData,
        CyberjusticeLabKernelSharedUserModelsOrganizationSummaryModel: CyberjusticeLabKernelSharedUserModelsOrganizationSummaryModel,
        CyberjusticeLabKernelServiceContractsWitnessWitnessPhoneNumberData: CyberjusticeLabKernelServiceContractsWitnessWitnessPhoneNumberData,
        CyberjusticeLabKernelServiceContractsWitnessWitnessExpertiseData: CyberjusticeLabKernelServiceContractsWitnessWitnessExpertiseData,
        CyberjusticeLabKernelServiceContractsWitnessWitnessDocumentData: CyberjusticeLabKernelServiceContractsWitnessWitnessDocumentData,
        CyberjusticeLabKernelServiceContractsWitnessWitnessData: CyberjusticeLabKernelServiceContractsWitnessWitnessData,
        CyberjusticeLabKernelSharedWitnessAttributesFilters: CyberjusticeLabKernelSharedWitnessAttributesFilters,
        CyberjusticeLabKernelSharedWitnessModelsActionsFilters: CyberjusticeLabKernelSharedWitnessModelsActionsFilters,
        CyberjusticeLabKernelSharedWitnessModelsWitnessApiRequestData: CyberjusticeLabKernelSharedWitnessModelsWitnessApiRequestData,
        CyberjusticeLabKernelSharedWitnessModelsPhoneNumberModel: CyberjusticeLabKernelSharedWitnessModelsPhoneNumberModel,
        CyberjusticeLabKernelSharedWitnessModelsAttributeModel: CyberjusticeLabKernelSharedWitnessModelsAttributeModel,
        CyberjusticeLabKernelSharedWitnessModelsWitnessPartyActionModel: CyberjusticeLabKernelSharedWitnessModelsWitnessPartyActionModel,
        CyberjusticeLabKernelSharedWitnessModelsWitnessModel: CyberjusticeLabKernelSharedWitnessModelsWitnessModel,
        CyberjusticeLabKernelSharedWitnessModelsWitnessApiResponseData: CyberjusticeLabKernelSharedWitnessModelsWitnessApiResponseData,
        CyberjusticeLabKernelServiceContractsWitnessJudicialFileExternalWitnessData: CyberjusticeLabKernelServiceContractsWitnessJudicialFileExternalWitnessData,
        CyberjusticeLabKernelSharedWitnessModelsCreateWitnessPartyActionModel: CyberjusticeLabKernelSharedWitnessModelsCreateWitnessPartyActionModel,
        CyberjusticeLabKernelSharedWitnessModelsCreateWitnessModel: CyberjusticeLabKernelSharedWitnessModelsCreateWitnessModel,
        CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessAttributes: CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessAttributes,
        CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessModel: CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessModel,
        CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessPartyActionsModel: CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessPartyActionsModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelSharedAsyncModelsTimeEventApiRequestModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventApiRequestModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventApiResponseModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventApiResponseModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationResourceModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventNotificationResourceModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventLogModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventLogModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventLogResourceModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventLogResourceModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventEmailModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventEmailModel,
        CyberjusticeLabKernelSharedAsyncModelsTimeEventCreateModel: CyberjusticeLabKernelSharedAsyncModelsTimeEventCreateModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var activeOnly = {
        parameterPath: [
            "options",
            "activeOnly"
        ],
        mapper: {
            serializedName: "activeOnly",
            type: {
                name: "Boolean"
            }
        }
    };
    var aggregatorCode = {
        parameterPath: [
            "options",
            "aggregatorCode"
        ],
        mapper: {
            serializedName: "aggregatorCode",
            type: {
                name: "String"
            }
        }
    };
    var aggregatorCodeIsSubstring0 = {
        parameterPath: "aggregatorCodeIsSubstring",
        mapper: {
            required: true,
            serializedName: "aggregatorCodeIsSubstring",
            type: {
                name: "Boolean"
            }
        }
    };
    var aggregatorCodeIsSubstring1 = {
        parameterPath: [
            "options",
            "aggregatorCodeIsSubstring"
        ],
        mapper: {
            serializedName: "aggregatorCodeIsSubstring",
            type: {
                name: "Boolean"
            }
        }
    };
    var aggregatorsCodes = {
        parameterPath: "aggregatorsCodes",
        mapper: {
            required: true,
            serializedName: "aggregatorsCodes",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var baseCalendarId = {
        parameterPath: "baseCalendarId",
        mapper: {
            required: true,
            serializedName: "baseCalendarId",
            type: {
                name: "String"
            }
        }
    };
    var baseCalendarIds = {
        parameterPath: [
            "options",
            "baseCalendarIds"
        ],
        mapper: {
            serializedName: "baseCalendarIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var buildingId0 = {
        parameterPath: "buildingId",
        mapper: {
            required: true,
            serializedName: "buildingId",
            type: {
                name: "Uuid"
            }
        }
    };
    var buildingId1 = {
        parameterPath: "buildingId",
        mapper: {
            required: true,
            serializedName: "buildingId",
            type: {
                name: "String"
            }
        }
    };
    var businessRuleName = {
        parameterPath: "businessRuleName",
        mapper: {
            required: true,
            serializedName: "businessRuleName",
            type: {
                name: "String"
            }
        }
    };
    var businessRuleNames = {
        parameterPath: [
            "options",
            "businessRuleNames"
        ],
        mapper: {
            serializedName: "businessRuleNames",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var calendarId0 = {
        parameterPath: "calendarId",
        mapper: {
            required: true,
            serializedName: "calendarId",
            type: {
                name: "String"
            }
        }
    };
    var calendarId1 = {
        parameterPath: "calendarId",
        mapper: {
            required: true,
            serializedName: "calendarId",
            type: {
                name: "Uuid"
            }
        }
    };
    var calendarTypes = {
        parameterPath: [
            "options",
            "calendarTypes"
        ],
        mapper: {
            serializedName: "calendarTypes",
            type: {
                name: "String"
            }
        }
    };
    var chargeId = {
        parameterPath: "chargeId",
        mapper: {
            required: true,
            serializedName: "chargeId",
            type: {
                name: "Uuid"
            }
        }
    };
    var childrenLevel = {
        parameterPath: "childrenLevel",
        mapper: {
            required: true,
            serializedName: "childrenLevel",
            type: {
                name: "Number"
            }
        }
    };
    var closedDayIds = {
        parameterPath: [
            "options",
            "closedDayIds"
        ],
        mapper: {
            serializedName: "closedDayIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var closingReasons = {
        parameterPath: [
            "options",
            "closingReasons"
        ],
        mapper: {
            serializedName: "closingReasons",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var code = {
        parameterPath: "code",
        mapper: {
            required: true,
            serializedName: "code",
            type: {
                name: "String"
            }
        }
    };
    var codes0 = {
        parameterPath: "codes",
        mapper: {
            required: true,
            serializedName: "codes",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var codes1 = {
        parameterPath: [
            "options",
            "codes"
        ],
        mapper: {
            serializedName: "codes",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var culture = {
        parameterPath: "culture",
        mapper: {
            required: true,
            serializedName: "culture",
            type: {
                name: "String"
            }
        }
    };
    var cultureCode = {
        parameterPath: "cultureCode",
        mapper: {
            required: true,
            serializedName: "cultureCode",
            type: {
                name: "String"
            }
        }
    };
    var currentRole = {
        parameterPath: "currentRole",
        mapper: {
            required: true,
            serializedName: "currentRole",
            type: {
                name: "String"
            }
        }
    };
    var currentVersion = {
        parameterPath: "currentVersion",
        mapper: {
            required: true,
            serializedName: "currentVersion",
            type: {
                name: "Number"
            }
        }
    };
    var cycleId = {
        parameterPath: "cycleId",
        mapper: {
            required: true,
            serializedName: "cycleId",
            type: {
                name: "String"
            }
        }
    };
    var cycleIds = {
        parameterPath: [
            "options",
            "cycleIds"
        ],
        mapper: {
            serializedName: "cycleIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var disputeDescription = {
        parameterPath: "disputeDescription",
        mapper: {
            required: true,
            serializedName: "disputeDescription",
            type: {
                name: "String"
            }
        }
    };
    var documentId = {
        parameterPath: "documentId",
        mapper: {
            required: true,
            serializedName: "documentId",
            type: {
                name: "Uuid"
            }
        }
    };
    var endDate = {
        parameterPath: [
            "options",
            "endDate"
        ],
        mapper: {
            serializedName: "endDate",
            type: {
                name: "DateTime"
            }
        }
    };
    var entityId = {
        parameterPath: "entityId",
        mapper: {
            required: true,
            serializedName: "entityId",
            type: {
                name: "String"
            }
        }
    };
    var entryId = {
        parameterPath: "entryId",
        mapper: {
            required: true,
            serializedName: "entryId",
            type: {
                name: "String"
            }
        }
    };
    var eventId = {
        parameterPath: "eventId",
        mapper: {
            required: true,
            serializedName: "eventId",
            type: {
                name: "Uuid"
            }
        }
    };
    var excludedProsecutingAuthorityIds = {
        parameterPath: [
            "options",
            "excludedProsecutingAuthorityIds"
        ],
        mapper: {
            serializedName: "excludedProsecutingAuthorityIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var excludedStatuses = {
        parameterPath: [
            "options",
            "excludedStatuses"
        ],
        mapper: {
            serializedName: "excludedStatuses",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var expiryDate = {
        parameterPath: "expiryDate",
        mapper: {
            required: true,
            serializedName: "expiryDate",
            type: {
                name: "DateTime"
            }
        }
    };
    var fileId0 = {
        parameterPath: "fileId",
        mapper: {
            required: true,
            serializedName: "fileId",
            type: {
                name: "Uuid"
            }
        }
    };
    var fileId1 = {
        parameterPath: "fileId",
        mapper: {
            required: true,
            serializedName: "fileId",
            type: {
                name: "String"
            }
        }
    };
    var fileIds0 = {
        parameterPath: [
            "options",
            "fileIds"
        ],
        mapper: {
            serializedName: "fileIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var fileIds1 = {
        parameterPath: "fileIds",
        mapper: {
            required: true,
            serializedName: "fileIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var fileInvitationId = {
        parameterPath: "fileInvitationId",
        mapper: {
            required: true,
            serializedName: "fileInvitationId",
            type: {
                name: "Uuid"
            }
        }
    };
    var fileStatus = {
        parameterPath: "fileStatus",
        mapper: {
            required: true,
            serializedName: "fileStatus",
            type: {
                name: "String"
            }
        }
    };
    var formCode = {
        parameterPath: "formCode",
        mapper: {
            required: true,
            serializedName: "formCode",
            type: {
                name: "String"
            }
        }
    };
    var formId = {
        parameterPath: "formId",
        mapper: {
            required: true,
            serializedName: "formId",
            type: {
                name: "String"
            }
        }
    };
    var forumId = {
        parameterPath: "forumId",
        mapper: {
            required: true,
            serializedName: "forumId",
            type: {
                name: "Uuid"
            }
        }
    };
    var hearingId = {
        parameterPath: "hearingId",
        mapper: {
            required: true,
            serializedName: "hearingId",
            type: {
                name: "Uuid"
            }
        }
    };
    var id0 = {
        parameterPath: "id",
        mapper: {
            required: true,
            serializedName: "id",
            type: {
                name: "String"
            }
        }
    };
    var id1 = {
        parameterPath: "id",
        mapper: {
            required: true,
            serializedName: "id",
            type: {
                name: "Uuid"
            }
        }
    };
    var invitationId = {
        parameterPath: "invitationId",
        mapper: {
            required: true,
            serializedName: "invitationId",
            type: {
                name: "Uuid"
            }
        }
    };
    var jEId = {
        parameterPath: "jEId",
        mapper: {
            required: true,
            serializedName: "JEId",
            type: {
                name: "String"
            }
        }
    };
    var journalCodes = {
        parameterPath: "journalCodes",
        mapper: {
            required: true,
            serializedName: "journalCodes",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var journalId = {
        parameterPath: "journalId",
        mapper: {
            required: true,
            serializedName: "journalId",
            type: {
                name: "Uuid"
            }
        }
    };
    var judicialEntityId0 = {
        parameterPath: "judicialEntityId",
        mapper: {
            required: true,
            serializedName: "judicialEntityId",
            type: {
                name: "Uuid"
            }
        }
    };
    var judicialEntityId1 = {
        parameterPath: "judicialEntityId",
        mapper: {
            required: true,
            serializedName: "judicialEntityId",
            type: {
                name: "String"
            }
        }
    };
    var judicialEntityIds = {
        parameterPath: [
            "options",
            "judicialEntityIds"
        ],
        mapper: {
            serializedName: "judicialEntityIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var judicialFileId0 = {
        parameterPath: "judicialFileId",
        mapper: {
            required: true,
            serializedName: "judicialFileId",
            type: {
                name: "String"
            }
        }
    };
    var judicialFileId1 = {
        parameterPath: "judicialFileId",
        mapper: {
            required: true,
            serializedName: "JudicialFileId",
            type: {
                name: "String"
            }
        }
    };
    var judicialFileIds = {
        parameterPath: [
            "options",
            "judicialFileIds"
        ],
        mapper: {
            serializedName: "judicialFileIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var key = {
        parameterPath: "key",
        mapper: {
            required: true,
            serializedName: "key",
            type: {
                name: "Uuid"
            }
        }
    };
    var labelId0 = {
        parameterPath: "labelId",
        mapper: {
            required: true,
            serializedName: "labelId",
            type: {
                name: "String"
            }
        }
    };
    var labelId1 = {
        parameterPath: "labelId",
        mapper: {
            required: true,
            serializedName: "labelId",
            type: {
                name: "Uuid"
            }
        }
    };
    var labelSection = {
        parameterPath: "labelSection",
        mapper: {
            required: true,
            serializedName: "labelSection",
            type: {
                name: "String"
            }
        }
    };
    var lang = {
        parameterPath: "lang",
        mapper: {
            required: true,
            serializedName: "lang",
            type: {
                name: "String"
            }
        }
    };
    var lastModified0 = {
        parameterPath: "lastModified",
        mapper: {
            required: true,
            serializedName: "lastModified",
            type: {
                name: "String"
            }
        }
    };
    var lastModified1 = {
        parameterPath: "lastModified",
        mapper: {
            required: true,
            serializedName: "lastModified",
            type: {
                name: "DateTime"
            }
        }
    };
    var lastModifiedDate = {
        parameterPath: "lastModifiedDate",
        mapper: {
            required: true,
            serializedName: "lastModifiedDate",
            type: {
                name: "String"
            }
        }
    };
    var linkId = {
        parameterPath: "linkId",
        mapper: {
            required: true,
            serializedName: "linkId",
            type: {
                name: "String"
            }
        }
    };
    var locationBuildingIds = {
        parameterPath: [
            "options",
            "locationBuildingIds"
        ],
        mapper: {
            serializedName: "locationBuildingIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var locationRoomId = {
        parameterPath: "locationRoomId",
        mapper: {
            required: true,
            serializedName: "locationRoomId",
            type: {
                name: "String"
            }
        }
    };
    var locationRoomIds = {
        parameterPath: [
            "options",
            "locationRoomIds"
        ],
        mapper: {
            serializedName: "locationRoomIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var maxCreatedDate = {
        parameterPath: [
            "options",
            "maxCreatedDate"
        ],
        mapper: {
            serializedName: "maxCreatedDate",
            type: {
                name: "DateTime"
            }
        }
    };
    var menuId = {
        parameterPath: "menuId",
        mapper: {
            required: true,
            serializedName: "menuId",
            type: {
                name: "Uuid"
            }
        }
    };
    var minCreatedDate = {
        parameterPath: [
            "options",
            "minCreatedDate"
        ],
        mapper: {
            serializedName: "minCreatedDate",
            type: {
                name: "DateTime"
            }
        }
    };
    var modifiedTicks = {
        parameterPath: "modifiedTicks",
        mapper: {
            required: true,
            serializedName: "modifiedTicks",
            type: {
                name: "String"
            }
        }
    };
    var name = {
        parameterPath: "name",
        mapper: {
            required: true,
            serializedName: "name",
            type: {
                name: "String"
            }
        }
    };
    var names0 = {
        parameterPath: [
            "options",
            "names"
        ],
        mapper: {
            serializedName: "names",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var names1 = {
        parameterPath: "names",
        mapper: {
            required: true,
            serializedName: "names",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var notificationCode0 = {
        parameterPath: "notificationCode",
        mapper: {
            required: true,
            serializedName: "notificationCode",
            type: {
                name: "String"
            }
        }
    };
    var notificationCode1 = {
        parameterPath: [
            "options",
            "notificationCode"
        ],
        mapper: {
            serializedName: "notificationCode",
            type: {
                name: "String"
            }
        }
    };
    var notificationId = {
        parameterPath: "notificationId",
        mapper: {
            required: true,
            serializedName: "notificationId",
            type: {
                name: "Number"
            }
        }
    };
    var objectCode = {
        parameterPath: "objectCode",
        mapper: {
            required: true,
            serializedName: "objectCode",
            type: {
                name: "String"
            }
        }
    };
    var orderBy = {
        parameterPath: [
            "options",
            "orderBy"
        ],
        mapper: {
            serializedName: "orderBy",
            type: {
                name: "String"
            }
        }
    };
    var orderByDescending = {
        parameterPath: [
            "options",
            "orderByDescending"
        ],
        mapper: {
            serializedName: "orderByDescending",
            type: {
                name: "Boolean"
            }
        }
    };
    var partyEntityCodes = {
        parameterPath: [
            "options",
            "partyEntityCodes"
        ],
        mapper: {
            serializedName: "partyEntityCodes",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var partyEntityIds = {
        parameterPath: [
            "options",
            "partyEntityIds"
        ],
        mapper: {
            serializedName: "partyEntityIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var partyId0 = {
        parameterPath: "partyId",
        mapper: {
            required: true,
            serializedName: "partyId",
            type: {
                name: "String"
            }
        }
    };
    var partyId1 = {
        parameterPath: "partyId",
        mapper: {
            required: true,
            serializedName: "partyId",
            type: {
                name: "Uuid"
            }
        }
    };
    var partyInvitationId = {
        parameterPath: "partyInvitationId",
        mapper: {
            required: true,
            serializedName: "partyInvitationId",
            type: {
                name: "Uuid"
            }
        }
    };
    var partyType = {
        parameterPath: "partyType",
        mapper: {
            required: true,
            serializedName: "partyType",
            type: {
                name: "String"
            }
        }
    };
    var periodAvailabilityGroupId = {
        parameterPath: "periodAvailabilityGroupId",
        mapper: {
            required: true,
            serializedName: "periodAvailabilityGroupId",
            type: {
                name: "String"
            }
        }
    };
    var periodAvailabilityId = {
        parameterPath: "periodAvailabilityId",
        mapper: {
            required: true,
            serializedName: "periodAvailabilityId",
            type: {
                name: "String"
            }
        }
    };
    var periodAvailabilityIds = {
        parameterPath: [
            "options",
            "periodAvailabilityIds"
        ],
        mapper: {
            serializedName: "periodAvailabilityIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var prosecutingAuthorityIds = {
        parameterPath: [
            "options",
            "prosecutingAuthorityIds"
        ],
        mapper: {
            serializedName: "prosecutingAuthorityIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var prosecutingAuthorityNames = {
        parameterPath: [
            "options",
            "prosecutingAuthorityNames"
        ],
        mapper: {
            serializedName: "prosecutingAuthorityNames",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var realm = {
        parameterPath: "realm",
        mapper: {
            required: true,
            serializedName: "realm",
            type: {
                name: "String"
            }
        }
    };
    var representativeId = {
        parameterPath: "representativeId",
        mapper: {
            required: true,
            serializedName: "representativeId",
            type: {
                name: "Uuid"
            }
        }
    };
    var representativeIds = {
        parameterPath: [
            "options",
            "representativeIds"
        ],
        mapper: {
            serializedName: "representativeIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var requestId = {
        parameterPath: "requestId",
        mapper: {
            required: true,
            serializedName: "requestId",
            type: {
                name: "Uuid"
            }
        }
    };
    var resourceTypes = {
        parameterPath: [
            "options",
            "resourceTypes"
        ],
        mapper: {
            serializedName: "resourceTypes",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var roleCode = {
        parameterPath: "roleCode",
        mapper: {
            required: true,
            serializedName: "roleCode",
            type: {
                name: "String"
            }
        }
    };
    var roomId0 = {
        parameterPath: "roomId",
        mapper: {
            required: true,
            serializedName: "roomId",
            type: {
                name: "Uuid"
            }
        }
    };
    var roomId1 = {
        parameterPath: "roomId",
        mapper: {
            required: true,
            serializedName: "roomId",
            type: {
                name: "String"
            }
        }
    };
    var roomIds = {
        parameterPath: [
            "options",
            "roomIds"
        ],
        mapper: {
            serializedName: "roomIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var scheduleEntryId = {
        parameterPath: "scheduleEntryId",
        mapper: {
            required: true,
            serializedName: "scheduleEntryId",
            type: {
                name: "String"
            }
        }
    };
    var schedulePatternId = {
        parameterPath: "schedulePatternId",
        mapper: {
            required: true,
            serializedName: "schedulePatternId",
            type: {
                name: "String"
            }
        }
    };
    var schedulePatternIds = {
        parameterPath: [
            "options",
            "schedulePatternIds"
        ],
        mapper: {
            serializedName: "schedulePatternIds",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Uuid"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var searchBy = {
        parameterPath: [
            "options",
            "searchBy"
        ],
        mapper: {
            serializedName: "searchBy",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var searchStatuses = {
        parameterPath: [
            "options",
            "searchStatuses"
        ],
        mapper: {
            serializedName: "searchStatuses",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var searchText = {
        parameterPath: [
            "options",
            "searchText"
        ],
        mapper: {
            serializedName: "searchText",
            type: {
                name: "String"
            }
        }
    };
    var skip = {
        parameterPath: [
            "options",
            "skip"
        ],
        mapper: {
            serializedName: "skip",
            type: {
                name: "Number"
            }
        }
    };
    var startDate = {
        parameterPath: [
            "options",
            "startDate"
        ],
        mapper: {
            serializedName: "startDate",
            type: {
                name: "DateTime"
            }
        }
    };
    var status = {
        parameterPath: "status",
        mapper: {
            required: true,
            serializedName: "status",
            type: {
                name: "String"
            }
        }
    };
    var statuses = {
        parameterPath: [
            "options",
            "statuses"
        ],
        mapper: {
            serializedName: "statuses",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var statusFrom = {
        parameterPath: "statusFrom",
        mapper: {
            required: true,
            serializedName: "statusFrom",
            type: {
                name: "String"
            }
        }
    };
    var statusTo = {
        parameterPath: "statusTo",
        mapper: {
            required: true,
            serializedName: "statusTo",
            type: {
                name: "String"
            }
        }
    };
    var tagCode = {
        parameterPath: "tagCode",
        mapper: {
            required: true,
            serializedName: "tagCode",
            type: {
                name: "String"
            }
        }
    };
    var tagCodes = {
        parameterPath: [
            "options",
            "tagCodes"
        ],
        mapper: {
            serializedName: "tagCodes",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var tagId = {
        parameterPath: "tagId",
        mapper: {
            required: true,
            serializedName: "tagId",
            type: {
                name: "Uuid"
            }
        }
    };
    var take0 = {
        parameterPath: [
            "options",
            "take"
        ],
        mapper: {
            serializedName: "take",
            type: {
                name: "Number"
            }
        }
    };
    var take1 = {
        parameterPath: "take",
        mapper: {
            required: true,
            serializedName: "take",
            type: {
                name: "Number"
            }
        }
    };
    var timeEventId = {
        parameterPath: "timeEventId",
        mapper: {
            required: true,
            serializedName: "timeEventId",
            type: {
                name: "Uuid"
            }
        }
    };
    var timerDate = {
        parameterPath: "timerDate",
        mapper: {
            required: true,
            serializedName: "timerDate",
            type: {
                name: "DateTime"
            }
        }
    };
    var timerStatus = {
        parameterPath: "timerStatus",
        mapper: {
            required: true,
            serializedName: "timerStatus",
            type: {
                name: "String"
            }
        }
    };
    var titles = {
        parameterPath: [
            "options",
            "titles"
        ],
        mapper: {
            serializedName: "titles",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var type = {
        parameterPath: "type",
        mapper: {
            required: true,
            serializedName: "type",
            type: {
                name: "String"
            }
        }
    };
    var urn = {
        parameterPath: "urn",
        mapper: {
            required: true,
            serializedName: "urn",
            type: {
                name: "String"
            }
        }
    };
    var userCodes = {
        parameterPath: [
            "options",
            "userCodes"
        ],
        mapper: {
            serializedName: "userCodes",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var userId = {
        parameterPath: "userId",
        mapper: {
            required: true,
            serializedName: "userId",
            type: {
                name: "String"
            }
        }
    };
    var username = {
        parameterPath: "username",
        mapper: {
            required: true,
            serializedName: "username",
            type: {
                name: "String"
            }
        }
    };
    var userRoles = {
        parameterPath: [
            "options",
            "userRoles"
        ],
        mapper: {
            serializedName: "userRoles",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Multi
    };
    var weekday = {
        parameterPath: "weekday",
        mapper: {
            required: true,
            serializedName: "weekday",
            type: {
                name: "String"
            }
        }
    };
    var witnessCode = {
        parameterPath: "witnessCode",
        mapper: {
            required: true,
            serializedName: "witnessCode",
            type: {
                name: "String"
            }
        }
    };
    var witnessId = {
        parameterPath: "witnessId",
        mapper: {
            required: true,
            serializedName: "witnessId",
            type: {
                name: "Uuid"
            }
        }
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Async. */
    var Async = /** @class */ (function () {
        /**
         * Create a Async.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Async(client) {
            this.client = client;
        }
        Async.prototype.deleteTimeEvent = function (timeEventId$$1, options, callback) {
            return this.client.sendOperationRequest({
                timeEventId: timeEventId$$1,
                options: options
            }, deleteTimeEventOperationSpec, callback);
        };
        Async.prototype.patchTimeEvent = function (timeEventId$$1, timerStatus$$1, timerDate$$1, options, callback) {
            return this.client.sendOperationRequest({
                timeEventId: timeEventId$$1,
                timerStatus: timerStatus$$1,
                timerDate: timerDate$$1,
                options: options
            }, patchTimeEventOperationSpec, callback);
        };
        Async.prototype.getTimeEvents = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getTimeEventsOperationSpec, callback);
        };
        Async.prototype.createTimeEvent = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, createTimeEventOperationSpec, callback);
        };
        Async.prototype.updateTimeEvent = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updateTimeEventOperationSpec, callback);
        };
        return Async;
    }());
    // Operation Specifications
    var serializer = new msRest.Serializer(Mappers);
    var deleteTimeEventOperationSpec = {
        httpMethod: "DELETE",
        path: "Async/DELETE/TimeEvent",
        queryParameters: [
            timeEventId
        ],
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer
    };
    var patchTimeEventOperationSpec = {
        httpMethod: "PATCH",
        path: "Async/PATCH/PatchTimeEvent",
        queryParameters: [
            timeEventId,
            timerStatus,
            timerDate
        ],
        responses: {
            200: {},
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer
    };
    var getTimeEventsOperationSpec = {
        httpMethod: "POST",
        path: "Async/POST/GetTimeEvents",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedAsyncModelsTimeEventApiRequestModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedAsyncModelsTimeEventApiResponseModel
            },
            default: {}
        },
        serializer: serializer
    };
    var createTimeEventOperationSpec = {
        httpMethod: "POST",
        path: "Async/POST/CreateTimeEvent",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedAsyncModelsTimeEventCreateModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            404: {},
            default: {}
        },
        serializer: serializer
    };
    var updateTimeEventOperationSpec = {
        httpMethod: "PUT",
        path: "Async/PUT/UpdateTimeEvent",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedAsyncModelsTimeEventModel, { required: true })
        },
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$1 = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelDataAccessBusinessInformationJudicialFileWithFormProposalsCount: CyberjusticeLabKernelDataAccessBusinessInformationJudicialFileWithFormProposalsCount
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BusinessInformation. */
    var BusinessInformation = /** @class */ (function () {
        /**
         * Create a BusinessInformation.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function BusinessInformation(client) {
            this.client = client;
        }
        BusinessInformation.prototype.validateTransitionStatus = function (statusTo$$1, statusFrom$$1, fileId, options, callback) {
            return this.client.sendOperationRequest({
                statusTo: statusTo$$1,
                statusFrom: statusFrom$$1,
                fileId: fileId,
                options: options
            }, validateTransitionStatusOperationSpec, callback);
        };
        BusinessInformation.prototype.judicialFileWithFormProposalsCount = function (judicialEntityId, businessRuleName$$1, options, callback) {
            return this.client.sendOperationRequest({
                judicialEntityId: judicialEntityId,
                businessRuleName: businessRuleName$$1,
                options: options
            }, judicialFileWithFormProposalsCountOperationSpec, callback);
        };
        return BusinessInformation;
    }());
    // Operation Specifications
    var serializer$1 = new msRest.Serializer(Mappers$1);
    var validateTransitionStatusOperationSpec = {
        httpMethod: "GET",
        path: "BusinessInformation/GET/ValidateTransitionStatus",
        queryParameters: [
            statusTo,
            statusFrom,
            fileId0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Object"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$1
    };
    var judicialFileWithFormProposalsCountOperationSpec = {
        httpMethod: "GET",
        path: "BusinessInformation/GET/JudicialFileWithFormProposalsCount",
        queryParameters: [
            judicialEntityId0,
            businessRuleName
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelDataAccessBusinessInformationJudicialFileWithFormProposalsCount"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$1
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$2 = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsCalendarBaseCalendarUpdateData: CyberjusticeLabKernelServiceContractsCalendarBaseCalendarUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityUpdateData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarClosedDayUpdateData: CyberjusticeLabKernelServiceContractsCalendarClosedDayUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleUpdateData: CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkData: CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkData,
        CyberjusticeLabKernelServiceContractsCalendarSchedulePatternUpdateData: CyberjusticeLabKernelServiceContractsCalendarSchedulePatternUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarScheduleEntryUpdateData: CyberjusticeLabKernelServiceContractsCalendarScheduleEntryUpdateData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileData,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventModel,
        CyberjusticeLabKernelSharedCalendarModelsEventPartyLinkModel: CyberjusticeLabKernelSharedCalendarModelsEventPartyLinkModel,
        CyberjusticeLabKernelSharedCalendarModelsCreateAttributeModel: CyberjusticeLabKernelSharedCalendarModelsCreateAttributeModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventAttributesModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventAttributesModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateAttributeModel: CyberjusticeLabKernelSharedCalendarModelsUpdateAttributeModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehavioursModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehavioursModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehaviourModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehaviourModel,
        CyberjusticeLabKernelSharedCalendarModelsEventBehaviourPartyLinkModel: CyberjusticeLabKernelSharedCalendarModelsEventBehaviourPartyLinkModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventRankModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventRankModel,
        CyberjusticeLabKernelSharedCalendarModelsUpdateEventStartDateModel: CyberjusticeLabKernelSharedCalendarModelsUpdateEventStartDateModel,
        CyberjusticeLabKernelSharedCalendarModelsEventApiResquestData: CyberjusticeLabKernelSharedCalendarModelsEventApiResquestData,
        CyberjusticeLabKernelSharedCalendarModelsEventApiResponseData: CyberjusticeLabKernelSharedCalendarModelsEventApiResponseData,
        CyberjusticeLabKernelSharedCalendarModelsEventModel: CyberjusticeLabKernelSharedCalendarModelsEventModel,
        CyberjusticeLabKernelSharedCalendarModelsEventAttributeModel: CyberjusticeLabKernelSharedCalendarModelsEventAttributeModel,
        CyberjusticeLabKernelSharedCalendarModelsEventAttemptModel: CyberjusticeLabKernelSharedCalendarModelsEventAttemptModel,
        CyberjusticeLabKernelSharedCalendarModelsEventPartyResponseModel: CyberjusticeLabKernelSharedCalendarModelsEventPartyResponseModel,
        CyberjusticeLabKernelSharedCalendarModelsEventBehaviourModel: CyberjusticeLabKernelSharedCalendarModelsEventBehaviourModel,
        CyberjusticeLabKernelSharedCalendarModelsEventBehaviourAttributeModel: CyberjusticeLabKernelSharedCalendarModelsEventBehaviourAttributeModel,
        CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiRequestData: CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiRequestData,
        CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiResponseData: CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiResponseData,
        CyberjusticeLabKernelSharedCalendarModelsDayModel: CyberjusticeLabKernelSharedCalendarModelsDayModel,
        CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateData: CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateData,
        CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateRoleData: CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateRoleData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityCreateData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityCreateData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleBaseData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleBaseData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileBaseData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileBaseData,
        CyberjusticeLabKernelServiceContractsCalendarClosedWeekdayData: CyberjusticeLabKernelServiceContractsCalendarClosedWeekdayData,
        CyberjusticeLabKernelServiceContractsCalendarClosedDayCreateData: CyberjusticeLabKernelServiceContractsCalendarClosedDayCreateData,
        CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleCreateData: CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleCreateData,
        CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkCreateData: CyberjusticeLabKernelServiceContractsCalendarAssignmentWeekRoomUserLinkCreateData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleCreateData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleCreateData,
        CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCopyRequestData: CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCopyRequestData,
        CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCreateData: CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCreateData,
        CyberjusticeLabKernelServiceContractsCalendarScheduleEntryBaseData: CyberjusticeLabKernelServiceContractsCalendarScheduleEntryBaseData,
        CyberjusticeLabKernelServiceContractsCalendarScheduleEntryCreateData: CyberjusticeLabKernelServiceContractsCalendarScheduleEntryCreateData,
        CyberjusticeLabKernelSharedCalendarModelsCreateCalendarModel: CyberjusticeLabKernelSharedCalendarModelsCreateCalendarModel,
        CyberjusticeLabKernelSharedCalendarModelsCreateEventModel: CyberjusticeLabKernelSharedCalendarModelsCreateEventModel,
        CyberjusticeLabKernelSharedCalendarModelsCreateEventAttemptModel: CyberjusticeLabKernelSharedCalendarModelsCreateEventAttemptModel,
        CyberjusticeLabKernelSharedCalendarModelsCreateEventBehaviourModel: CyberjusticeLabKernelSharedCalendarModelsCreateEventBehaviourModel,
        CyberjusticeLabKernelServiceContractsCalendarBaseCalendarData: CyberjusticeLabKernelServiceContractsCalendarBaseCalendarData,
        CyberjusticeLabKernelServiceContractsCalendarClosedDayData: CyberjusticeLabKernelServiceContractsCalendarClosedDayData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityData,
        CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleData: CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleData,
        CyberjusticeLabKernelServiceContractsCalendarBaseCalendarRoleData: CyberjusticeLabKernelServiceContractsCalendarBaseCalendarRoleData,
        CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleData: CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleData,
        CyberjusticeLabKernelServiceContractsCalendarSchedulePatternData: CyberjusticeLabKernelServiceContractsCalendarSchedulePatternData,
        CyberjusticeLabKernelServiceContractsCalendarScheduleEntryData: CyberjusticeLabKernelServiceContractsCalendarScheduleEntryData,
        CyberjusticeLabKernelSharedCalendarModelsCalendarModel: CyberjusticeLabKernelSharedCalendarModelsCalendarModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Calendar. */
    var Calendar = /** @class */ (function () {
        /**
         * Create a Calendar.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Calendar(client) {
            this.client = client;
        }
        Calendar.prototype.updateBaseCalendarStatus = function (baseCalendarId$$1, status$$1, modifiedTicks$$1, options, callback) {
            return this.client.sendOperationRequest({
                baseCalendarId: baseCalendarId$$1,
                status: status$$1,
                modifiedTicks: modifiedTicks$$1,
                options: options
            }, updateBaseCalendarStatusOperationSpec, callback);
        };
        Calendar.prototype.updateAssignmentCycleStatus = function (cycleId$$1, status$$1, modifiedTicks$$1, options, callback) {
            return this.client.sendOperationRequest({
                cycleId: cycleId$$1,
                status: status$$1,
                modifiedTicks: modifiedTicks$$1,
                options: options
            }, updateAssignmentCycleStatusOperationSpec, callback);
        };
        Calendar.prototype.updatePeriodAvailabilityRoleLinkStatus = function (linkId$$1, status$$1, options, callback) {
            return this.client.sendOperationRequest({
                linkId: linkId$$1,
                status: status$$1,
                options: options
            }, updatePeriodAvailabilityRoleLinkStatusOperationSpec, callback);
        };
        Calendar.prototype.updateBaseCalendar = function (baseCalendarData, options, callback) {
            return this.client.sendOperationRequest({
                baseCalendarData: baseCalendarData,
                options: options
            }, updateBaseCalendarOperationSpec, callback);
        };
        Calendar.prototype.updateBaseCalendarRoomLocationLink = function (locationRoomIds$$1, calendarId, options, callback) {
            return this.client.sendOperationRequest({
                locationRoomIds: locationRoomIds$$1,
                calendarId: calendarId,
                options: options
            }, updateBaseCalendarRoomLocationLinkOperationSpec, callback);
        };
        Calendar.prototype.updatePeriodAvailability = function (period, options, callback) {
            return this.client.sendOperationRequest({
                period: period,
                options: options
            }, updatePeriodAvailabilityOperationSpec, callback);
        };
        Calendar.prototype.updateClosedDay = function (closedDay, options, callback) {
            return this.client.sendOperationRequest({
                closedDay: closedDay,
                options: options
            }, updateClosedDayOperationSpec, callback);
        };
        Calendar.prototype.updateBaseCalendarJudicialEntityLink = function (judicialEntityId, calendarId, options, callback) {
            return this.client.sendOperationRequest({
                judicialEntityId: judicialEntityId,
                calendarId: calendarId,
                options: options
            }, updateBaseCalendarJudicialEntityLinkOperationSpec, callback);
        };
        Calendar.prototype.updateAssignmentCycle = function (cycle, options, callback) {
            return this.client.sendOperationRequest({
                cycle: cycle,
                options: options
            }, updateAssignmentCycleOperationSpec, callback);
        };
        Calendar.prototype.updatePeriodAvailabilityGroup = function (periodAvailabilities, options, callback) {
            return this.client.sendOperationRequest({
                periodAvailabilities: periodAvailabilities,
                options: options
            }, updatePeriodAvailabilityGroupOperationSpec, callback);
        };
        Calendar.prototype.updateSchedulePattern = function (schedulePattern, options, callback) {
            return this.client.sendOperationRequest({
                schedulePattern: schedulePattern,
                options: options
            }, updateSchedulePatternOperationSpec, callback);
        };
        Calendar.prototype.updateScheduleEntry = function (scheduleEntry, options, callback) {
            return this.client.sendOperationRequest({
                scheduleEntry: scheduleEntry,
                options: options
            }, updateScheduleEntryOperationSpec, callback);
        };
        Calendar.prototype.updatePeriodAvailabilityJudicialFileLink = function (fileLink, options, callback) {
            return this.client.sendOperationRequest({
                fileLink: fileLink,
                options: options
            }, updatePeriodAvailabilityJudicialFileLinkOperationSpec, callback);
        };
        Calendar.prototype.updateEvent = function (eventModel, options, callback) {
            return this.client.sendOperationRequest({
                eventModel: eventModel,
                options: options
            }, updateEventOperationSpec, callback);
        };
        Calendar.prototype.updateEventAttributes = function (eventAttributesModel, options, callback) {
            return this.client.sendOperationRequest({
                eventAttributesModel: eventAttributesModel,
                options: options
            }, updateEventAttributesOperationSpec, callback);
        };
        Calendar.prototype.updateEventBehaviours = function (eventBehavioursModel, options, callback) {
            return this.client.sendOperationRequest({
                eventBehavioursModel: eventBehavioursModel,
                options: options
            }, updateEventBehavioursOperationSpec, callback);
        };
        Calendar.prototype.updateEventRank = function (eventRankModel, options, callback) {
            return this.client.sendOperationRequest({
                eventRankModel: eventRankModel,
                options: options
            }, updateEventRankOperationSpec, callback);
        };
        Calendar.prototype.updateEventStartDate = function (eventStartDateModel, options, callback) {
            return this.client.sendOperationRequest({
                eventStartDateModel: eventStartDateModel,
                options: options
            }, updateEventStartDateOperationSpec, callback);
        };
        Calendar.prototype.deleteClosedDay = function (id, options, callback) {
            return this.client.sendOperationRequest({
                id: id,
                options: options
            }, deleteClosedDayOperationSpec, callback);
        };
        Calendar.prototype.deleteClosedWeekday = function (baseCalendarId$$1, weekday$$1, options, callback) {
            return this.client.sendOperationRequest({
                baseCalendarId: baseCalendarId$$1,
                weekday: weekday$$1,
                options: options
            }, deleteClosedWeekdayOperationSpec, callback);
        };
        Calendar.prototype.deletePeriodAvailability = function (id, options, callback) {
            return this.client.sendOperationRequest({
                id: id,
                options: options
            }, deletePeriodAvailabilityOperationSpec, callback);
        };
        Calendar.prototype.deletePeriodAvailabilities = function (periodAvailabilityIds$$1, options, callback) {
            return this.client.sendOperationRequest({
                periodAvailabilityIds: periodAvailabilityIds$$1,
                options: options
            }, deletePeriodAvailabilitiesOperationSpec, callback);
        };
        Calendar.prototype.deletePeriodAvailabilityGroup = function (periodAvailabilityGroupId$$1, options, callback) {
            return this.client.sendOperationRequest({
                periodAvailabilityGroupId: periodAvailabilityGroupId$$1,
                options: options
            }, deletePeriodAvailabilityGroupOperationSpec, callback);
        };
        Calendar.prototype.deletePeriodAvailabilityRoleLink = function (id, options, callback) {
            return this.client.sendOperationRequest({
                id: id,
                options: options
            }, deletePeriodAvailabilityRoleLinkOperationSpec, callback);
        };
        Calendar.prototype.deletePeriodAvailabilityJudicialFileLink = function (periodAvailabilityId$$1, judicialFileId, options, callback) {
            return this.client.sendOperationRequest({
                periodAvailabilityId: periodAvailabilityId$$1,
                judicialFileId: judicialFileId,
                options: options
            }, deletePeriodAvailabilityJudicialFileLinkOperationSpec, callback);
        };
        Calendar.prototype.deleteBaseCalendarLocationRoomLink = function (baseCalendarId$$1, locationRoomId$$1, options, callback) {
            return this.client.sendOperationRequest({
                baseCalendarId: baseCalendarId$$1,
                locationRoomId: locationRoomId$$1,
                options: options
            }, deleteBaseCalendarLocationRoomLinkOperationSpec, callback);
        };
        Calendar.prototype.deleteAssignmentCycle = function (cycleId$$1, options, callback) {
            return this.client.sendOperationRequest({
                cycleId: cycleId$$1,
                options: options
            }, deleteAssignmentCycleOperationSpec, callback);
        };
        Calendar.prototype.deleteSchedulePattern = function (schedulePatternId$$1, options, callback) {
            return this.client.sendOperationRequest({
                schedulePatternId: schedulePatternId$$1,
                options: options
            }, deleteSchedulePatternOperationSpec, callback);
        };
        Calendar.prototype.deleteScheduleEntry = function (scheduleEntryId$$1, options, callback) {
            return this.client.sendOperationRequest({
                scheduleEntryId: scheduleEntryId$$1,
                options: options
            }, deleteScheduleEntryOperationSpec, callback);
        };
        Calendar.prototype.deleteAssignmentCycles = function (cycleIds$$1, options, callback) {
            return this.client.sendOperationRequest({
                cycleIds: cycleIds$$1,
                options: options
            }, deleteAssignmentCyclesOperationSpec, callback);
        };
        Calendar.prototype.deletePeriodAvailabilityRoleLinks = function (periodAvailabilityRoleLinkIds, options, callback) {
            return this.client.sendOperationRequest({
                periodAvailabilityRoleLinkIds: periodAvailabilityRoleLinkIds,
                options: options
            }, deletePeriodAvailabilityRoleLinksOperationSpec, callback);
        };
        Calendar.prototype.deleteClosedDays = function (closedDayIds$$1, options, callback) {
            return this.client.sendOperationRequest({
                closedDayIds: closedDayIds$$1,
                options: options
            }, deleteClosedDaysOperationSpec, callback);
        };
        Calendar.prototype.deleteEvent = function (eventId$$1, fileId, options, callback) {
            return this.client.sendOperationRequest({
                eventId: eventId$$1,
                fileId: fileId,
                options: options
            }, deleteEventOperationSpec, callback);
        };
        Calendar.prototype.deleteAllEvents = function (calendarId, options, callback) {
            return this.client.sendOperationRequest({
                calendarId: calendarId,
                options: options
            }, deleteAllEventsOperationSpec, callback);
        };
        Calendar.prototype.deleteBehaviors = function (eventId$$1, fileId, behaviors, options, callback) {
            return this.client.sendOperationRequest({
                eventId: eventId$$1,
                fileId: fileId,
                behaviors: behaviors,
                options: options
            }, deleteBehaviorsOperationSpec, callback);
        };
        Calendar.prototype.getEvents = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getEventsOperationSpec, callback);
        };
        Calendar.prototype.getFullCalendar = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getFullCalendarOperationSpec, callback);
        };
        Calendar.prototype.createBaseCalendar = function (baseCalendarData, options, callback) {
            return this.client.sendOperationRequest({
                baseCalendarData: baseCalendarData,
                options: options
            }, createBaseCalendarOperationSpec, callback);
        };
        Calendar.prototype.createPeriodAvailability = function (period, options, callback) {
            return this.client.sendOperationRequest({
                period: period,
                options: options
            }, createPeriodAvailabilityOperationSpec, callback);
        };
        Calendar.prototype.createPeriodAvailabilityGroup = function (periodAvailabilities, options, callback) {
            return this.client.sendOperationRequest({
                periodAvailabilities: periodAvailabilities,
                options: options
            }, createPeriodAvailabilityGroupOperationSpec, callback);
        };
        Calendar.prototype.baseCalendarAddClosedWeekday = function (day, options, callback) {
            return this.client.sendOperationRequest({
                day: day,
                options: options
            }, baseCalendarAddClosedWeekdayOperationSpec, callback);
        };
        Calendar.prototype.createClosedDay = function (day, options, callback) {
            return this.client.sendOperationRequest({
                day: day,
                options: options
            }, createClosedDayOperationSpec, callback);
        };
        Calendar.prototype.createAssignmentCycle = function (cycleData, options, callback) {
            return this.client.sendOperationRequest({
                cycleData: cycleData,
                options: options
            }, createAssignmentCycleOperationSpec, callback);
        };
        Calendar.prototype.createPeriodAvailabilityRoleLink = function (roleData, options, callback) {
            return this.client.sendOperationRequest({
                roleData: roleData,
                options: options
            }, createPeriodAvailabilityRoleLinkOperationSpec, callback);
        };
        Calendar.prototype.createPeriodAvailabilityJudicialFileLink = function (fileLink, options, callback) {
            return this.client.sendOperationRequest({
                fileLink: fileLink,
                options: options
            }, createPeriodAvailabilityJudicialFileLinkOperationSpec, callback);
        };
        Calendar.prototype.createPeriodAvailabilitiesFromPattern = function (request, options, callback) {
            return this.client.sendOperationRequest({
                request: request,
                options: options
            }, createPeriodAvailabilitiesFromPatternOperationSpec, callback);
        };
        Calendar.prototype.createSchedulePattern = function (schedulePattern, options, callback) {
            return this.client.sendOperationRequest({
                schedulePattern: schedulePattern,
                options: options
            }, createSchedulePatternOperationSpec, callback);
        };
        Calendar.prototype.createScheduleEntry = function (scheduleEntry, options, callback) {
            return this.client.sendOperationRequest({
                scheduleEntry: scheduleEntry,
                options: options
            }, createScheduleEntryOperationSpec, callback);
        };
        Calendar.prototype.createCalendar = function (calendarModel, options, callback) {
            return this.client.sendOperationRequest({
                calendarModel: calendarModel,
                options: options
            }, createCalendarOperationSpec, callback);
        };
        Calendar.prototype.createEvent = function (eventModel, options, callback) {
            return this.client.sendOperationRequest({
                eventModel: eventModel,
                options: options
            }, createEventOperationSpec, callback);
        };
        Calendar.prototype.getBaseCalendars = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getBaseCalendarsOperationSpec, callback);
        };
        Calendar.prototype.getPeriodAvailabilities = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getPeriodAvailabilitiesOperationSpec, callback);
        };
        Calendar.prototype.getPeriodAvailabilitiesOfUser = function (realm$$1, userId$$1, options, callback) {
            return this.client.sendOperationRequest({
                realm: realm$$1,
                userId: userId$$1,
                options: options
            }, getPeriodAvailabilitiesOfUserOperationSpec, callback);
        };
        Calendar.prototype.getClosedDays = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getClosedDaysOperationSpec, callback);
        };
        Calendar.prototype.getAssignmentCycles = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getAssignmentCyclesOperationSpec, callback);
        };
        Calendar.prototype.getSchedulePatterns = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getSchedulePatternsOperationSpec, callback);
        };
        Calendar.prototype.getScheduleEntry = function (entryId$$1, options, callback) {
            return this.client.sendOperationRequest({
                entryId: entryId$$1,
                options: options
            }, getScheduleEntryOperationSpec, callback);
        };
        Calendar.prototype.getFileCalendars = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getFileCalendarsOperationSpec, callback);
        };
        Calendar.prototype.getFilesWithCurrentEvents = function (fileIds, fileStatus$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileIds: fileIds,
                fileStatus: fileStatus$$1,
                options: options
            }, getFilesWithCurrentEventsOperationSpec, callback);
        };
        return Calendar;
    }());
    // Operation Specifications
    var serializer$2 = new msRest.Serializer(Mappers$2);
    var updateBaseCalendarStatusOperationSpec = {
        httpMethod: "PATCH",
        path: "Calendar/PATCH/UpdateBaseCalendarStatus",
        queryParameters: [
            baseCalendarId,
            status,
            modifiedTicks
        ],
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateAssignmentCycleStatusOperationSpec = {
        httpMethod: "PATCH",
        path: "Calendar/PATCH/UpdateAssignmentCycleStatus",
        queryParameters: [
            cycleId,
            status,
            modifiedTicks
        ],
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updatePeriodAvailabilityRoleLinkStatusOperationSpec = {
        httpMethod: "PATCH",
        path: "Calendar/PATCH/UpdatePeriodAvailabilityRoleLinkStatus",
        queryParameters: [
            linkId,
            status
        ],
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateBaseCalendarOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateBaseCalendar",
        requestBody: {
            parameterPath: "baseCalendarData",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarBaseCalendarUpdateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateBaseCalendarRoomLocationLinkOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateBaseCalendarRoomLocationLink",
        queryParameters: [
            calendarId0
        ],
        requestBody: {
            parameterPath: "locationRoomIds",
            mapper: {
                required: true,
                serializedName: "locationRoomIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        },
        responses: {
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updatePeriodAvailabilityOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdatePeriodAvailability",
        requestBody: {
            parameterPath: "period",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityUpdateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateClosedDayOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateClosedDay",
        requestBody: {
            parameterPath: "closedDay",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarClosedDayUpdateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateBaseCalendarJudicialEntityLinkOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateBaseCalendarJudicialEntityLink",
        queryParameters: [
            judicialEntityId1,
            calendarId0
        ],
        responses: {
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateAssignmentCycleOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateAssignmentCycle",
        requestBody: {
            parameterPath: "cycle",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleUpdateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updatePeriodAvailabilityGroupOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdatePeriodAvailabilityGroup",
        requestBody: {
            parameterPath: "periodAvailabilities",
            mapper: {
                required: true,
                serializedName: "periodAvailabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityUpdateData"
                        }
                    }
                }
            }
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateSchedulePatternOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateSchedulePattern",
        requestBody: {
            parameterPath: "schedulePattern",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarSchedulePatternUpdateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateScheduleEntryOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateScheduleEntry",
        requestBody: {
            parameterPath: "scheduleEntry",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarScheduleEntryUpdateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updatePeriodAvailabilityJudicialFileLinkOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdatePeriodAvailabilityJudicialFileLink",
        requestBody: {
            parameterPath: "fileLink",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileData, { required: true })
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateEventOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateEvent",
        requestBody: {
            parameterPath: "eventModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedCalendarModelsUpdateEventModel, { required: true })
        },
        responses: {
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateEventAttributesOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateEventAttributes",
        requestBody: {
            parameterPath: "eventAttributesModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedCalendarModelsUpdateEventAttributesModel, { required: true })
        },
        responses: {
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateEventBehavioursOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateEventBehaviours",
        requestBody: {
            parameterPath: "eventBehavioursModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedCalendarModelsUpdateEventBehavioursModel, { required: true })
        },
        responses: {
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateEventRankOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateEventRank",
        requestBody: {
            parameterPath: "eventRankModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedCalendarModelsUpdateEventRankModel, { required: true })
        },
        responses: {
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var updateEventStartDateOperationSpec = {
        httpMethod: "PUT",
        path: "Calendar/PUT/UpdateEventStartDate",
        requestBody: {
            parameterPath: "eventStartDateModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedCalendarModelsUpdateEventStartDateModel, { required: true })
        },
        responses: {
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteClosedDayOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/ClosedDay",
        queryParameters: [
            id0
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteClosedWeekdayOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/ClosedWeekday",
        queryParameters: [
            baseCalendarId,
            weekday
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deletePeriodAvailabilityOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/PeriodAvailability",
        queryParameters: [
            id0
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deletePeriodAvailabilitiesOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/PeriodAvailabilities",
        requestBody: {
            parameterPath: "periodAvailabilityIds",
            mapper: {
                required: true,
                serializedName: "periodAvailabilityIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Uuid"
                        }
                    }
                }
            }
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deletePeriodAvailabilityGroupOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/PeriodAvailabilityGroup",
        queryParameters: [
            periodAvailabilityGroupId
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deletePeriodAvailabilityRoleLinkOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/PeriodAvailabilityRoleLink",
        queryParameters: [
            id0
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deletePeriodAvailabilityJudicialFileLinkOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/PeriodAvailabilityJudicialFileLink",
        queryParameters: [
            periodAvailabilityId,
            judicialFileId0
        ],
        responses: {
            204: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteBaseCalendarLocationRoomLinkOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/BaseCalendarLocationRoomLink",
        queryParameters: [
            baseCalendarId,
            locationRoomId
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteAssignmentCycleOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/AssignmentCycle",
        queryParameters: [
            cycleId
        ],
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteSchedulePatternOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/SchedulePattern",
        queryParameters: [
            schedulePatternId
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteScheduleEntryOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/ScheduleEntry",
        queryParameters: [
            scheduleEntryId
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteAssignmentCyclesOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/AssignmentCycles",
        requestBody: {
            parameterPath: "cycleIds",
            mapper: {
                required: true,
                serializedName: "cycleIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Uuid"
                        }
                    }
                }
            }
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deletePeriodAvailabilityRoleLinksOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/PeriodAvailabilityRoleLinks",
        requestBody: {
            parameterPath: "periodAvailabilityRoleLinkIds",
            mapper: {
                required: true,
                serializedName: "periodAvailabilityRoleLinkIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Uuid"
                        }
                    }
                }
            }
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteClosedDaysOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/ClosedDays",
        requestBody: {
            parameterPath: "closedDayIds",
            mapper: {
                required: true,
                serializedName: "closedDayIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Uuid"
                        }
                    }
                }
            }
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteEventOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/Event",
        queryParameters: [
            eventId,
            fileId0
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteAllEventsOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/AllEvents",
        queryParameters: [
            calendarId1
        ],
        responses: {
            204: {},
            default: {}
        },
        serializer: serializer$2
    };
    var deleteBehaviorsOperationSpec = {
        httpMethod: "DELETE",
        path: "Calendar/DELETE/Behaviors",
        queryParameters: [
            eventId,
            fileId0
        ],
        requestBody: {
            parameterPath: "behaviors",
            mapper: {
                required: true,
                serializedName: "behaviors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Number"
                        }
                    }
                }
            }
        },
        responses: {
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var getEventsOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/Events",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedCalendarModelsEventApiResquestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedCalendarModelsEventApiResponseData
            },
            default: {}
        },
        serializer: serializer$2
    };
    var getFullCalendarOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/FullCalendar",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedCalendarModelsFullCalendarApiResponseData
            },
            default: {}
        },
        serializer: serializer$2
    };
    var createBaseCalendarOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreateBaseCalendar",
        requestBody: {
            parameterPath: "baseCalendarData",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarBaseCalendarCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createPeriodAvailabilityOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreatePeriodAvailability",
        requestBody: {
            parameterPath: "period",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createPeriodAvailabilityGroupOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreatePeriodAvailabilityGroup",
        requestBody: {
            parameterPath: "periodAvailabilities",
            mapper: {
                required: true,
                serializedName: "periodAvailabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityCreateData"
                        }
                    }
                }
            }
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var baseCalendarAddClosedWeekdayOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/BaseCalendarAddClosedWeekday",
        requestBody: {
            parameterPath: "day",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarClosedWeekdayData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createClosedDayOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreateClosedDay",
        requestBody: {
            parameterPath: "day",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarClosedDayCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createAssignmentCycleOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreateAssignmentCycle",
        requestBody: {
            parameterPath: "cycleData",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createPeriodAvailabilityRoleLinkOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreatePeriodAvailabilityRoleLink",
        requestBody: {
            parameterPath: "roleData",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityRoleCreateData, { required: true })
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createPeriodAvailabilityJudicialFileLinkOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreatePeriodAvailabilityJudicialFileLink",
        requestBody: {
            parameterPath: "fileLink",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityJudicialFileData, { required: true })
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createPeriodAvailabilitiesFromPatternOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreatePeriodAvailabilitiesFromPattern",
        requestBody: {
            parameterPath: "request",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCopyRequestData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createSchedulePatternOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreateSchedulePattern",
        requestBody: {
            parameterPath: "schedulePattern",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarSchedulePatternCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createScheduleEntryOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreateScheduleEntry",
        requestBody: {
            parameterPath: "scheduleEntry",
            mapper: __assign({}, CyberjusticeLabKernelServiceContractsCalendarScheduleEntryCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createCalendarOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreateCalendar",
        requestBody: {
            parameterPath: "calendarModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedCalendarModelsCreateCalendarModel, { required: true })
        },
        responses: {
            403: {},
            default: {}
        },
        serializer: serializer$2
    };
    var createEventOperationSpec = {
        httpMethod: "POST",
        path: "Calendar/POST/CreateEvent",
        requestBody: {
            parameterPath: "eventModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedCalendarModelsCreateEventModel, { required: true })
        },
        responses: {
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$2
    };
    var getBaseCalendarsOperationSpec = {
        httpMethod: "GET",
        path: "Calendar/GET/BaseCalendars",
        queryParameters: [
            baseCalendarIds,
            judicialEntityIds,
            roomIds,
            periodAvailabilityIds,
            closedDayIds,
            userCodes,
            userRoles,
            statuses,
            startDate,
            endDate,
            calendarTypes
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarBaseCalendarData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$2
    };
    var getPeriodAvailabilitiesOperationSpec = {
        httpMethod: "GET",
        path: "Calendar/GET/PeriodAvailabilities",
        queryParameters: [
            periodAvailabilityIds,
            baseCalendarIds,
            partyEntityIds,
            fileIds0,
            startDate,
            endDate
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$2
    };
    var getPeriodAvailabilitiesOfUserOperationSpec = {
        httpMethod: "GET",
        path: "Calendar/GET/PeriodAvailabilitiesOfUser",
        queryParameters: [
            realm,
            userId
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarPeriodAvailabilityData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$2
    };
    var getClosedDaysOperationSpec = {
        httpMethod: "GET",
        path: "Calendar/GET/ClosedDays",
        queryParameters: [
            closedDayIds,
            startDate,
            endDate
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarClosedDayData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$2
    };
    var getAssignmentCyclesOperationSpec = {
        httpMethod: "GET",
        path: "Calendar/GET/AssignmentCycles",
        queryParameters: [
            cycleIds,
            resourceTypes,
            statuses,
            startDate,
            endDate
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarAssignmentCycleData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$2
    };
    var getSchedulePatternsOperationSpec = {
        httpMethod: "GET",
        path: "Calendar/GET/SchedulePatterns",
        queryParameters: [
            schedulePatternIds,
            roomIds
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsCalendarSchedulePatternData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$2
    };
    var getScheduleEntryOperationSpec = {
        httpMethod: "GET",
        path: "Calendar/GET/ScheduleEntry",
        queryParameters: [
            entryId
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsCalendarSchedulePatternData
            },
            default: {}
        },
        serializer: serializer$2
    };
    var getFileCalendarsOperationSpec = {
        httpMethod: "GET",
        path: "Calendar/GET/FileCalendars",
        queryParameters: [
            fileId0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedCalendarModelsCalendarModel"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$2
    };
    var getFilesWithCurrentEventsOperationSpec = {
        httpMethod: "GET",
        path: "Calendar/GET/FilesWithCurrentEvents",
        queryParameters: [
            fileIds1,
            fileStatus
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$2
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$3 = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsDocumentDocumentData: CyberjusticeLabKernelServiceContractsDocumentDocumentData,
        CyberjusticeLabKernelSharedDocumentModelsDocumentApiRequestData: CyberjusticeLabKernelSharedDocumentModelsDocumentApiRequestData,
        CyberjusticeLabKernelSharedDocumentModelsAttributesFilters: CyberjusticeLabKernelSharedDocumentModelsAttributesFilters,
        SystemCollectionsGenericKeyValuePairSystemStringSystemString: SystemCollectionsGenericKeyValuePairSystemStringSystemString,
        CyberjusticeLabKernelSharedDocumentModelsActionsFilters: CyberjusticeLabKernelSharedDocumentModelsActionsFilters,
        CyberjusticeLabKernelSharedDocumentModelsDocumentApiResponseData: CyberjusticeLabKernelSharedDocumentModelsDocumentApiResponseData,
        CyberjusticeLabKernelSharedDocumentModelsDocumentModel: CyberjusticeLabKernelSharedDocumentModelsDocumentModel,
        CyberjusticeLabKernelSharedDocumentModelsAttributeModel: CyberjusticeLabKernelSharedDocumentModelsAttributeModel,
        CyberjusticeLabKernelSharedDocumentModelsDocumentPartyActionModel: CyberjusticeLabKernelSharedDocumentModelsDocumentPartyActionModel,
        CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel,
        CyberjusticeLabKernelSharedDocumentModelsCreateDocumentPartyActionModel: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentPartyActionModel,
        CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsModel: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsModel,
        CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsResponseModel: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsResponseModel,
        CyberjusticeLabKernelSharedDocumentModelsDocumentResponseModel: CyberjusticeLabKernelSharedDocumentModelsDocumentResponseModel,
        CyberjusticeLabKernelSharedDocumentModelsDocumentErrorModel: CyberjusticeLabKernelSharedDocumentModelsDocumentErrorModel,
        CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentContentModel: CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentContentModel,
        CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentMetadatasModel: CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentMetadatasModel,
        CyberjusticeLabKernelSharedDocumentModelsEditDocumentAttributeModel: CyberjusticeLabKernelSharedDocumentModelsEditDocumentAttributeModel,
        CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentPartyActionsModel: CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentPartyActionsModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Document. */
    var Document = /** @class */ (function () {
        /**
         * Create a Document.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Document(client) {
            this.client = client;
        }
        Document.prototype.deleteDocument = function (documentId$$1, fileId, currentVersion$$1, options, callback) {
            return this.client.sendOperationRequest({
                documentId: documentId$$1,
                fileId: fileId,
                currentVersion: currentVersion$$1,
                options: options
            }, deleteDocumentOperationSpec, callback);
        };
        Document.prototype.deleteDocumentAttributes = function (documentId$$1, options, callback) {
            return this.client.sendOperationRequest({
                documentId: documentId$$1,
                options: options
            }, deleteDocumentAttributesOperationSpec, callback);
        };
        Document.prototype.getDocumentsMetadata = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getDocumentsMetadataOperationSpec, callback);
        };
        Document.prototype.getDocumentMetadata = function (documentId$$1, options, callback) {
            return this.client.sendOperationRequest({
                documentId: documentId$$1,
                options: options
            }, getDocumentMetadataOperationSpec, callback);
        };
        Document.prototype.getDocumentContentById = function (fileId, documentId$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                documentId: documentId$$1,
                options: options
            }, getDocumentContentByIdOperationSpec, callback);
        };
        Document.prototype.getDocuments = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getDocumentsOperationSpec, callback);
        };
        Document.prototype.createDocument = function (documentModel, options, callback) {
            return this.client.sendOperationRequest({
                documentModel: documentModel,
                options: options
            }, createDocumentOperationSpec, callback);
        };
        Document.prototype.createDocuments = function (documentModels, options, callback) {
            return this.client.sendOperationRequest({
                documentModels: documentModels,
                options: options
            }, createDocumentsOperationSpec, callback);
        };
        Document.prototype.updateDocumentContent = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updateDocumentContentOperationSpec, callback);
        };
        Document.prototype.updateDocumentMetadata = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updateDocumentMetadataOperationSpec, callback);
        };
        Document.prototype.updateDocumentAttributes = function (attributes, options, callback) {
            return this.client.sendOperationRequest({
                attributes: attributes,
                options: options
            }, updateDocumentAttributesOperationSpec, callback);
        };
        Document.prototype.updateDocumentPartyActions = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updateDocumentPartyActionsOperationSpec, callback);
        };
        return Document;
    }());
    // Operation Specifications
    var serializer$3 = new msRest.Serializer(Mappers$3);
    var deleteDocumentOperationSpec = {
        httpMethod: "DELETE",
        path: "Document/DELETE/DeleteDocument",
        queryParameters: [
            documentId,
            fileId0,
            currentVersion
        ],
        responses: {
            200: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$3
    };
    var deleteDocumentAttributesOperationSpec = {
        httpMethod: "DELETE",
        path: "Document/DELETE/DeleteDocumentAttributes",
        queryParameters: [
            documentId
        ],
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$3
    };
    var getDocumentsMetadataOperationSpec = {
        httpMethod: "GET",
        path: "Document/GET/DocumentsMetadata",
        queryParameters: [
            fileId0,
            titles
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsDocumentDocumentData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$3
    };
    var getDocumentMetadataOperationSpec = {
        httpMethod: "GET",
        path: "Document/GET/DocumentMetadata",
        queryParameters: [
            documentId
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsDocumentDocumentData
            },
            default: {}
        },
        serializer: serializer$3
    };
    var getDocumentContentByIdOperationSpec = {
        httpMethod: "GET",
        path: "Document/GET/DocumentContent",
        queryParameters: [
            fileId0,
            documentId
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "String"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$3
    };
    var getDocumentsOperationSpec = {
        httpMethod: "POST",
        path: "Document/POST/Documents",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedDocumentModelsDocumentApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedDocumentModelsDocumentApiResponseData
            },
            default: {}
        },
        serializer: serializer$3
    };
    var createDocumentOperationSpec = {
        httpMethod: "POST",
        path: "Document/POST/CreateDocument",
        requestBody: {
            parameterPath: "documentModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$3
    };
    var createDocumentsOperationSpec = {
        httpMethod: "POST",
        path: "Document/POST/CreateDocuments",
        requestBody: {
            parameterPath: "documentModels",
            mapper: __assign({}, CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentsResponseModel
            },
            400: {},
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$3
    };
    var updateDocumentContentOperationSpec = {
        httpMethod: "PUT",
        path: "Document/PUT/UpdateDocumentContent",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentContentModel, { required: true })
        },
        responses: {
            200: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$3
    };
    var updateDocumentMetadataOperationSpec = {
        httpMethod: "PUT",
        path: "Document/PUT/UpdateDocumentMetadata",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentMetadatasModel, { required: true })
        },
        responses: {
            200: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$3
    };
    var updateDocumentAttributesOperationSpec = {
        httpMethod: "PUT",
        path: "Document/PUT/UpdateDocumentAttributes",
        requestBody: {
            parameterPath: "attributes",
            mapper: __assign({}, CyberjusticeLabKernelSharedDocumentModelsEditDocumentAttributeModel, { required: true })
        },
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$3
    };
    var updateDocumentPartyActionsOperationSpec = {
        httpMethod: "PUT",
        path: "Document/PUT/UpdateDocumentPartyActions",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedDocumentModelsUpdateDocumentPartyActionsModel, { required: true })
        },
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$3
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$4 = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsExchangeForumData: CyberjusticeLabKernelServiceContractsExchangeForumData,
        CyberjusticeLabKernelServiceContractsExchangeForumPartyLinkData: CyberjusticeLabKernelServiceContractsExchangeForumPartyLinkData,
        CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData: CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData,
        CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData: CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData,
        CyberjusticeLabKernelSharedExchangeModelsForumMessageModel: CyberjusticeLabKernelSharedExchangeModelsForumMessageModel,
        CyberjusticeLabKernelSharedExchangeModelsForumMessagePartyLinkModel: CyberjusticeLabKernelSharedExchangeModelsForumMessagePartyLinkModel,
        CyberjusticeLabKernelSharedExchangeModelsAttributeModel: CyberjusticeLabKernelSharedExchangeModelsAttributeModel,
        CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel: CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel,
        CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel: CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel,
        CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel: CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Exchange. */
    var Exchange = /** @class */ (function () {
        /**
         * Create a Exchange.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Exchange(client) {
            this.client = client;
        }
        Exchange.prototype.getForumMessages = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getForumMessagesOperationSpec, callback);
        };
        Exchange.prototype.getForumMessages1 = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getForumMessages1OperationSpec, callback);
        };
        Exchange.prototype.getForumMessage = function (fileId, forumId$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                forumId: forumId$$1,
                options: options
            }, getForumMessageOperationSpec, callback);
        };
        Exchange.prototype.addForumMessage = function (forumMessageModel, options, callback) {
            return this.client.sendOperationRequest({
                forumMessageModel: forumMessageModel,
                options: options
            }, addForumMessageOperationSpec, callback);
        };
        Exchange.prototype.addPartyToForumMessages = function (partyForumMessageModel, options, callback) {
            return this.client.sendOperationRequest({
                partyForumMessageModel: partyForumMessageModel,
                options: options
            }, addPartyToForumMessagesOperationSpec, callback);
        };
        Exchange.prototype.addForumMessageAttributes = function (forumMessageAttributesModel, options, callback) {
            return this.client.sendOperationRequest({
                forumMessageAttributesModel: forumMessageAttributesModel,
                options: options
            }, addForumMessageAttributesOperationSpec, callback);
        };
        return Exchange;
    }());
    // Operation Specifications
    var serializer$4 = new msRest.Serializer(Mappers$4);
    var getForumMessagesOperationSpec = {
        httpMethod: "GET",
        path: "Exchange/GET/ForumMessages",
        queryParameters: [
            fileId0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsExchangeForumData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$4
    };
    var getForumMessages1OperationSpec = {
        httpMethod: "POST",
        path: "Exchange/POST/ForumMessages",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData
            },
            default: {}
        },
        serializer: serializer$4
    };
    var getForumMessageOperationSpec = {
        httpMethod: "GET",
        path: "Exchange/GET/ForumMessage",
        queryParameters: [
            fileId0,
            forumId
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsExchangeForumData
            },
            default: {}
        },
        serializer: serializer$4
    };
    var addForumMessageOperationSpec = {
        httpMethod: "POST",
        path: "Exchange/POST/AddForumMessage",
        requestBody: {
            parameterPath: "forumMessageModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$4
    };
    var addPartyToForumMessagesOperationSpec = {
        httpMethod: "POST",
        path: "Exchange/POST/AddPartyToForumMessages",
        requestBody: {
            parameterPath: "partyForumMessageModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel, { required: true })
        },
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$4
    };
    var addForumMessageAttributesOperationSpec = {
        httpMethod: "POST",
        path: "Exchange/POST/AddForumMessageAttributes",
        requestBody: {
            parameterPath: "forumMessageAttributesModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel, { required: true })
        },
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$4
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$5 = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsFormFormQuestionData: CyberjusticeLabKernelServiceContractsFormFormQuestionData,
        CyberjusticeLabKernelServiceContractsFormFormSectionData: CyberjusticeLabKernelServiceContractsFormFormSectionData,
        CyberjusticeLabKernelServiceContractsFormFormSectionOptionData: CyberjusticeLabKernelServiceContractsFormFormSectionOptionData,
        CyberjusticeLabKernelServiceContractsFormResourceOptionData: CyberjusticeLabKernelServiceContractsFormResourceOptionData,
        CyberjusticeLabKernelServiceContractsFormResourceData: CyberjusticeLabKernelServiceContractsFormResourceData,
        CyberjusticeLabKernelServiceContractsFormFormData: CyberjusticeLabKernelServiceContractsFormFormData,
        CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionData: CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionData,
        CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionOptionData: CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionOptionData,
        CyberjusticeLabKernelServiceContractsFormFormPartyProposalData: CyberjusticeLabKernelServiceContractsFormFormPartyProposalData,
        CyberjusticeLabKernelServiceContractsFormApprovalPartyData: CyberjusticeLabKernelServiceContractsFormApprovalPartyData,
        CyberjusticeLabKernelServiceContractsFormFormProposalPartyOptionData: CyberjusticeLabKernelServiceContractsFormFormProposalPartyOptionData,
        CyberjusticeLabKernelServiceContractsFormPartyQuestionProposalCountData: CyberjusticeLabKernelServiceContractsFormPartyQuestionProposalCountData,
        CyberjusticeLabKernelSharedFormModelsQuestionFormApiRequestData: CyberjusticeLabKernelSharedFormModelsQuestionFormApiRequestData,
        CyberjusticeLabKernelSharedFormModelsQuestionFormApiResponseData: CyberjusticeLabKernelSharedFormModelsQuestionFormApiResponseData,
        CyberjusticeLabKernelSharedFormModelsQuestionFormModel: CyberjusticeLabKernelSharedFormModelsQuestionFormModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Form. */
    var Form = /** @class */ (function () {
        /**
         * Create a Form.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Form(client) {
            this.client = client;
        }
        Form.prototype.getFormQuestionProposal = function (formId$$1, options, callback) {
            return this.client.sendOperationRequest({
                formId: formId$$1,
                options: options
            }, getFormQuestionProposalOperationSpec, callback);
        };
        Form.prototype.getFormQuestionProposalByCode = function (formCode$$1, entityId$$1, options, callback) {
            return this.client.sendOperationRequest({
                formCode: formCode$$1,
                entityId: entityId$$1,
                options: options
            }, getFormQuestionProposalByCodeOperationSpec, callback);
        };
        Form.prototype.getFormQuestionDescription = function (formId$$1, options, callback) {
            return this.client.sendOperationRequest({
                formId: formId$$1,
                options: options
            }, getFormQuestionDescriptionOperationSpec, callback);
        };
        Form.prototype.getFormQuestionDescriptionByCode = function (formCode$$1, entityId$$1, options, callback) {
            return this.client.sendOperationRequest({
                formCode: formCode$$1,
                entityId: entityId$$1,
                options: options
            }, getFormQuestionDescriptionByCodeOperationSpec, callback);
        };
        Form.prototype.getDraftQuestionForm = function (formId$$1, options, callback) {
            return this.client.sendOperationRequest({
                formId: formId$$1,
                options: options
            }, getDraftQuestionFormOperationSpec, callback);
        };
        Form.prototype.getDraftQuestionDescriptionForm = function (formId$$1, options, callback) {
            return this.client.sendOperationRequest({
                formId: formId$$1,
                options: options
            }, getDraftQuestionDescriptionFormOperationSpec, callback);
        };
        Form.prototype.getDraftQuestionProposalForm = function (formId$$1, options, callback) {
            return this.client.sendOperationRequest({
                formId: formId$$1,
                options: options
            }, getDraftQuestionProposalFormOperationSpec, callback);
        };
        Form.prototype.getPartyQuestionDescription = function (fileId, partyId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                partyId: partyId,
                options: options
            }, getPartyQuestionDescriptionOperationSpec, callback);
        };
        Form.prototype.getPartyQuestionDescriptions = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getPartyQuestionDescriptionsOperationSpec, callback);
        };
        Form.prototype.getPartyQuestionProposal = function (fileId, partyId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                partyId: partyId,
                options: options
            }, getPartyQuestionProposalOperationSpec, callback);
        };
        Form.prototype.getPartyQuestionProposals = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getPartyQuestionProposalsOperationSpec, callback);
        };
        Form.prototype.getPartyQuestionProposalCount = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getPartyQuestionProposalCountOperationSpec, callback);
        };
        Form.prototype.getPartyArchiveQuestionProposals = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getPartyArchiveQuestionProposalsOperationSpec, callback);
        };
        Form.prototype.getDraftQuestionForms = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getDraftQuestionFormsOperationSpec, callback);
        };
        return Form;
    }());
    // Operation Specifications
    var serializer$5 = new msRest.Serializer(Mappers$5);
    var getFormQuestionProposalOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/FormQuestionProposals",
        queryParameters: [
            formId
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getFormQuestionProposalByCodeOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/FormQuestionProposalsByCode",
        queryParameters: [
            formCode,
            entityId
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getFormQuestionDescriptionOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/FormQuestionDescriptions",
        queryParameters: [
            formId
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getFormQuestionDescriptionByCodeOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/FormQuestionDescriptionsByCode",
        queryParameters: [
            formCode,
            entityId
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getDraftQuestionFormOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/DraftQuestionForms",
        queryParameters: [
            formId
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getDraftQuestionDescriptionFormOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/DraftQuestionDescriptionForm",
        queryParameters: [
            formId
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getDraftQuestionProposalFormOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/DraftQuestionProposalForm",
        queryParameters: [
            formId
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getPartyQuestionDescriptionOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/PartyQuestionDescription",
        queryParameters: [
            fileId1,
            partyId0
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionData
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getPartyQuestionDescriptionsOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/PartyQuestionDescriptions",
        queryParameters: [
            fileId1
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getPartyQuestionProposalOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/PartyQuestionProposal",
        queryParameters: [
            fileId1,
            partyId0
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsFormFormPartyProposalData
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getPartyQuestionProposalsOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/PartyQuestionProposals",
        queryParameters: [
            fileId1
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormPartyProposalData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getPartyQuestionProposalCountOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/PartyQuestionProposalCounts",
        queryParameters: [
            fileId1
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormPartyQuestionProposalCountData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getPartyArchiveQuestionProposalsOperationSpec = {
        httpMethod: "GET",
        path: "Form/GET/PartyArchiveQuestionProposals",
        queryParameters: [
            fileId1
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsFormFormPartyProposalData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$5
    };
    var getDraftQuestionFormsOperationSpec = {
        httpMethod: "POST",
        path: "Form/POST/DraftQuestionForms",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedFormModelsQuestionFormApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedFormModelsQuestionFormApiResponseData
            },
            default: {}
        },
        serializer: serializer$5
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$6 = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsHearingMenuData: CyberjusticeLabKernelServiceContractsHearingMenuData
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Hearing. */
    var Hearing = /** @class */ (function () {
        /**
         * Create a Hearing.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Hearing(client) {
            this.client = client;
        }
        Hearing.prototype.getMenuData = function (hearingId$$1, menuId$$1, options, callback) {
            return this.client.sendOperationRequest({
                hearingId: hearingId$$1,
                menuId: menuId$$1,
                options: options
            }, getMenuDataOperationSpec, callback);
        };
        Hearing.prototype.getAllJudgesMenuData = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getAllJudgesMenuDataOperationSpec, callback);
        };
        return Hearing;
    }());
    // Operation Specifications
    var serializer$6 = new msRest.Serializer(Mappers$6);
    var getMenuDataOperationSpec = {
        httpMethod: "GET",
        path: "Hearing/GET/MenuData",
        queryParameters: [
            hearingId,
            menuId
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsHearingMenuData
            },
            default: {}
        },
        serializer: serializer$6
    };
    var getAllJudgesMenuDataOperationSpec = {
        httpMethod: "GET",
        path: "Hearing/GET/AllJudgesMenuData",
        queryParameters: [
            fileId0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsHearingMenuData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$6
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$7 = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsJournalJournalData: CyberjusticeLabKernelServiceContractsJournalJournalData,
        CyberjusticeLabKernelSharedJournalModelsJournalModel: CyberjusticeLabKernelSharedJournalModelsJournalModel,
        CyberjusticeLabKernelSharedJournalModelsJournalApiResquestData: CyberjusticeLabKernelSharedJournalModelsJournalApiResquestData,
        CyberjusticeLabKernelSharedJournalModelsJournalApiResponseData: CyberjusticeLabKernelSharedJournalModelsJournalApiResponseData,
        CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResquestData: CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResquestData,
        CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResponseData: CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResponseData,
        CyberjusticeLabKernelSharedJournalModelsFileLatestJournalModel: CyberjusticeLabKernelSharedJournalModelsFileLatestJournalModel,
        CyberjusticeLabKernelSharedJournalModelsCreateJournalModel: CyberjusticeLabKernelSharedJournalModelsCreateJournalModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Journal. */
    var Journal = /** @class */ (function () {
        /**
         * Create a Journal.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Journal(client) {
            this.client = client;
        }
        Journal.prototype.getJournalEntryById = function (fileId, journalId$$1, lang$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                journalId: journalId$$1,
                lang: lang$$1,
                options: options
            }, getJournalEntryByIdOperationSpec, callback);
        };
        Journal.prototype.getLatestJournalsByCodes = function (fileId, journalCodes$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                journalCodes: journalCodes$$1,
                options: options
            }, getLatestJournalsByCodesOperationSpec, callback);
        };
        Journal.prototype.getFileHistory = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getFileHistoryOperationSpec, callback);
        };
        Journal.prototype.getFileLatestJournals = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getFileLatestJournalsOperationSpec, callback);
        };
        Journal.prototype.addJournalEntry = function (journalEntry, options, callback) {
            return this.client.sendOperationRequest({
                journalEntry: journalEntry,
                options: options
            }, addJournalEntryOperationSpec, callback);
        };
        return Journal;
    }());
    // Operation Specifications
    var serializer$7 = new msRest.Serializer(Mappers$7);
    var getJournalEntryByIdOperationSpec = {
        httpMethod: "GET",
        path: "Journal/GET/JournalEntryById",
        queryParameters: [
            fileId0,
            journalId,
            lang
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJournalJournalData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$7
    };
    var getLatestJournalsByCodesOperationSpec = {
        httpMethod: "GET",
        path: "Journal/GET/LatestJournalsByCodes",
        queryParameters: [
            fileId0,
            journalCodes
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJournalModelsJournalModel"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$7
    };
    var getFileHistoryOperationSpec = {
        httpMethod: "POST",
        path: "Journal/POST/FileHistory",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJournalModelsJournalApiResquestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJournalModelsJournalApiResponseData
            },
            default: {}
        },
        serializer: serializer$7
    };
    var getFileLatestJournalsOperationSpec = {
        httpMethod: "POST",
        path: "Journal/POST/FileLatestJournals",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResquestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResponseData
            },
            default: {}
        },
        serializer: serializer$7
    };
    var addJournalEntryOperationSpec = {
        httpMethod: "POST",
        path: "Journal/POST/AddJournalEntry",
        requestBody: {
            parameterPath: "journalEntry",
            mapper: __assign({}, CyberjusticeLabKernelSharedJournalModelsCreateJournalModel, { required: true })
        },
        responses: {
            204: {},
            default: {}
        },
        serializer: serializer$7
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$8 = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsJudicialEntityJudicialEntityData: CyberjusticeLabKernelServiceContractsJudicialEntityJudicialEntityData,
        CyberjusticeLabKernelServiceContractsJudicialEntityNeutralPredicateData: CyberjusticeLabKernelServiceContractsJudicialEntityNeutralPredicateData,
        CyberjusticeLabKernelServiceContractsJudicialEntityProsecutingAgentPredicateData: CyberjusticeLabKernelServiceContractsJudicialEntityProsecutingAgentPredicateData,
        CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiRequestData: CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiRequestData,
        CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiResponseData: CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiResponseData,
        CyberjusticeLabKernelSharedJudicialEntityModelsMatterModel: CyberjusticeLabKernelSharedJudicialEntityModelsMatterModel,
        CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiRequestData: CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiRequestData,
        CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiResponseData: CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiResponseData,
        CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityModel: CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityModel,
        CyberjusticeLabKernelSharedJudicialEntityModelsEntityNeutralPredicateLinkModel: CyberjusticeLabKernelSharedJudicialEntityModelsEntityNeutralPredicateLinkModel,
        CyberjusticeLabKernelSharedJudicialEntityModelsEntityProsecutingAgentPredicateLinkModel: CyberjusticeLabKernelSharedJudicialEntityModelsEntityProsecutingAgentPredicateLinkModel,
        CyberjusticeLabKernelSharedJudicialEntityModelsMatterJudicialEntityLinkModel: CyberjusticeLabKernelSharedJudicialEntityModelsMatterJudicialEntityLinkModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a JudicialEntity. */
    var JudicialEntity = /** @class */ (function () {
        /**
         * Create a JudicialEntity.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function JudicialEntity(client) {
            this.client = client;
        }
        JudicialEntity.prototype.getJudicialEntityCompleteInfos = function (jEId$$1, options, callback) {
            return this.client.sendOperationRequest({
                jEId: jEId$$1,
                options: options
            }, getJudicialEntityCompleteInfosOperationSpec, callback);
        };
        JudicialEntity.prototype.getJudicialEntity = function (urn$$1, options, callback) {
            return this.client.sendOperationRequest({
                urn: urn$$1,
                options: options
            }, getJudicialEntityOperationSpec, callback);
        };
        JudicialEntity.prototype.getMatters = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getMattersOperationSpec, callback);
        };
        JudicialEntity.prototype.getJudicialEntities = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getJudicialEntitiesOperationSpec, callback);
        };
        return JudicialEntity;
    }());
    // Operation Specifications
    var serializer$8 = new msRest.Serializer(Mappers$8);
    var getJudicialEntityCompleteInfosOperationSpec = {
        httpMethod: "GET",
        path: "JudicialEntity/GET/JudicialEntityCompleteInfos",
        queryParameters: [
            jEId
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsJudicialEntityJudicialEntityData
            },
            default: {}
        },
        serializer: serializer$8
    };
    var getJudicialEntityOperationSpec = {
        httpMethod: "GET",
        path: "JudicialEntity/GET/JudicialEntityId",
        queryParameters: [
            urn
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$8
    };
    var getMattersOperationSpec = {
        httpMethod: "POST",
        path: "JudicialEntity/POST/Matters",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiResponseData
            },
            default: {}
        },
        serializer: serializer$8
    };
    var getJudicialEntitiesOperationSpec = {
        httpMethod: "POST",
        path: "JudicialEntity/POST/JudicialEntities",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiResponseData
            },
            default: {}
        },
        serializer: serializer$8
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$9 = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelSharedJudicialFileModelsDetachRepresentativeFromPartyModel: CyberjusticeLabKernelSharedJudicialFileModelsDetachRepresentativeFromPartyModel,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileData: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileData,
        CyberjusticeLabKernelServiceContractsJudicialFilePartyData: CyberjusticeLabKernelServiceContractsJudicialFilePartyData,
        CyberjusticeLabKernelServiceContractsJudicialFileContactData: CyberjusticeLabKernelServiceContractsJudicialFileContactData,
        CyberjusticeLabKernelServiceContractsJudicialFileContactPhoneNumberData: CyberjusticeLabKernelServiceContractsJudicialFileContactPhoneNumberData,
        CyberjusticeLabKernelServiceContractsJudicialFileContactAttributeData: CyberjusticeLabKernelServiceContractsJudicialFileContactAttributeData,
        CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeData: CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeData,
        CyberjusticeLabKernelServiceContractsJudicialFileChargePenalOffenceStatementData: CyberjusticeLabKernelServiceContractsJudicialFileChargePenalOffenceStatementData,
        CyberjusticeLabKernelServiceContractsJudicialFileChargeAttributeData: CyberjusticeLabKernelServiceContractsJudicialFileChargeAttributeData,
        CyberjusticeLabKernelServiceContractsJudicialFilePleaData: CyberjusticeLabKernelServiceContractsJudicialFilePleaData,
        CyberjusticeLabKernelServiceContractsJudicialFilePartyAttributeData: CyberjusticeLabKernelServiceContractsJudicialFilePartyAttributeData,
        CyberjusticeLabKernelServiceContractsJudicialFilePartyHearingPreferenceTimeData: CyberjusticeLabKernelServiceContractsJudicialFilePartyHearingPreferenceTimeData,
        CyberjusticeLabKernelServiceContractsJudicialFileTrackingStatusData: CyberjusticeLabKernelServiceContractsJudicialFileTrackingStatusData,
        CyberjusticeLabKernelServiceContractsJudicialFileAttributeData: CyberjusticeLabKernelServiceContractsJudicialFileAttributeData,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileTagData: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileTagData,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResquestData: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResquestData,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyModel,
        CyberjusticeLabKernelSharedJudicialFileModelsContactModel: CyberjusticeLabKernelSharedJudicialFileModelsContactModel,
        CyberjusticeLabKernelSharedJudicialFileModelsContactPhoneNumberModel: CyberjusticeLabKernelSharedJudicialFileModelsContactPhoneNumberModel,
        CyberjusticeLabKernelSharedJudicialFileModelsContactAttributeModel: CyberjusticeLabKernelSharedJudicialFileModelsContactAttributeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeModel: CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyRepresentativeLinkAttributeModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyRepresentativeLinkAttributeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsChargePenalOffenceStatementModel: CyberjusticeLabKernelSharedJudicialFileModelsChargePenalOffenceStatementModel,
        CyberjusticeLabKernelSharedJudicialFileModelsChargeAttributeModel: CyberjusticeLabKernelSharedJudicialFileModelsChargeAttributeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPleaModel: CyberjusticeLabKernelSharedJudicialFileModelsPleaModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyAttributeModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyAttributeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyHearingPreferenceTimeModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyHearingPreferenceTimeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsTrackingStatusModel: CyberjusticeLabKernelSharedJudicialFileModelsTrackingStatusModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileAttributeModel: CyberjusticeLabKernelSharedJudicialFileModelsFileAttributeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagComplementModel,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet1Data: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet1Data,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet2Data: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet2Data,
        CyberjusticeLabKernelServiceContractsJudicialFilePartyEntityData: CyberjusticeLabKernelServiceContractsJudicialFilePartyEntityData,
        CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeUserData: CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeUserData,
        CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeProfileData: CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeProfileData,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileOfPartyEntityData: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileOfPartyEntityData,
        CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleData: CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleData,
        CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleEntityData: CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleEntityData,
        CyberjusticeLabKernelServiceContractsJudicialFileNeutralZipCodeData: CyberjusticeLabKernelServiceContractsJudicialFileNeutralZipCodeData,
        CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileVerifyData: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileVerifyData,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationInformationModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationInformationModel,
        CyberjusticeLabKernelSharedJudicialFileFileInvitationPartyInformationModel: CyberjusticeLabKernelSharedJudicialFileFileInvitationPartyInformationModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInformationFromPartyInvitationModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInformationFromPartyInvitationModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyInformation: CyberjusticeLabKernelSharedJudicialFileModelsPartyInformation,
        CyberjusticeLabKernelSharedJudicialFileModelsPhoneNumber: CyberjusticeLabKernelSharedJudicialFileModelsPhoneNumber,
        CyberjusticeLabKernelSharedJudicialFileModelsAtribute: CyberjusticeLabKernelSharedJudicialFileModelsAtribute,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByFileModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByFileModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByAggregatorCodeModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByAggregatorCodeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationRefuseModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationRefuseModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationRefuseModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationRefuseModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsRepresentativesToPartyModel: CyberjusticeLabKernelSharedJudicialFileModelsRepresentativesToPartyModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLinkRepresentativesToPartyModel: CyberjusticeLabKernelSharedJudicialFileModelsLinkRepresentativesToPartyModel,
        CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationAcceptModel: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationAcceptModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiRequestData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiRequestData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationResourceModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationResourceModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiRequestData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreatePartyRepresentativeModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreatePartyRepresentativeModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLastActorRequestData: CyberjusticeLabKernelSharedJudicialFileModelsLastActorRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiRequestData: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateModel: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogPermissionModel: CyberjusticeLabKernelSharedJudicialFileModelsLogPermissionModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestData: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestData,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestDataDedicatedSearch: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestDataDedicatedSearch,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiResponseData: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiResponseData,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryModel: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryResourceModel: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryResourceModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogEntryCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeCreateModel: CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeCreateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsCreateRepresentativeProfileModel: CyberjusticeLabKernelSharedJudicialFileModelsCreateRepresentativeProfileModel,
        CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeContactModel: CyberjusticeLabKernelSharedJudicialFileModelsRepresentativeContactModel,
        CyberjusticeLabKernelSharedJudicialFileModelsCloseFileModel: CyberjusticeLabKernelSharedJudicialFileModelsCloseFileModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileAttributesUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileAttributesUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyUpsertModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyUpsertModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPartyContactUpsertModel: CyberjusticeLabKernelSharedJudicialFileModelsPartyContactUpsertModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateWithComplementModel: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateWithComplementModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeResourceUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeResourceUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsNotificationRepresentativeUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsNotificationRepresentativeUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateUpdateModel,
        CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeUpdateModel: CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeUpdateModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a JudicialFile. */
    var JudicialFile = /** @class */ (function () {
        /**
         * Create a JudicialFile.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function JudicialFile(client) {
            this.client = client;
        }
        JudicialFile.prototype.deleteParty = function (partyId, lastModified, options, callback) {
            return this.client.sendOperationRequest({
                partyId: partyId,
                lastModified: lastModified,
                options: options
            }, deletePartyOperationSpec, callback);
        };
        JudicialFile.prototype.detachRepresentativeFromParty = function (detachRepresentativeFromPartyModel, options, callback) {
            return this.client.sendOperationRequest({
                detachRepresentativeFromPartyModel: detachRepresentativeFromPartyModel,
                options: options
            }, detachRepresentativeFromPartyOperationSpec, callback);
        };
        JudicialFile.prototype.deletePartyInvitation = function (partyInvitationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                partyInvitationId: partyInvitationId$$1,
                options: options
            }, deletePartyInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.deleteFileInvitation = function (fileInvitationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileInvitationId: fileInvitationId$$1,
                options: options
            }, deleteFileInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.deleteFileTagLink = function (fileId, tagCode$$1, modifiedTicks$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                tagCode: tagCode$$1,
                modifiedTicks: modifiedTicks$$1,
                options: options
            }, deleteFileTagLinkOperationSpec, callback);
        };
        JudicialFile.prototype.deleteNotification = function (notificationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                notificationId: notificationId$$1,
                options: options
            }, deleteNotificationOperationSpec, callback);
        };
        JudicialFile.prototype.deleteCharge = function (chargeId$$1, modifiedTicks$$1, options, callback) {
            return this.client.sendOperationRequest({
                chargeId: chargeId$$1,
                modifiedTicks: modifiedTicks$$1,
                options: options
            }, deleteChargeOperationSpec, callback);
        };
        JudicialFile.prototype.getFiles = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getFilesOperationSpec, callback);
        };
        JudicialFile.prototype.getFiles1 = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getFiles1OperationSpec, callback);
        };
        JudicialFile.prototype.getFilesCount = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getFilesCountOperationSpec, callback);
        };
        JudicialFile.prototype.getFile = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getFileOperationSpec, callback);
        };
        JudicialFile.prototype.getFilesSet1 = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getFilesSet1OperationSpec, callback);
        };
        JudicialFile.prototype.getFilesSet2 = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getFilesSet2OperationSpec, callback);
        };
        JudicialFile.prototype.getPartyEntities = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getPartyEntitiesOperationSpec, callback);
        };
        JudicialFile.prototype.getFilesOfLabel = function (labelId, options, callback) {
            return this.client.sendOperationRequest({
                labelId: labelId,
                options: options
            }, getFilesOfLabelOperationSpec, callback);
        };
        JudicialFile.prototype.getFilesOfTagCode = function (tagCode$$1, options, callback) {
            return this.client.sendOperationRequest({
                tagCode: tagCode$$1,
                options: options
            }, getFilesOfTagCodeOperationSpec, callback);
        };
        JudicialFile.prototype.getBusinessRules = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getBusinessRulesOperationSpec, callback);
        };
        JudicialFile.prototype.getRepresentativeUsers = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getRepresentativeUsersOperationSpec, callback);
        };
        JudicialFile.prototype.getRepresentativeProfile = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getRepresentativeProfileOperationSpec, callback);
        };
        JudicialFile.prototype.getTargetRepresentativeProfile = function (representativeId$$1, username$$1, partyId, options, callback) {
            return this.client.sendOperationRequest({
                representativeId: representativeId$$1,
                username: username$$1,
                partyId: partyId,
                options: options
            }, getTargetRepresentativeProfileOperationSpec, callback);
        };
        JudicialFile.prototype.getRepresentativeNeutralList = function (urn$$1, options, callback) {
            return this.client.sendOperationRequest({
                urn: urn$$1,
                options: options
            }, getRepresentativeNeutralListOperationSpec, callback);
        };
        JudicialFile.prototype.checkForFileOptimisticConcurrency = function (fileId, modifiedTicks$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                modifiedTicks: modifiedTicks$$1,
                options: options
            }, checkForFileOptimisticConcurrencyOperationSpec, callback);
        };
        JudicialFile.prototype.getNeutralZipCodeDataList = function (urn$$1, options, callback) {
            return this.client.sendOperationRequest({
                urn: urn$$1,
                options: options
            }, getNeutralZipCodeDataListOperationSpec, callback);
        };
        JudicialFile.prototype.getFileVerifyData = function (judicialFileId, judicialEntityId, options, callback) {
            return this.client.sendOperationRequest({
                judicialFileId: judicialFileId,
                judicialEntityId: judicialEntityId,
                options: options
            }, getFileVerifyDataOperationSpec, callback);
        };
        JudicialFile.prototype.getPartyInvitation = function (partyInvitationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                partyInvitationId: partyInvitationId$$1,
                options: options
            }, getPartyInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.getPartyInvitationsOfParty = function (partyId, options, callback) {
            return this.client.sendOperationRequest({
                partyId: partyId,
                options: options
            }, getPartyInvitationsOfPartyOperationSpec, callback);
        };
        JudicialFile.prototype.getFileInvitationsOfParty = function (partyId, options, callback) {
            return this.client.sendOperationRequest({
                partyId: partyId,
                options: options
            }, getFileInvitationsOfPartyOperationSpec, callback);
        };
        JudicialFile.prototype.getFileInvitationInformation = function (code$$1, judicialFileId, options, callback) {
            return this.client.sendOperationRequest({
                code: code$$1,
                judicialFileId: judicialFileId,
                options: options
            }, getFileInvitationInformationOperationSpec, callback);
        };
        JudicialFile.prototype.getFileInformationFromPartyInvitation = function (invitationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                invitationId: invitationId$$1,
                options: options
            }, getFileInformationFromPartyInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.getNewNotificationsCount = function (judicialEntityId, options, callback) {
            return this.client.sendOperationRequest({
                judicialEntityId: judicialEntityId,
                options: options
            }, getNewNotificationsCountOperationSpec, callback);
        };
        JudicialFile.prototype.getNotificationsCountByFile = function (take, judicialEntityId, options, callback) {
            return this.client.sendOperationRequest({
                take: take,
                judicialEntityId: judicialEntityId,
                options: options
            }, getNotificationsCountByFileOperationSpec, callback);
        };
        JudicialFile.prototype.getNotificationsCountAggregatorCode = function (aggregatorsCodes$$1, judicialEntityId, aggregatorCodeIsSubstring, options, callback) {
            return this.client.sendOperationRequest({
                aggregatorsCodes: aggregatorsCodes$$1,
                judicialEntityId: judicialEntityId,
                aggregatorCodeIsSubstring: aggregatorCodeIsSubstring,
                options: options
            }, getNotificationsCountAggregatorCodeOperationSpec, callback);
        };
        JudicialFile.prototype.getNotificationType = function (notificationCode, businessRuleName$$1, options, callback) {
            return this.client.sendOperationRequest({
                notificationCode: notificationCode,
                businessRuleName: businessRuleName$$1,
                options: options
            }, getNotificationTypeOperationSpec, callback);
        };
        JudicialFile.prototype.getLogEntryDistinctCodes = function (fileId, currentRole$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                currentRole: currentRole$$1,
                options: options
            }, getLogEntryDistinctCodesOperationSpec, callback);
        };
        JudicialFile.prototype.dismissNotifications = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, dismissNotificationsOperationSpec, callback);
        };
        JudicialFile.prototype.updateRepresentativeStatus = function (representativeId$$1, status$$1, options, callback) {
            return this.client.sendOperationRequest({
                representativeId: representativeId$$1,
                status: status$$1,
                options: options
            }, updateRepresentativeStatusOperationSpec, callback);
        };
        JudicialFile.prototype.updatePartyType = function (partyId, partyType$$1, lastModified, options, callback) {
            return this.client.sendOperationRequest({
                partyId: partyId,
                partyType: partyType$$1,
                lastModified: lastModified,
                options: options
            }, updatePartyTypeOperationSpec, callback);
        };
        JudicialFile.prototype.updatePartyDisputeDescription = function (partyId, disputeDescription$$1, lastModified, options, callback) {
            return this.client.sendOperationRequest({
                partyId: partyId,
                disputeDescription: disputeDescription$$1,
                lastModified: lastModified,
                options: options
            }, updatePartyDisputeDescriptionOperationSpec, callback);
        };
        JudicialFile.prototype.updateFileInvitationExpirationDate = function (fileInvitationId$$1, expiryDate$$1, lastModified, options, callback) {
            return this.client.sendOperationRequest({
                fileInvitationId: fileInvitationId$$1,
                expiryDate: expiryDate$$1,
                lastModified: lastModified,
                options: options
            }, updateFileInvitationExpirationDateOperationSpec, callback);
        };
        JudicialFile.prototype.updatePartyInvitationExpirationDate = function (partyInvitationId$$1, expiryDate$$1, options, callback) {
            return this.client.sendOperationRequest({
                partyInvitationId: partyInvitationId$$1,
                expiryDate: expiryDate$$1,
                options: options
            }, updatePartyInvitationExpirationDateOperationSpec, callback);
        };
        JudicialFile.prototype.updateFileStatus = function (fileId, fileStatus$$1, lastModifiedDate$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                fileStatus: fileStatus$$1,
                lastModifiedDate: lastModifiedDate$$1,
                options: options
            }, updateFileStatusOperationSpec, callback);
        };
        JudicialFile.prototype.createPartyInvitation = function (createModel, options, callback) {
            return this.client.sendOperationRequest({
                createModel: createModel,
                options: options
            }, createPartyInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.createFileInvitation = function (createModel, options, callback) {
            return this.client.sendOperationRequest({
                createModel: createModel,
                options: options
            }, createFileInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.acceptPartyInvitation = function (partyInvitationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                partyInvitationId: partyInvitationId$$1,
                options: options
            }, acceptPartyInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.refusePartyInvitation = function (refuseModel, options, callback) {
            return this.client.sendOperationRequest({
                refuseModel: refuseModel,
                options: options
            }, refusePartyInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.refuseFileInvitation = function (refuseModel, options, callback) {
            return this.client.sendOperationRequest({
                refuseModel: refuseModel,
                options: options
            }, refuseFileInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.createFileTagLink = function (tagModel, options, callback) {
            return this.client.sendOperationRequest({
                tagModel: tagModel,
                options: options
            }, createFileTagLinkOperationSpec, callback);
        };
        JudicialFile.prototype.attachRepresentativesToParty = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, attachRepresentativesToPartyOperationSpec, callback);
        };
        JudicialFile.prototype.linkRepresentativesToParty = function (linkRepresentativesToPartyModel, options, callback) {
            return this.client.sendOperationRequest({
                linkRepresentativesToPartyModel: linkRepresentativesToPartyModel,
                options: options
            }, linkRepresentativesToPartyOperationSpec, callback);
        };
        JudicialFile.prototype.acceptRepresentativeInvitation = function (invitationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                invitationId: invitationId$$1,
                options: options
            }, acceptRepresentativeInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.acceptFileInvitation = function (acceptModel, options, callback) {
            return this.client.sendOperationRequest({
                acceptModel: acceptModel,
                options: options
            }, acceptFileInvitationOperationSpec, callback);
        };
        JudicialFile.prototype.getNotificationTypes = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getNotificationTypesOperationSpec, callback);
        };
        JudicialFile.prototype.getNotifications = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getNotificationsOperationSpec, callback);
        };
        JudicialFile.prototype.getNotificationsSummaryByFile = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getNotificationsSummaryByFileOperationSpec, callback);
        };
        JudicialFile.prototype.createNotification = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, createNotificationOperationSpec, callback);
        };
        JudicialFile.prototype.createJudicialFile = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, createJudicialFileOperationSpec, callback);
        };
        JudicialFile.prototype.getLastActor = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getLastActorOperationSpec, callback);
        };
        JudicialFile.prototype.getLogTemplates = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getLogTemplatesOperationSpec, callback);
        };
        JudicialFile.prototype.getLogEntries = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getLogEntriesOperationSpec, callback);
        };
        JudicialFile.prototype.createLogTemplate = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, createLogTemplateOperationSpec, callback);
        };
        JudicialFile.prototype.createLogEntry = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, createLogEntryOperationSpec, callback);
        };
        JudicialFile.prototype.createCharge = function (charge, options, callback) {
            return this.client.sendOperationRequest({
                charge: charge,
                options: options
            }, createChargeOperationSpec, callback);
        };
        JudicialFile.prototype.createRepresentativeProfile = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, createRepresentativeProfileOperationSpec, callback);
        };
        JudicialFile.prototype.closeFile = function (closeFileModel, options, callback) {
            return this.client.sendOperationRequest({
                closeFileModel: closeFileModel,
                options: options
            }, closeFileOperationSpec, callback);
        };
        JudicialFile.prototype.updateFileAttribute = function (fileAttributesModel, options, callback) {
            return this.client.sendOperationRequest({
                fileAttributesModel: fileAttributesModel,
                options: options
            }, updateFileAttributeOperationSpec, callback);
        };
        JudicialFile.prototype.upsertParty = function (upsertModel, options, callback) {
            return this.client.sendOperationRequest({
                upsertModel: upsertModel,
                options: options
            }, upsertPartyOperationSpec, callback);
        };
        JudicialFile.prototype.changePartyStatus = function (partyId, status$$1, lastModifiedDate$$1, options, callback) {
            return this.client.sendOperationRequest({
                partyId: partyId,
                status: status$$1,
                lastModifiedDate: lastModifiedDate$$1,
                options: options
            }, changePartyStatusOperationSpec, callback);
        };
        JudicialFile.prototype.upsertPartyContact = function (upsertModel, options, callback) {
            return this.client.sendOperationRequest({
                upsertModel: upsertModel,
                options: options
            }, upsertPartyContactOperationSpec, callback);
        };
        JudicialFile.prototype.updatePartyRepresentativesAttributes = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updatePartyRepresentativesAttributesOperationSpec, callback);
        };
        JudicialFile.prototype.updateFileTagLink = function (tagModel, options, callback) {
            return this.client.sendOperationRequest({
                tagModel: tagModel,
                options: options
            }, updateFileTagLinkOperationSpec, callback);
        };
        JudicialFile.prototype.updateFileTagLinkAndComplements = function (tagModel, options, callback) {
            return this.client.sendOperationRequest({
                tagModel: tagModel,
                options: options
            }, updateFileTagLinkAndComplementsOperationSpec, callback);
        };
        JudicialFile.prototype.updateNotificationTypeResource = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updateNotificationTypeResourceOperationSpec, callback);
        };
        JudicialFile.prototype.updateNotification = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updateNotificationOperationSpec, callback);
        };
        JudicialFile.prototype.updateNotificationRepresentative = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updateNotificationRepresentativeOperationSpec, callback);
        };
        JudicialFile.prototype.updateLogTemplate = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updateLogTemplateOperationSpec, callback);
        };
        JudicialFile.prototype.updateLogTemplates = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updateLogTemplatesOperationSpec, callback);
        };
        JudicialFile.prototype.updateCharge = function (charge, options, callback) {
            return this.client.sendOperationRequest({
                charge: charge,
                options: options
            }, updateChargeOperationSpec, callback);
        };
        return JudicialFile;
    }());
    // Operation Specifications
    var serializer$9 = new msRest.Serializer(Mappers$9);
    var deletePartyOperationSpec = {
        httpMethod: "DELETE",
        path: "JudicialFile/DELETE/Party",
        queryParameters: [
            partyId1,
            lastModified0
        ],
        responses: {
            200: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var detachRepresentativeFromPartyOperationSpec = {
        httpMethod: "DELETE",
        path: "JudicialFile/DELETE/DetachRepresentativeFromParty",
        requestBody: {
            parameterPath: "detachRepresentativeFromPartyModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsDetachRepresentativeFromPartyModel, { required: true })
        },
        responses: {
            200: {},
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var deletePartyInvitationOperationSpec = {
        httpMethod: "DELETE",
        path: "JudicialFile/DELETE/PartyInvitation",
        queryParameters: [
            partyInvitationId
        ],
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var deleteFileInvitationOperationSpec = {
        httpMethod: "DELETE",
        path: "JudicialFile/DELETE/FileInvitation",
        queryParameters: [
            fileInvitationId
        ],
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var deleteFileTagLinkOperationSpec = {
        httpMethod: "DELETE",
        path: "JudicialFile/DELETE/FileTagLink",
        queryParameters: [
            fileId0,
            tagCode,
            modifiedTicks
        ],
        responses: {
            200: {},
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var deleteNotificationOperationSpec = {
        httpMethod: "DELETE",
        path: "JudicialFile/DELETE/Notification",
        queryParameters: [
            notificationId
        ],
        responses: {
            200: {},
            403: {},
            default: {}
        },
        serializer: serializer$9
    };
    var deleteChargeOperationSpec = {
        httpMethod: "DELETE",
        path: "JudicialFile/DELETE/Charge",
        queryParameters: [
            chargeId,
            modifiedTicks
        ],
        responses: {
            200: {},
            403: {},
            default: {}
        },
        serializer: serializer$9
    };
    var getFilesOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/Files",
        queryParameters: [
            fileIds0,
            judicialFileIds,
            judicialEntityIds,
            businessRuleNames,
            representativeIds,
            excludedStatuses,
            statuses,
            closingReasons,
            minCreatedDate,
            maxCreatedDate,
            searchStatuses,
            searchText,
            searchBy,
            take0,
            skip,
            orderBy,
            orderByDescending
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getFiles1OperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/Files",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResquestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileApiResponseData
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getFilesCountOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/FilesCount",
        queryParameters: [
            fileIds0,
            judicialFileIds,
            judicialEntityIds,
            businessRuleNames,
            representativeIds,
            excludedStatuses,
            statuses,
            closingReasons,
            minCreatedDate,
            maxCreatedDate,
            searchStatuses,
            searchText,
            searchBy
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Number"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getFileOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/File",
        queryParameters: [
            fileId0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Number"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getFilesSet1OperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/FilesSet1",
        queryParameters: [
            judicialEntityIds,
            businessRuleNames,
            excludedStatuses
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet1Data
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getFilesSet2OperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/FilesSet2",
        queryParameters: [
            judicialEntityIds,
            businessRuleNames,
            statuses
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileSet2Data
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getPartyEntitiesOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/PartyEntities",
        queryParameters: [
            partyEntityIds,
            partyEntityCodes,
            take0,
            skip,
            orderBy
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFilePartyEntityData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getFilesOfLabelOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/FilesOfLabel",
        queryParameters: [
            labelId0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getFilesOfTagCodeOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/FilesOfTagCode",
        queryParameters: [
            tagCode
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getBusinessRulesOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/BusinessRules",
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileBusinessRuleData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getRepresentativeUsersOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/RepresentativeUsers",
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeUserData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getRepresentativeProfileOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/RepresentativeProfile",
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeProfileData
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getTargetRepresentativeProfileOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/TargetRepresentativeProfile",
        queryParameters: [
            representativeId,
            username,
            partyId1
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeProfileData
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getRepresentativeNeutralListOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/RepresentativeNeutralList",
        queryParameters: [
            urn
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileRepresentativeUserData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var checkForFileOptimisticConcurrencyOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/CheckForFileOptimisticConcurrency",
        queryParameters: [
            fileId0,
            modifiedTicks
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Boolean"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getNeutralZipCodeDataListOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/NeutralZipCodeDataList",
        queryParameters: [
            urn
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsJudicialFileNeutralZipCodeData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getFileVerifyDataOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/FileVerifyData",
        queryParameters: [
            judicialFileId0,
            judicialEntityId0
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsJudicialFileJudicialFileVerifyData
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getPartyInvitationOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/PartyInvitation",
        queryParameters: [
            partyInvitationId
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Object"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getPartyInvitationsOfPartyOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/PartyInvitationsOfParty",
        queryParameters: [
            partyId1
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Object"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getFileInvitationsOfPartyOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/FileInvitationsOfParty",
        queryParameters: [
            partyId1
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationModel"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getFileInvitationInformationOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/FileInvitationInformation",
        queryParameters: [
            code,
            judicialFileId1
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationInformationModel
            },
            401: {},
            default: {}
        },
        serializer: serializer$9
    };
    var getFileInformationFromPartyInvitationOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/FileInformation",
        queryParameters: [
            invitationId
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialFileModelsFileInformationFromPartyInvitationModel
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getNewNotificationsCountOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/NewNotificationsCount",
        queryParameters: [
            judicialEntityId0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Number"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getNotificationsCountByFileOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/NotificationsCountByFile",
        queryParameters: [
            take1,
            judicialEntityId0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByFileModel"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getNotificationsCountAggregatorCodeOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/NotificationsCountByAggregatorCode",
        queryParameters: [
            aggregatorsCodes,
            judicialEntityId0,
            aggregatorCodeIsSubstring0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedJudicialFileModelsNotificationCountByAggregatorCodeModel"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getNotificationTypeOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/NotificationType",
        queryParameters: [
            notificationCode0,
            businessRuleName
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeModel
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getLogEntryDistinctCodesOperationSpec = {
        httpMethod: "GET",
        path: "JudicialFile/GET/LogEntryDistinctCodes",
        queryParameters: [
            fileId0,
            currentRole
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            },
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var dismissNotificationsOperationSpec = {
        httpMethod: "PATCH",
        path: "JudicialFile/PATCH/DismissNotifications",
        queryParameters: [
            fileId0,
            notificationCode1,
            aggregatorCode,
            aggregatorCodeIsSubstring1
        ],
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateRepresentativeStatusOperationSpec = {
        httpMethod: "PATCH",
        path: "JudicialFile/PATCH/UpdateRepresentativeStatus",
        queryParameters: [
            representativeId,
            status
        ],
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updatePartyTypeOperationSpec = {
        httpMethod: "PATCH",
        path: "JudicialFile/PATCH/UpdatePartyType",
        queryParameters: [
            partyId1,
            partyType,
            lastModified0
        ],
        responses: {
            200: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updatePartyDisputeDescriptionOperationSpec = {
        httpMethod: "PATCH",
        path: "JudicialFile/PATCH/UpdatePartyDisputeDescription",
        queryParameters: [
            partyId1,
            disputeDescription,
            lastModified0
        ],
        responses: {
            200: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateFileInvitationExpirationDateOperationSpec = {
        httpMethod: "PATCH",
        path: "JudicialFile/PATCH/UpdateFileInvitationExpirationDate",
        queryParameters: [
            fileInvitationId,
            expiryDate,
            lastModified1
        ],
        responses: {
            200: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updatePartyInvitationExpirationDateOperationSpec = {
        httpMethod: "PATCH",
        path: "JudicialFile/PATCH/UpdatePartyInvitationExpirationDate",
        queryParameters: [
            partyInvitationId,
            expiryDate
        ],
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateFileStatusOperationSpec = {
        httpMethod: "PATCH",
        path: "JudicialFile/PATCH/UpdateFileStatus",
        queryParameters: [
            fileId0,
            fileStatus,
            lastModifiedDate
        ],
        responses: {
            200: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var createPartyInvitationOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/CreatePartyInvitation",
        requestBody: {
            parameterPath: "createModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationCreateModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var createFileInvitationOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/CreateFileInvitation",
        requestBody: {
            parameterPath: "createModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationCreateModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var acceptPartyInvitationOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/AcceptPartyInvitation",
        requestBody: {
            parameterPath: "partyInvitationId",
            mapper: {
                required: true,
                serializedName: "partyInvitationId",
                type: {
                    name: "Uuid"
                }
            }
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            400: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var refusePartyInvitationOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/RefusePartyInvitation",
        requestBody: {
            parameterPath: "refuseModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsPartyInvitationRefuseModel, { required: true })
        },
        responses: {
            200: {},
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var refuseFileInvitationOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/RefuseFileInvitation",
        requestBody: {
            parameterPath: "refuseModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationRefuseModel, { required: true })
        },
        responses: {
            200: {},
            401: {},
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var createFileTagLinkOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/CreateFileTagLink",
        requestBody: {
            parameterPath: "tagModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagCreateModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var attachRepresentativesToPartyOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/AttachRepresentativesToParty",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsRepresentativesToPartyModel, { required: true })
        },
        responses: {
            200: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var linkRepresentativesToPartyOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/LinkRepresentativesToParty",
        requestBody: {
            parameterPath: "linkRepresentativesToPartyModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsLinkRepresentativesToPartyModel, { required: true })
        },
        responses: {
            200: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var acceptRepresentativeInvitationOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/AcceptRepresentativeInvitation",
        requestBody: {
            parameterPath: "invitationId",
            mapper: {
                required: true,
                serializedName: "invitationId",
                type: {
                    name: "Uuid"
                }
            }
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var acceptFileInvitationOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/AcceptFileInvitation",
        requestBody: {
            parameterPath: "acceptModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsFileInvitationAcceptModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            401: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var getNotificationTypesOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/NotificationTypes",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeApiResponseData
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getNotificationsOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/Notifications",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialFileModelsNotificationApiResponseData
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getNotificationsSummaryByFileOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/NotificationsSummaryByFile",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialFileModelsNotificationsSummaryByFileApiResponseData
            },
            default: {}
        },
        serializer: serializer$9
    };
    var createNotificationOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/CreateNotification",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsNotificationCreateModel, { required: true })
        },
        responses: {
            200: {},
            400: {},
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var createJudicialFileOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/CreateJudicialFile",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileCreateModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            400: {},
            404: {},
            409: {},
            500: {},
            default: {}
        },
        serializer: serializer$9
    };
    var getLastActorOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/GetLastActor",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsLastActorRequestData, { required: true })
        },
        responses: {
            204: {},
            default: {}
        },
        serializer: serializer$9
    };
    var getLogTemplatesOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/GetLogTemplates",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateApiResponseData
            },
            default: {}
        },
        serializer: serializer$9
    };
    var getLogEntriesOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/GetLogEntries",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialFileModelsLogEntryApiResponseData
            },
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var createLogTemplateOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/CreateLogTemplate",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateCreateModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$9
    };
    var createLogEntryOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/CreateLogEntry",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsLogEntryCreateModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                }
            },
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var createChargeOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/CreatePenalCharge",
        requestBody: {
            parameterPath: "charge",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeCreateModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var createRepresentativeProfileOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/POST/CreateRepresentativeProfile",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsCreateRepresentativeProfileModel, { required: true })
        },
        responses: {
            200: {},
            default: {}
        },
        serializer: serializer$9
    };
    var closeFileOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/CloseFile",
        requestBody: {
            parameterPath: "closeFileModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsCloseFileModel, { required: true })
        },
        responses: {
            200: {},
            400: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateFileAttributeOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpdateFileAttribute",
        requestBody: {
            parameterPath: "fileAttributesModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileAttributesUpdateModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedJudicialFileModelsPartyUpsertModel
            },
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var upsertPartyOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpsertParty",
        requestBody: {
            parameterPath: "upsertModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsPartyUpsertModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var changePartyStatusOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/ChangePartyStatus",
        queryParameters: [
            partyId1,
            status,
            lastModifiedDate
        ],
        responses: {
            200: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var upsertPartyContactOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpsertPartyContact",
        requestBody: {
            parameterPath: "upsertModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsPartyContactUpsertModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            400: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updatePartyRepresentativesAttributesOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpdatePartyRepresentativesAttributes",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsRepresentativesToPartyModel, { required: true })
        },
        responses: {
            200: {},
            400: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateFileTagLinkOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpdateFileTagLink",
        requestBody: {
            parameterPath: "tagModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateModel, { required: true })
        },
        responses: {
            200: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateFileTagLinkAndComplementsOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpdateFileTagLinkAndComplements",
        requestBody: {
            parameterPath: "tagModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsJudicialFileTagUpdateWithComplementModel, { required: true })
        },
        responses: {
            200: {},
            400: {},
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateNotificationTypeResourceOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpdateNotificationType",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsNotificationTypeResourceUpdateModel, { required: true })
        },
        responses: {
            200: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateNotificationOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpdateNotification",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsNotificationUpdateModel, { required: true })
        },
        responses: {
            200: {},
            403: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateNotificationRepresentativeOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpdateNotificationRepresentative",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsNotificationRepresentativeUpdateModel, { required: true })
        },
        responses: {
            200: {},
            403: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateLogTemplateOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpdateLogTemplate",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateUpdateModel, { required: true })
        },
        responses: {
            200: {},
            403: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateLogTemplatesOperationSpec = {
        httpMethod: "PUT",
        path: "JudicialFile/PUT/UpdateLogTemplates",
        requestBody: {
            parameterPath: "model",
            mapper: {
                required: true,
                serializedName: "model",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelSharedJudicialFileModelsLogTemplateUpdateModel"
                        }
                    }
                }
            }
        },
        responses: {
            200: {},
            403: {},
            default: {}
        },
        serializer: serializer$9
    };
    var updateChargeOperationSpec = {
        httpMethod: "POST",
        path: "JudicialFile/PUT/UpdatePenalCharge",
        requestBody: {
            parameterPath: "charge",
            mapper: __assign({}, CyberjusticeLabKernelSharedJudicialFileModelsPenalChargeUpdateModel, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$9
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$a = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelSharedLocationLocationBuildingData: CyberjusticeLabKernelSharedLocationLocationBuildingData,
        CyberjusticeLabKernelSharedLocationLocationRoomData: CyberjusticeLabKernelSharedLocationLocationRoomData,
        CyberjusticeLabKernelSharedLocationLocationBuildingUpdateData: CyberjusticeLabKernelSharedLocationLocationBuildingUpdateData,
        CyberjusticeLabKernelSharedLocationLocationRoomUpdateData: CyberjusticeLabKernelSharedLocationLocationRoomUpdateData,
        CyberjusticeLabKernelSharedLocationLocationBuildingCreateData: CyberjusticeLabKernelSharedLocationLocationBuildingCreateData,
        CyberjusticeLabKernelSharedLocationLocationRoomCreateData: CyberjusticeLabKernelSharedLocationLocationRoomCreateData
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Location. */
    var Location = /** @class */ (function () {
        /**
         * Create a Location.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Location(client) {
            this.client = client;
        }
        Location.prototype.getBuildings = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getBuildingsOperationSpec, callback);
        };
        Location.prototype.getBuilding = function (buildingId, options, callback) {
            return this.client.sendOperationRequest({
                buildingId: buildingId,
                options: options
            }, getBuildingOperationSpec, callback);
        };
        Location.prototype.getBuildingWithRoom = function (roomId, options, callback) {
            return this.client.sendOperationRequest({
                roomId: roomId,
                options: options
            }, getBuildingWithRoomOperationSpec, callback);
        };
        Location.prototype.toggleBuildingStatus = function (buildingId, modifiedTicks$$1, options, callback) {
            return this.client.sendOperationRequest({
                buildingId: buildingId,
                modifiedTicks: modifiedTicks$$1,
                options: options
            }, toggleBuildingStatusOperationSpec, callback);
        };
        Location.prototype.toggleRoomStatus = function (roomId, modifiedTicks$$1, options, callback) {
            return this.client.sendOperationRequest({
                roomId: roomId,
                modifiedTicks: modifiedTicks$$1,
                options: options
            }, toggleRoomStatusOperationSpec, callback);
        };
        Location.prototype.updateBuilding = function (buildingData, options, callback) {
            return this.client.sendOperationRequest({
                buildingData: buildingData,
                options: options
            }, updateBuildingOperationSpec, callback);
        };
        Location.prototype.updateRoom = function (roomData, options, callback) {
            return this.client.sendOperationRequest({
                roomData: roomData,
                options: options
            }, updateRoomOperationSpec, callback);
        };
        Location.prototype.createBuilding = function (buildingData, options, callback) {
            return this.client.sendOperationRequest({
                buildingData: buildingData,
                options: options
            }, createBuildingOperationSpec, callback);
        };
        Location.prototype.createRoom = function (roomData, options, callback) {
            return this.client.sendOperationRequest({
                roomData: roomData,
                options: options
            }, createRoomOperationSpec, callback);
        };
        return Location;
    }());
    // Operation Specifications
    var serializer$a = new msRest.Serializer(Mappers$a);
    var getBuildingsOperationSpec = {
        httpMethod: "GET",
        path: "Location/GET/Buildings",
        queryParameters: [
            locationBuildingIds,
            locationRoomIds,
            judicialEntityIds,
            names0,
            activeOnly,
            take0,
            skip,
            orderBy
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedLocationLocationBuildingData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$a
    };
    var getBuildingOperationSpec = {
        httpMethod: "GET",
        path: "Location/GET/Building",
        queryParameters: [
            buildingId0
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedLocationLocationBuildingData
            },
            default: {}
        },
        serializer: serializer$a
    };
    var getBuildingWithRoomOperationSpec = {
        httpMethod: "GET",
        path: "Location/GET/BuildingWithRoom",
        queryParameters: [
            roomId0
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedLocationLocationBuildingData
            },
            default: {}
        },
        serializer: serializer$a
    };
    var toggleBuildingStatusOperationSpec = {
        httpMethod: "PATCH",
        path: "Location/PATCH/ToggleBuildingStatus",
        queryParameters: [
            buildingId1,
            modifiedTicks
        ],
        responses: {
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$a
    };
    var toggleRoomStatusOperationSpec = {
        httpMethod: "PATCH",
        path: "Location/PATCH/ToggleRoomStatus",
        queryParameters: [
            roomId1,
            modifiedTicks
        ],
        responses: {
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$a
    };
    var updateBuildingOperationSpec = {
        httpMethod: "PUT",
        path: "Location/PUT/UpdateBuilding",
        requestBody: {
            parameterPath: "buildingData",
            mapper: __assign({}, CyberjusticeLabKernelSharedLocationLocationBuildingUpdateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$a
    };
    var updateRoomOperationSpec = {
        httpMethod: "PUT",
        path: "Location/PUT/UpdateRoom",
        requestBody: {
            parameterPath: "roomData",
            mapper: __assign({}, CyberjusticeLabKernelSharedLocationLocationRoomUpdateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$a
    };
    var createBuildingOperationSpec = {
        httpMethod: "POST",
        path: "Location/POST/CreateBuilding",
        requestBody: {
            parameterPath: "buildingData",
            mapper: __assign({}, CyberjusticeLabKernelSharedLocationLocationBuildingCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$a
    };
    var createRoomOperationSpec = {
        httpMethod: "POST",
        path: "Location/POST/CreateRoom",
        requestBody: {
            parameterPath: "roomData",
            mapper: __assign({}, CyberjusticeLabKernelSharedLocationLocationRoomCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$a
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$b = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelSharedLookupModelsLookupModel: CyberjusticeLabKernelSharedLookupModelsLookupModel,
        CyberjusticeLabKernelSharedLookupModelsLookupValueModel: CyberjusticeLabKernelSharedLookupModelsLookupValueModel,
        CyberjusticeLabKernelSharedLookupModelsLookupApiRequestData: CyberjusticeLabKernelSharedLookupModelsLookupApiRequestData
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Lookup. */
    var Lookup = /** @class */ (function () {
        /**
         * Create a Lookup.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Lookup(client) {
            this.client = client;
        }
        Lookup.prototype.getLocalizedLookup = function (name$$1, culture$$1, childrenLevel$$1, options, callback) {
            return this.client.sendOperationRequest({
                name: name$$1,
                culture: culture$$1,
                childrenLevel: childrenLevel$$1,
                options: options
            }, getLocalizedLookupOperationSpec, callback);
        };
        Lookup.prototype.getLookup = function (name$$1, childrenLevel$$1, options, callback) {
            return this.client.sendOperationRequest({
                name: name$$1,
                childrenLevel: childrenLevel$$1,
                options: options
            }, getLookupOperationSpec, callback);
        };
        Lookup.prototype.getLocalizedLookups = function (names, culture$$1, childrenLevel$$1, options, callback) {
            return this.client.sendOperationRequest({
                names: names,
                culture: culture$$1,
                childrenLevel: childrenLevel$$1,
                options: options
            }, getLocalizedLookupsOperationSpec, callback);
        };
        Lookup.prototype.getLookups = function (names, childrenLevel$$1, options, callback) {
            return this.client.sendOperationRequest({
                names: names,
                childrenLevel: childrenLevel$$1,
                options: options
            }, getLookupsOperationSpec, callback);
        };
        Lookup.prototype.getLookups1 = function (getLookupsModel, options, callback) {
            return this.client.sendOperationRequest({
                getLookupsModel: getLookupsModel,
                options: options
            }, getLookups1OperationSpec, callback);
        };
        return Lookup;
    }());
    // Operation Specifications
    var serializer$b = new msRest.Serializer(Mappers$b);
    var getLocalizedLookupOperationSpec = {
        httpMethod: "GET",
        path: "Lookup/GET/LocalizedLookup",
        queryParameters: [
            name,
            culture,
            childrenLevel
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedLookupModelsLookupModel
            },
            default: {}
        },
        serializer: serializer$b
    };
    var getLookupOperationSpec = {
        httpMethod: "GET",
        path: "Lookup/GET/Lookup",
        queryParameters: [
            name,
            childrenLevel
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedLookupModelsLookupModel
            },
            default: {}
        },
        serializer: serializer$b
    };
    var getLocalizedLookupsOperationSpec = {
        httpMethod: "GET",
        path: "Lookup/GET/LocalizedLookups",
        queryParameters: [
            names1,
            culture,
            childrenLevel
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedLookupModelsLookupModel"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$b
    };
    var getLookupsOperationSpec = {
        httpMethod: "GET",
        path: "Lookup/GET/Lookups",
        queryParameters: [
            names1,
            childrenLevel
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedLookupModelsLookupModel"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$b
    };
    var getLookups1OperationSpec = {
        httpMethod: "POST",
        path: "Lookup/POST/Lookups",
        requestBody: {
            parameterPath: "getLookupsModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedLookupModelsLookupApiRequestData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedLookupModelsLookupModel"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$b
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$c = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationDeleteData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationDeleteData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationData,
        CyberjusticeLabKernelSharedProsecutingAuthorityBaseProsecutingAuthorityData: CyberjusticeLabKernelSharedProsecutingAuthorityBaseProsecutingAuthorityData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityUpdateData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityUpdateData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityCreateData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityCreateData,
        CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationCreateData: CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationCreateData
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProsecutingAuthority. */
    var ProsecutingAuthority = /** @class */ (function () {
        /**
         * Create a ProsecutingAuthority.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function ProsecutingAuthority(client) {
            this.client = client;
        }
        ProsecutingAuthority.prototype.deleteProsecutingAuthority = function (id, modifiedTicks$$1, options, callback) {
            return this.client.sendOperationRequest({
                id: id,
                modifiedTicks: modifiedTicks$$1,
                options: options
            }, deleteProsecutingAuthorityOperationSpec, callback);
        };
        ProsecutingAuthority.prototype.deleteProsecutingAuthorityDelegation = function (authorityDelegation, modifiedTicks$$1, options, callback) {
            return this.client.sendOperationRequest({
                authorityDelegation: authorityDelegation,
                modifiedTicks: modifiedTicks$$1,
                options: options
            }, deleteProsecutingAuthorityDelegationOperationSpec, callback);
        };
        ProsecutingAuthority.prototype.getProsecutingAuthorities = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getProsecutingAuthoritiesOperationSpec, callback);
        };
        ProsecutingAuthority.prototype.getProsecutingAuthoritiesCount = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getProsecutingAuthoritiesCountOperationSpec, callback);
        };
        ProsecutingAuthority.prototype.updateProsecutingAuthority = function (authority, options, callback) {
            return this.client.sendOperationRequest({
                authority: authority,
                options: options
            }, updateProsecutingAuthorityOperationSpec, callback);
        };
        ProsecutingAuthority.prototype.createProsecutingAuthority = function (authority, options, callback) {
            return this.client.sendOperationRequest({
                authority: authority,
                options: options
            }, createProsecutingAuthorityOperationSpec, callback);
        };
        ProsecutingAuthority.prototype.createProsecutingAuthorityDelegation = function (authorityDelegation, options, callback) {
            return this.client.sendOperationRequest({
                authorityDelegation: authorityDelegation,
                options: options
            }, createProsecutingAuthorityDelegationOperationSpec, callback);
        };
        return ProsecutingAuthority;
    }());
    // Operation Specifications
    var serializer$c = new msRest.Serializer(Mappers$c);
    var deleteProsecutingAuthorityOperationSpec = {
        httpMethod: "DELETE",
        path: "ProsecutingAuthority/DELETE/DeleteProsecutingAuthority",
        queryParameters: [
            id0,
            modifiedTicks
        ],
        responses: {
            204: {},
            default: {}
        },
        serializer: serializer$c
    };
    var deleteProsecutingAuthorityDelegationOperationSpec = {
        httpMethod: "DELETE",
        path: "ProsecutingAuthority/DELETE/DeleteProsecutingAuthorityDelegation",
        queryParameters: [
            modifiedTicks
        ],
        requestBody: {
            parameterPath: "authorityDelegation",
            mapper: __assign({}, CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationDeleteData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$c
    };
    var getProsecutingAuthoritiesOperationSpec = {
        httpMethod: "GET",
        path: "ProsecutingAuthority/GET/ProsecutingAuthorities",
        queryParameters: [
            prosecutingAuthorityIds,
            excludedProsecutingAuthorityIds,
            prosecutingAuthorityNames
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$c
    };
    var getProsecutingAuthoritiesCountOperationSpec = {
        httpMethod: "GET",
        path: "ProsecutingAuthority/GET/ProsecutingAuthoritiesCount",
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Number"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$c
    };
    var updateProsecutingAuthorityOperationSpec = {
        httpMethod: "PUT",
        path: "ProsecutingAuthority/PUT/UpdateProsecutingAuthority",
        requestBody: {
            parameterPath: "authority",
            mapper: __assign({}, CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityUpdateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$c
    };
    var createProsecutingAuthorityOperationSpec = {
        httpMethod: "POST",
        path: "ProsecutingAuthority/POST/CreateProsecutingAuthority",
        requestBody: {
            parameterPath: "authority",
            mapper: __assign({}, CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$c
    };
    var createProsecutingAuthorityDelegationOperationSpec = {
        httpMethod: "POST",
        path: "ProsecutingAuthority/POST/CreateProsecutingAuthorityDelegation",
        requestBody: {
            parameterPath: "authorityDelegation",
            mapper: __assign({}, CyberjusticeLabKernelSharedProsecutingAuthorityProsecutingAuthorityDelegationCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$c
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$d = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelSharedRequestRequestData: CyberjusticeLabKernelSharedRequestRequestData,
        CyberjusticeLabKernelSharedRequestRequestAttributeData: CyberjusticeLabKernelSharedRequestRequestAttributeData,
        CyberjusticeLabKernelSharedRequestRequestCreateData: CyberjusticeLabKernelSharedRequestRequestCreateData,
        CyberjusticeLabKernelSharedRequestRequestUpdateData: CyberjusticeLabKernelSharedRequestRequestUpdateData,
        CyberjusticeLabKernelSharedRequestRequestUpdateAttributeData: CyberjusticeLabKernelSharedRequestRequestUpdateAttributeData
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Request. */
    var Request = /** @class */ (function () {
        /**
         * Create a Request.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Request(client) {
            this.client = client;
        }
        Request.prototype.deleteRequest = function (requestId$$1, options, callback) {
            return this.client.sendOperationRequest({
                requestId: requestId$$1,
                options: options
            }, deleteRequestOperationSpec, callback);
        };
        Request.prototype.getRequests = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getRequestsOperationSpec, callback);
        };
        Request.prototype.getRequest = function (requestId$$1, options, callback) {
            return this.client.sendOperationRequest({
                requestId: requestId$$1,
                options: options
            }, getRequestOperationSpec, callback);
        };
        Request.prototype.createRequest = function (request, options, callback) {
            return this.client.sendOperationRequest({
                request: request,
                options: options
            }, createRequestOperationSpec, callback);
        };
        Request.prototype.updateRequest = function (request, options, callback) {
            return this.client.sendOperationRequest({
                request: request,
                options: options
            }, updateRequestOperationSpec, callback);
        };
        Request.prototype.updateRequestAttributes = function (request, options, callback) {
            return this.client.sendOperationRequest({
                request: request,
                options: options
            }, updateRequestAttributesOperationSpec, callback);
        };
        return Request;
    }());
    // Operation Specifications
    var serializer$d = new msRest.Serializer(Mappers$d);
    var deleteRequestOperationSpec = {
        httpMethod: "DELETE",
        path: "Request/DELETE/DeleteRequest",
        queryParameters: [
            requestId
        ],
        responses: {
            204: {},
            default: {}
        },
        serializer: serializer$d
    };
    var getRequestsOperationSpec = {
        httpMethod: "GET",
        path: "Request/GET/GetRequests",
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedRequestRequestData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$d
    };
    var getRequestOperationSpec = {
        httpMethod: "GET",
        path: "Request/GET/GetRequest",
        queryParameters: [
            requestId
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedRequestRequestData
            },
            default: {}
        },
        serializer: serializer$d
    };
    var createRequestOperationSpec = {
        httpMethod: "POST",
        path: "Request/POST/CreateRequest",
        requestBody: {
            parameterPath: "request",
            mapper: __assign({}, CyberjusticeLabKernelSharedRequestRequestCreateData, { required: true })
        },
        responses: {
            400: {},
            default: {}
        },
        serializer: serializer$d
    };
    var updateRequestOperationSpec = {
        httpMethod: "PUT",
        path: "Request/PUT/UpdateRequest",
        requestBody: {
            parameterPath: "request",
            mapper: __assign({}, CyberjusticeLabKernelSharedRequestRequestUpdateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$d
    };
    var updateRequestAttributesOperationSpec = {
        httpMethod: "PUT",
        path: "Request/PUT/UpdateRequestAttributes",
        requestBody: {
            parameterPath: "request",
            mapper: __assign({}, CyberjusticeLabKernelSharedRequestRequestUpdateAttributeData, { required: true })
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$d
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$e = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsSecureMailEmailData: CyberjusticeLabKernelServiceContractsSecureMailEmailData
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a SecureMail. */
    var SecureMail = /** @class */ (function () {
        /**
         * Create a SecureMail.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function SecureMail(client) {
            this.client = client;
        }
        SecureMail.prototype.getMailList = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getMailListOperationSpec, callback);
        };
        SecureMail.prototype.getMail = function (type$$1, culture$$1, options, callback) {
            return this.client.sendOperationRequest({
                type: type$$1,
                culture: culture$$1,
                options: options
            }, getMailOperationSpec, callback);
        };
        return SecureMail;
    }());
    // Operation Specifications
    var serializer$e = new msRest.Serializer(Mappers$e);
    var getMailListOperationSpec = {
        httpMethod: "GET",
        path: "SecureMail/GET/MailList",
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsSecureMailEmailData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$e
    };
    var getMailOperationSpec = {
        httpMethod: "GET",
        path: "SecureMail/GET/Mail",
        queryParameters: [
            type,
            culture
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsSecureMailEmailData
            },
            default: {}
        },
        serializer: serializer$e
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$f = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsSecurityPredicateData: CyberjusticeLabKernelServiceContractsSecurityPredicateData,
        CyberjusticeLabKernelServiceContractsSecurityClaimValueData: CyberjusticeLabKernelServiceContractsSecurityClaimValueData
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Security. */
    var Security = /** @class */ (function () {
        /**
         * Create a Security.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Security(client) {
            this.client = client;
        }
        Security.prototype.getPredicate = function (id, options, callback) {
            return this.client.sendOperationRequest({
                id: id,
                options: options
            }, getPredicateOperationSpec, callback);
        };
        Security.prototype.getPredicateIdByName = function (name$$1, options, callback) {
            return this.client.sendOperationRequest({
                name: name$$1,
                options: options
            }, getPredicateIdByNameOperationSpec, callback);
        };
        return Security;
    }());
    // Operation Specifications
    var serializer$f = new msRest.Serializer(Mappers$f);
    var getPredicateOperationSpec = {
        httpMethod: "GET",
        path: "Security/GET/Predicate",
        queryParameters: [
            id1
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsSecurityPredicateData
            },
            default: {}
        },
        serializer: serializer$f
    };
    var getPredicateIdByNameOperationSpec = {
        httpMethod: "GET",
        path: "Security/GET/PredicateIdByName",
        queryParameters: [
            name
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$f
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$g = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelSharedTagLocalizedLabelData: CyberjusticeLabKernelSharedTagLocalizedLabelData,
        CyberjusticeLabKernelSharedTagTagLinkData: CyberjusticeLabKernelSharedTagTagLinkData,
        CyberjusticeLabKernelSharedTagTagData: CyberjusticeLabKernelSharedTagTagData,
        CyberjusticeLabKernelSharedTagLabelData: CyberjusticeLabKernelSharedTagLabelData,
        CyberjusticeLabKernelSharedTagLabelLocalizationData: CyberjusticeLabKernelSharedTagLabelLocalizationData,
        CyberjusticeLabKernelSharedTagTagLinkUpdateData: CyberjusticeLabKernelSharedTagTagLinkUpdateData,
        CyberjusticeLabKernelSharedTagLabelUpdateData: CyberjusticeLabKernelSharedTagLabelUpdateData,
        CyberjusticeLabKernelSharedTagLabelLocalizationBaseData: CyberjusticeLabKernelSharedTagLabelLocalizationBaseData,
        CyberjusticeLabKernelSharedTagTagLinkCreateData: CyberjusticeLabKernelSharedTagTagLinkCreateData,
        CyberjusticeLabKernelSharedTagLabelCreateData: CyberjusticeLabKernelSharedTagLabelCreateData
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Tag. */
    var Tag = /** @class */ (function () {
        /**
         * Create a Tag.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Tag(client) {
            this.client = client;
        }
        Tag.prototype.getLabelsOfCurrentUser = function (cultureCode$$1, labelSection$$1, judicialEntityId, options, callback) {
            return this.client.sendOperationRequest({
                cultureCode: cultureCode$$1,
                labelSection: labelSection$$1,
                judicialEntityId: judicialEntityId,
                options: options
            }, getLabelsOfCurrentUserOperationSpec, callback);
        };
        Tag.prototype.getTagsOfCodes = function (codes, options, callback) {
            return this.client.sendOperationRequest({
                codes: codes,
                options: options
            }, getTagsOfCodesOperationSpec, callback);
        };
        Tag.prototype.getTags = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getTagsOperationSpec, callback);
        };
        Tag.prototype.getTag = function (key$$1, options, callback) {
            return this.client.sendOperationRequest({
                key: key$$1,
                options: options
            }, getTagOperationSpec, callback);
        };
        Tag.prototype.getTagLinks = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getTagLinksOperationSpec, callback);
        };
        Tag.prototype.getTagLink = function (tagId$$1, code$$1, options, callback) {
            return this.client.sendOperationRequest({
                tagId: tagId$$1,
                code: code$$1,
                options: options
            }, getTagLinkOperationSpec, callback);
        };
        Tag.prototype.getLabels = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getLabelsOperationSpec, callback);
        };
        Tag.prototype.getLabel = function (labelId, options, callback) {
            return this.client.sendOperationRequest({
                labelId: labelId,
                options: options
            }, getLabelOperationSpec, callback);
        };
        Tag.prototype.updateTagLink = function (tagLink, options, callback) {
            return this.client.sendOperationRequest({
                tagLink: tagLink,
                options: options
            }, updateTagLinkOperationSpec, callback);
        };
        Tag.prototype.updateLabel = function (label, options, callback) {
            return this.client.sendOperationRequest({
                label: label,
                options: options
            }, updateLabelOperationSpec, callback);
        };
        Tag.prototype.createTagLink = function (tagLink, options, callback) {
            return this.client.sendOperationRequest({
                tagLink: tagLink,
                options: options
            }, createTagLinkOperationSpec, callback);
        };
        Tag.prototype.createLabel = function (label, options, callback) {
            return this.client.sendOperationRequest({
                label: label,
                options: options
            }, createLabelOperationSpec, callback);
        };
        Tag.prototype.createTagLabelLink = function (tagId$$1, labelId, options, callback) {
            return this.client.sendOperationRequest({
                tagId: tagId$$1,
                labelId: labelId,
                options: options
            }, createTagLabelLinkOperationSpec, callback);
        };
        Tag.prototype.createLabelRoleLink = function (labelId, roleCode$$1, options, callback) {
            return this.client.sendOperationRequest({
                labelId: labelId,
                roleCode: roleCode$$1,
                options: options
            }, createLabelRoleLinkOperationSpec, callback);
        };
        Tag.prototype.deleteTagLink = function (objectCode$$1, tagId$$1, options, callback) {
            return this.client.sendOperationRequest({
                objectCode: objectCode$$1,
                tagId: tagId$$1,
                options: options
            }, deleteTagLinkOperationSpec, callback);
        };
        Tag.prototype.deleteLabel = function (labelId, options, callback) {
            return this.client.sendOperationRequest({
                labelId: labelId,
                options: options
            }, deleteLabelOperationSpec, callback);
        };
        Tag.prototype.deleteTagLabelLink = function (tagId$$1, labelId, options, callback) {
            return this.client.sendOperationRequest({
                tagId: tagId$$1,
                labelId: labelId,
                options: options
            }, deleteTagLabelLinkOperationSpec, callback);
        };
        Tag.prototype.deleteLabelRoleLink = function (labelId, roleCode$$1, options, callback) {
            return this.client.sendOperationRequest({
                labelId: labelId,
                roleCode: roleCode$$1,
                options: options
            }, deleteLabelRoleLinkOperationSpec, callback);
        };
        return Tag;
    }());
    // Operation Specifications
    var serializer$g = new msRest.Serializer(Mappers$g);
    var getLabelsOfCurrentUserOperationSpec = {
        httpMethod: "GET",
        path: "Tag/GET/LabelsOfCurrentUser",
        queryParameters: [
            cultureCode,
            labelSection,
            judicialEntityId1
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedTagLocalizedLabelData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$g
    };
    var getTagsOfCodesOperationSpec = {
        httpMethod: "GET",
        path: "Tag/GET/TagsOfCodes",
        queryParameters: [
            codes0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedTagTagLinkData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$g
    };
    var getTagsOperationSpec = {
        httpMethod: "GET",
        path: "Tag/GET/Tags",
        queryParameters: [
            tagCodes
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedTagTagData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$g
    };
    var getTagOperationSpec = {
        httpMethod: "GET",
        path: "Tag/GET/Tag",
        queryParameters: [
            key
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedTagTagData
            },
            default: {}
        },
        serializer: serializer$g
    };
    var getTagLinksOperationSpec = {
        httpMethod: "GET",
        path: "Tag/GET/TagLinks",
        queryParameters: [
            codes1
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedTagTagLinkData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$g
    };
    var getTagLinkOperationSpec = {
        httpMethod: "GET",
        path: "Tag/GET/TagLink",
        queryParameters: [
            tagId,
            code
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedTagTagLinkData
            },
            default: {}
        },
        serializer: serializer$g
    };
    var getLabelsOperationSpec = {
        httpMethod: "GET",
        path: "Tag/GET/Labels",
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedTagLabelData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$g
    };
    var getLabelOperationSpec = {
        httpMethod: "GET",
        path: "Tag/GET/Label",
        queryParameters: [
            labelId1
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelSharedTagLabelData
            },
            default: {}
        },
        serializer: serializer$g
    };
    var updateTagLinkOperationSpec = {
        httpMethod: "PUT",
        path: "Tag/PUT/UpdateTagLink",
        requestBody: {
            parameterPath: "tagLink",
            mapper: __assign({}, CyberjusticeLabKernelSharedTagTagLinkUpdateData, { required: true })
        },
        responses: {
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$g
    };
    var updateLabelOperationSpec = {
        httpMethod: "PUT",
        path: "Tag/PUT/UpdateLabel",
        requestBody: {
            parameterPath: "label",
            mapper: __assign({}, CyberjusticeLabKernelSharedTagLabelUpdateData, { required: true })
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$g
    };
    var createTagLinkOperationSpec = {
        httpMethod: "POST",
        path: "Tag/POST/CreateTagLink",
        requestBody: {
            parameterPath: "tagLink",
            mapper: __assign({}, CyberjusticeLabKernelSharedTagTagLinkCreateData, { required: true })
        },
        responses: {
            400: {},
            404: {},
            default: {}
        },
        serializer: serializer$g
    };
    var createLabelOperationSpec = {
        httpMethod: "POST",
        path: "Tag/POST/CreateLabel",
        requestBody: {
            parameterPath: "label",
            mapper: __assign({}, CyberjusticeLabKernelSharedTagLabelCreateData, { required: true })
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Uuid"
                    }
                }
            },
            default: {}
        },
        serializer: serializer$g
    };
    var createTagLabelLinkOperationSpec = {
        httpMethod: "POST",
        path: "Tag/POST/CreateTagLabelLink",
        queryParameters: [
            tagId,
            labelId1
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$g
    };
    var createLabelRoleLinkOperationSpec = {
        httpMethod: "POST",
        path: "Tag/POST/CreateLabelRoleLink",
        queryParameters: [
            labelId1,
            roleCode
        ],
        responses: {
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$g
    };
    var deleteTagLinkOperationSpec = {
        httpMethod: "DELETE",
        path: "Tag/DELETE/DeleteTagLink",
        queryParameters: [
            objectCode,
            tagId
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$g
    };
    var deleteLabelOperationSpec = {
        httpMethod: "DELETE",
        path: "Tag/DELETE/DeleteLabel",
        queryParameters: [
            labelId1
        ],
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$g
    };
    var deleteTagLabelLinkOperationSpec = {
        httpMethod: "DELETE",
        path: "Tag/DELETE/DeleteTagLabelLink",
        queryParameters: [
            tagId,
            labelId1
        ],
        responses: {
            204: {},
            default: {}
        },
        serializer: serializer$g
    };
    var deleteLabelRoleLinkOperationSpec = {
        httpMethod: "DELETE",
        path: "Tag/DELETE/DeleteLabelRoleLink",
        queryParameters: [
            labelId1,
            roleCode
        ],
        responses: {
            204: {},
            default: {}
        },
        serializer: serializer$g
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$h = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsUProfileUserData: CyberjusticeLabKernelServiceContractsUProfileUserData,
        CyberjusticeLabKernelServiceContractsUProfileUserPhoneNumberData: CyberjusticeLabKernelServiceContractsUProfileUserPhoneNumberData,
        CyberjusticeLabKernelServiceContractsUProfileUserAttributeData: CyberjusticeLabKernelServiceContractsUProfileUserAttributeData
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a UProfile. */
    var UProfile = /** @class */ (function () {
        /**
         * Create a UProfile.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function UProfile(client) {
            this.client = client;
        }
        UProfile.prototype.getCurrentUserProfile = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getCurrentUserProfileOperationSpec, callback);
        };
        UProfile.prototype.getUserProfile = function (fileId, username$$1, realm$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                username: username$$1,
                realm: realm$$1,
                options: options
            }, getUserProfileOperationSpec, callback);
        };
        UProfile.prototype.getRealmUserProfiles = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getRealmUserProfilesOperationSpec, callback);
        };
        return UProfile;
    }());
    // Operation Specifications
    var serializer$h = new msRest.Serializer(Mappers$h);
    var getCurrentUserProfileOperationSpec = {
        httpMethod: "GET",
        path: "UProfile/GET/CurrentUserProfile",
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsUProfileUserData
            },
            default: {}
        },
        serializer: serializer$h
    };
    var getUserProfileOperationSpec = {
        httpMethod: "GET",
        path: "UProfile/GET/UserProfile",
        queryParameters: [
            fileId0,
            username,
            realm
        ],
        responses: {
            200: {
                bodyMapper: CyberjusticeLabKernelServiceContractsUProfileUserData
            },
            default: {}
        },
        serializer: serializer$h
    };
    var getRealmUserProfilesOperationSpec = {
        httpMethod: "GET",
        path: "UProfile/GET/RealmUserProfiles",
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsUProfileUserData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$h
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$i = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsUserUserData: CyberjusticeLabKernelServiceContractsUserUserData,
        CyberjusticeLabKernelServiceContractsUserOrganizationData: CyberjusticeLabKernelServiceContractsUserOrganizationData,
        CyberjusticeLabKernelServiceContractsUserGroupData: CyberjusticeLabKernelServiceContractsUserGroupData,
        CyberjusticeLabKernelServiceContractsUserClaimTransformationRuleData: CyberjusticeLabKernelServiceContractsUserClaimTransformationRuleData,
        CyberjusticeLabKernelSharedUserModelsOrganizationSummaryModel: CyberjusticeLabKernelSharedUserModelsOrganizationSummaryModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a User. */
    var User = /** @class */ (function () {
        /**
         * Create a User.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function User(client) {
            this.client = client;
        }
        User.prototype.getCurrentRealmUsers = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getCurrentRealmUsersOperationSpec, callback);
        };
        User.prototype.getOrganizations = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getOrganizationsOperationSpec, callback);
        };
        User.prototype.getOrganizationsSummaries = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, getOrganizationsSummariesOperationSpec, callback);
        };
        return User;
    }());
    // Operation Specifications
    var serializer$i = new msRest.Serializer(Mappers$i);
    var getCurrentRealmUsersOperationSpec = {
        httpMethod: "GET",
        path: "User/GET/CurrentRealmUsers",
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsUserUserData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$i
    };
    var getOrganizationsOperationSpec = {
        httpMethod: "GET",
        path: "User/GET/Organizations",
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsUserOrganizationData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$i
    };
    var getOrganizationsSummariesOperationSpec = {
        httpMethod: "GET",
        path: "User/GET/OrganizationsSummaries",
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelSharedUserModelsOrganizationSummaryModel"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$i
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$j = /*#__PURE__*/Object.freeze({
        CyberjusticeLabKernelServiceContractsWitnessWitnessData: CyberjusticeLabKernelServiceContractsWitnessWitnessData,
        CyberjusticeLabKernelServiceContractsWitnessWitnessPhoneNumberData: CyberjusticeLabKernelServiceContractsWitnessWitnessPhoneNumberData,
        CyberjusticeLabKernelServiceContractsWitnessWitnessExpertiseData: CyberjusticeLabKernelServiceContractsWitnessWitnessExpertiseData,
        CyberjusticeLabKernelServiceContractsWitnessWitnessDocumentData: CyberjusticeLabKernelServiceContractsWitnessWitnessDocumentData,
        CyberjusticeLabKernelSharedWitnessModelsWitnessApiRequestData: CyberjusticeLabKernelSharedWitnessModelsWitnessApiRequestData,
        CyberjusticeLabKernelSharedWitnessAttributesFilters: CyberjusticeLabKernelSharedWitnessAttributesFilters,
        SystemCollectionsGenericKeyValuePairSystemStringSystemString: SystemCollectionsGenericKeyValuePairSystemStringSystemString,
        CyberjusticeLabKernelSharedWitnessModelsActionsFilters: CyberjusticeLabKernelSharedWitnessModelsActionsFilters,
        CyberjusticeLabKernelServiceContractsWitnessJudicialFileExternalWitnessData: CyberjusticeLabKernelServiceContractsWitnessJudicialFileExternalWitnessData,
        CyberjusticeLabKernelSharedWitnessModelsCreateWitnessModel: CyberjusticeLabKernelSharedWitnessModelsCreateWitnessModel,
        CyberjusticeLabKernelSharedWitnessModelsPhoneNumberModel: CyberjusticeLabKernelSharedWitnessModelsPhoneNumberModel,
        CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentModel,
        CyberjusticeLabKernelSharedDocumentModelsAttributeModel: CyberjusticeLabKernelSharedDocumentModelsAttributeModel,
        CyberjusticeLabKernelSharedDocumentModelsCreateDocumentPartyActionModel: CyberjusticeLabKernelSharedDocumentModelsCreateDocumentPartyActionModel,
        CyberjusticeLabKernelSharedWitnessModelsAttributeModel: CyberjusticeLabKernelSharedWitnessModelsAttributeModel,
        CyberjusticeLabKernelSharedWitnessModelsCreateWitnessPartyActionModel: CyberjusticeLabKernelSharedWitnessModelsCreateWitnessPartyActionModel,
        CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessAttributes: CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessAttributes,
        CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessModel: CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessModel,
        CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessPartyActionsModel: CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessPartyActionsModel,
        CyberjusticeLabKernelSharedWitnessModelsWitnessPartyActionModel: CyberjusticeLabKernelSharedWitnessModelsWitnessPartyActionModel
    });

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Witness. */
    var Witness = /** @class */ (function () {
        /**
         * Create a Witness.
         * @param {CyberjusticeAPIsContext} client Reference to the service client.
         */
        function Witness(client) {
            this.client = client;
        }
        Witness.prototype.deleteWitness = function (fileId, witnessId$$1, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                witnessId: witnessId$$1,
                options: options
            }, deleteWitnessOperationSpec, callback);
        };
        Witness.prototype.deleteWitnessDocument = function (documentId$$1, witnessId$$1, fileId, options, callback) {
            return this.client.sendOperationRequest({
                documentId: documentId$$1,
                witnessId: witnessId$$1,
                fileId: fileId,
                options: options
            }, deleteWitnessDocumentOperationSpec, callback);
        };
        Witness.prototype.getWitnesses = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getWitnessesOperationSpec, callback);
        };
        Witness.prototype.getWitnesses1 = function (requestModel, options, callback) {
            return this.client.sendOperationRequest({
                requestModel: requestModel,
                options: options
            }, getWitnesses1OperationSpec, callback);
        };
        Witness.prototype.getExternalWitnessesLinkByFileId = function (fileId, options, callback) {
            return this.client.sendOperationRequest({
                fileId: fileId,
                options: options
            }, getExternalWitnessesLinkByFileIdOperationSpec, callback);
        };
        Witness.prototype.getExternalWitnessesLinkByWitnessCode = function (witnessCode$$1, options, callback) {
            return this.client.sendOperationRequest({
                witnessCode: witnessCode$$1,
                options: options
            }, getExternalWitnessesLinkByWitnessCodeOperationSpec, callback);
        };
        Witness.prototype.createWitness = function (witnessModel, options, callback) {
            return this.client.sendOperationRequest({
                witnessModel: witnessModel,
                options: options
            }, createWitnessOperationSpec, callback);
        };
        Witness.prototype.updateWitnessAttributes = function (updateWitnessAttributesParameter, options, callback) {
            return this.client.sendOperationRequest({
                updateWitnessAttributesParameter: updateWitnessAttributesParameter,
                options: options
            }, updateWitnessAttributesOperationSpec, callback);
        };
        Witness.prototype.updateWitness = function (updateWitnessParameter, options, callback) {
            return this.client.sendOperationRequest({
                updateWitnessParameter: updateWitnessParameter,
                options: options
            }, updateWitnessOperationSpec, callback);
        };
        Witness.prototype.updateWitnessPartyActions = function (model, options, callback) {
            return this.client.sendOperationRequest({
                model: model,
                options: options
            }, updateWitnessPartyActionsOperationSpec, callback);
        };
        return Witness;
    }());
    // Operation Specifications
    var serializer$j = new msRest.Serializer(Mappers$j);
    var deleteWitnessOperationSpec = {
        httpMethod: "DELETE",
        path: "Witness/DELETE/DeleteWitness",
        queryParameters: [
            fileId0,
            witnessId
        ],
        responses: {
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$j
    };
    var deleteWitnessDocumentOperationSpec = {
        httpMethod: "DELETE",
        path: "Witness/DELETE/DeleteWitnessDocument",
        queryParameters: [
            documentId,
            witnessId,
            fileId0
        ],
        responses: {
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$j
    };
    var getWitnessesOperationSpec = {
        httpMethod: "GET",
        path: "Witness/GET/Witnesses",
        queryParameters: [
            fileId0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsWitnessWitnessData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$j
    };
    var getWitnesses1OperationSpec = {
        httpMethod: "POST",
        path: "Witness/POST/GetWitnesses",
        requestBody: {
            parameterPath: "requestModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedWitnessModelsWitnessApiRequestData, { required: true })
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$j
    };
    var getExternalWitnessesLinkByFileIdOperationSpec = {
        httpMethod: "GET",
        path: "Witness/GET/ExternalWitnessesLinkByFileId",
        queryParameters: [
            fileId0
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsWitnessJudicialFileExternalWitnessData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$j
    };
    var getExternalWitnessesLinkByWitnessCodeOperationSpec = {
        httpMethod: "GET",
        path: "Witness/GET/ExternalWitnessesLinkByWitnessCode",
        queryParameters: [
            witnessCode
        ],
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CyberjusticeLabKernelServiceContractsWitnessJudicialFileExternalWitnessData"
                            }
                        }
                    }
                }
            },
            default: {}
        },
        serializer: serializer$j
    };
    var createWitnessOperationSpec = {
        httpMethod: "POST",
        path: "Witness/POST/CreateWitness",
        requestBody: {
            parameterPath: "witnessModel",
            mapper: __assign({}, CyberjusticeLabKernelSharedWitnessModelsCreateWitnessModel, { required: true })
        },
        responses: {
            400: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$j
    };
    var updateWitnessAttributesOperationSpec = {
        httpMethod: "PUT",
        path: "Witness/PUT/UpdateWitnessAttributes",
        requestBody: {
            parameterPath: "updateWitnessAttributesParameter",
            mapper: __assign({}, CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessAttributes, { required: true })
        },
        responses: {
            403: {},
            404: {},
            default: {}
        },
        serializer: serializer$j
    };
    var updateWitnessOperationSpec = {
        httpMethod: "PUT",
        path: "Witness/PUT/UpdateWitness",
        requestBody: {
            parameterPath: "updateWitnessParameter",
            mapper: __assign({}, CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessModel, { required: true })
        },
        responses: {
            403: {},
            404: {},
            409: {},
            default: {}
        },
        serializer: serializer$j
    };
    var updateWitnessPartyActionsOperationSpec = {
        httpMethod: "PUT",
        path: "Witness/PUT/UpdateWitnessPartyActions",
        requestBody: {
            parameterPath: "model",
            mapper: __assign({}, CyberjusticeLabKernelSharedWitnessModelsUpdateWitnessPartyActionsModel, { required: true })
        },
        responses: {
            404: {},
            default: {}
        },
        serializer: serializer$j
    };

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var packageName = "";
    var packageVersion = "";
    var CyberjusticeAPIsContext = /** @class */ (function (_super) {
        __extends(CyberjusticeAPIsContext, _super);
        /**
         * Initializes a new instance of the CyberjusticeAPIsContext class.
         * @param [options] The parameter options
         */
        function CyberjusticeAPIsContext(options) {
            var _this = this;
            if (!options) {
                options = {};
            }
            if (!options.userAgent) {
                var defaultUserAgent = msRest.getDefaultUserAgentValue();
                options.userAgent = packageName + "/" + packageVersion + " " + defaultUserAgent;
            }
            _this = _super.call(this, undefined, options) || this;
            _this.baseUri = options.baseUri || _this.baseUri || "https://localhost:441";
            _this.requestContentType = "application/json; charset=utf-8";
            return _this;
        }
        return CyberjusticeAPIsContext;
    }(msRest.ServiceClient));

    /*
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var CyberjusticeAPIs = /** @class */ (function (_super) {
        __extends(CyberjusticeAPIs, _super);
        /**
         * Initializes a new instance of the CyberjusticeAPIs class.
         * @param [options] The parameter options
         */
        function CyberjusticeAPIs(options) {
            var _this = _super.call(this, options) || this;
            _this.async = new Async(_this);
            _this.businessInformation = new BusinessInformation(_this);
            _this.calendar = new Calendar(_this);
            _this.document = new Document(_this);
            _this.exchange = new Exchange(_this);
            _this.form = new Form(_this);
            _this.hearing = new Hearing(_this);
            _this.journal = new Journal(_this);
            _this.judicialEntity = new JudicialEntity(_this);
            _this.judicialFile = new JudicialFile(_this);
            _this.location = new Location(_this);
            _this.lookup = new Lookup(_this);
            _this.prosecutingAuthority = new ProsecutingAuthority(_this);
            _this.request = new Request(_this);
            _this.secureMail = new SecureMail(_this);
            _this.security = new Security(_this);
            _this.tag = new Tag(_this);
            _this.uProfile = new UProfile(_this);
            _this.user = new User(_this);
            _this.witness = new Witness(_this);
            return _this;
        }
        return CyberjusticeAPIs;
    }(CyberjusticeAPIsContext));

    exports.CyberjusticeAPIs = CyberjusticeAPIs;
    exports.CyberjusticeAPIsContext = CyberjusticeAPIsContext;
    exports.CyberjusticeAPIsModels = index;
    exports.CyberjusticeAPIsMappers = mappers;
    exports.Async = Async;
    exports.BusinessInformation = BusinessInformation;
    exports.Calendar = Calendar;
    exports.Document = Document;
    exports.Exchange = Exchange;
    exports.Form = Form;
    exports.Hearing = Hearing;
    exports.Journal = Journal;
    exports.JudicialEntity = JudicialEntity;
    exports.JudicialFile = JudicialFile;
    exports.Location = Location;
    exports.Lookup = Lookup;
    exports.ProsecutingAuthority = ProsecutingAuthority;
    exports.Request = Request;
    exports.SecureMail = SecureMail;
    exports.Security = Security;
    exports.Tag = Tag;
    exports.UProfile = UProfile;
    exports.User = User;
    exports.Witness = Witness;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=bundle.js.map
