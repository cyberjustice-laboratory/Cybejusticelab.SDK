/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/exchangeMappers";
import * as Parameters from "../models/parameters";
import { CyberjusticeAPIsContext } from "../cyberjusticeAPIsContext";

/** Class representing a Exchange. */
export class Exchange {
  private readonly client: CyberjusticeAPIsContext;

  /**
   * Create a Exchange.
   * @param {CyberjusticeAPIsContext} client Reference to the service client.
   */
  constructor(client: CyberjusticeAPIsContext) {
    this.client = client;
  }

  /**
   * @summary Returns the list of all forum messages.
   * @param fileId The file of the messages.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExchangeGetForumMessagesResponse>
   */
  getForumMessages(fileId: string, options?: msRest.RequestOptionsBase): Promise<Models.ExchangeGetForumMessagesResponse>;
  /**
   * @param fileId The file of the messages.
   * @param callback The callback
   */
  getForumMessages(fileId: string, callback: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsExchangeForumData[]>): void;
  /**
   * @param fileId The file of the messages.
   * @param options The optional parameters
   * @param callback The callback
   */
  getForumMessages(fileId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsExchangeForumData[]>): void;
  getForumMessages(fileId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsExchangeForumData[]>, callback?: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsExchangeForumData[]>): Promise<Models.ExchangeGetForumMessagesResponse> {
    return this.client.sendOperationRequest(
      {
        fileId,
        options
      },
      getForumMessagesOperationSpec,
      callback) as Promise<Models.ExchangeGetForumMessagesResponse>;
  }

  /**
   * @summary Get the list of forum messages.
   * @param requestModel Request filter model.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExchangeGetForumMessages1Response>
   */
  getForumMessages1(requestModel: Models.CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData, options?: msRest.RequestOptionsBase): Promise<Models.ExchangeGetForumMessages1Response>;
  /**
   * @param requestModel Request filter model.
   * @param callback The callback
   */
  getForumMessages1(requestModel: Models.CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData, callback: msRest.ServiceCallback<Models.CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData>): void;
  /**
   * @param requestModel Request filter model.
   * @param options The optional parameters
   * @param callback The callback
   */
  getForumMessages1(requestModel: Models.CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData>): void;
  getForumMessages1(requestModel: Models.CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData>, callback?: msRest.ServiceCallback<Models.CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData>): Promise<Models.ExchangeGetForumMessages1Response> {
    return this.client.sendOperationRequest(
      {
        requestModel,
        options
      },
      getForumMessages1OperationSpec,
      callback) as Promise<Models.ExchangeGetForumMessages1Response>;
  }

  /**
   * @summary Return a forum message.
   * @param fileId The message's file Guid.
   * @param forumId The requested message Guid.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExchangeGetForumMessageResponse>
   */
  getForumMessage(fileId: string, forumId: string, options?: msRest.RequestOptionsBase): Promise<Models.ExchangeGetForumMessageResponse>;
  /**
   * @param fileId The message's file Guid.
   * @param forumId The requested message Guid.
   * @param callback The callback
   */
  getForumMessage(fileId: string, forumId: string, callback: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsExchangeForumData>): void;
  /**
   * @param fileId The message's file Guid.
   * @param forumId The requested message Guid.
   * @param options The optional parameters
   * @param callback The callback
   */
  getForumMessage(fileId: string, forumId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsExchangeForumData>): void;
  getForumMessage(fileId: string, forumId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsExchangeForumData>, callback?: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsExchangeForumData>): Promise<Models.ExchangeGetForumMessageResponse> {
    return this.client.sendOperationRequest(
      {
        fileId,
        forumId,
        options
      },
      getForumMessageOperationSpec,
      callback) as Promise<Models.ExchangeGetForumMessageResponse>;
  }

  /**
   * @summary Add a new forum message
   * @param forumMessageModel A {CyberjusticeLab.Kernel.Shared.Exchange.Models.AddForumMessageModel}
   * object with the new message information.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  addForumMessage(forumMessageModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param forumMessageModel A {CyberjusticeLab.Kernel.Shared.Exchange.Models.AddForumMessageModel}
   * object with the new message information.
   * @param callback The callback
   */
  addForumMessage(forumMessageModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param forumMessageModel A {CyberjusticeLab.Kernel.Shared.Exchange.Models.AddForumMessageModel}
   * object with the new message information.
   * @param options The optional parameters
   * @param callback The callback
   */
  addForumMessage(forumMessageModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  addForumMessage(forumMessageModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        forumMessageModel,
        options
      },
      addForumMessageOperationSpec,
      callback);
  }

  /**
   * @summary Add a party to a forum's message
   * @param partyForumMessageModel The party, file id and the attribute filter.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  addPartyToForumMessages(partyForumMessageModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param partyForumMessageModel The party, file id and the attribute filter.
   * @param callback The callback
   */
  addPartyToForumMessages(partyForumMessageModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param partyForumMessageModel The party, file id and the attribute filter.
   * @param options The optional parameters
   * @param callback The callback
   */
  addPartyToForumMessages(partyForumMessageModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  addPartyToForumMessages(partyForumMessageModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        partyForumMessageModel,
        options
      },
      addPartyToForumMessagesOperationSpec,
      callback);
  }

  /**
   * @summary Add new forum messages attributes.
   * @param forumMessageAttributesModel Forum Message view model
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  addForumMessageAttributes(forumMessageAttributesModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param forumMessageAttributesModel Forum Message view model
   * @param callback The callback
   */
  addForumMessageAttributes(forumMessageAttributesModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param forumMessageAttributesModel Forum Message view model
   * @param options The optional parameters
   * @param callback The callback
   */
  addForumMessageAttributes(forumMessageAttributesModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  addForumMessageAttributes(forumMessageAttributesModel: Models.CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        forumMessageAttributesModel,
        options
      },
      addForumMessageAttributesOperationSpec,
      callback);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getForumMessagesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Exchange/GET/ForumMessages",
  queryParameters: [
    Parameters.fileId0
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CyberjusticeLabKernelServiceContractsExchangeForumData"
            }
          }
        }
      }
    },
    default: {}
  },
  serializer
};

const getForumMessages1OperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Exchange/POST/ForumMessages",
  requestBody: {
    parameterPath: "requestModel",
    mapper: {
      ...Mappers.CyberjusticeLabKernelSharedExchangeModelsForumMessageApiRequestData,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CyberjusticeLabKernelSharedExchangeModelsForumMessageApiResponseData
    },
    default: {}
  },
  serializer
};

const getForumMessageOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Exchange/GET/ForumMessage",
  queryParameters: [
    Parameters.fileId0,
    Parameters.forumId
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CyberjusticeLabKernelServiceContractsExchangeForumData
    },
    default: {}
  },
  serializer
};

const addForumMessageOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Exchange/POST/AddForumMessage",
  requestBody: {
    parameterPath: "forumMessageModel",
    mapper: {
      ...Mappers.CyberjusticeLabKernelSharedExchangeModelsAddForumMessageModel,
      required: true
    }
  },
  responses: {
    403: {},
    404: {},
    default: {}
  },
  serializer
};

const addPartyToForumMessagesOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Exchange/POST/AddPartyToForumMessages",
  requestBody: {
    parameterPath: "partyForumMessageModel",
    mapper: {
      ...Mappers.CyberjusticeLabKernelSharedExchangeModelsAddPartyToForumMessagesModel,
      required: true
    }
  },
  responses: {
    404: {},
    default: {}
  },
  serializer
};

const addForumMessageAttributesOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Exchange/POST/AddForumMessageAttributes",
  requestBody: {
    parameterPath: "forumMessageAttributesModel",
    mapper: {
      ...Mappers.CyberjusticeLabKernelSharedExchangeModelsAddForumMessageAttributesModel,
      required: true
    }
  },
  responses: {
    404: {},
    default: {}
  },
  serializer
};
