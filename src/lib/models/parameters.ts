/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const activeOnly: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "activeOnly"
  ],
  mapper: {
    serializedName: "activeOnly",
    type: {
      name: "Boolean"
    }
  }
};
export const aggregatorCode: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "aggregatorCode"
  ],
  mapper: {
    serializedName: "aggregatorCode",
    type: {
      name: "String"
    }
  }
};
export const aggregatorCodeIsSubstring0: msRest.OperationQueryParameter = {
  parameterPath: "aggregatorCodeIsSubstring",
  mapper: {
    required: true,
    serializedName: "aggregatorCodeIsSubstring",
    type: {
      name: "Boolean"
    }
  }
};
export const aggregatorCodeIsSubstring1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "aggregatorCodeIsSubstring"
  ],
  mapper: {
    serializedName: "aggregatorCodeIsSubstring",
    type: {
      name: "Boolean"
    }
  }
};
export const aggregatorsCodes: msRest.OperationQueryParameter = {
  parameterPath: "aggregatorsCodes",
  mapper: {
    required: true,
    serializedName: "aggregatorsCodes",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const baseCalendarId: msRest.OperationQueryParameter = {
  parameterPath: "baseCalendarId",
  mapper: {
    required: true,
    serializedName: "baseCalendarId",
    type: {
      name: "String"
    }
  }
};
export const baseCalendarIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "baseCalendarIds"
  ],
  mapper: {
    serializedName: "baseCalendarIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const buildingId0: msRest.OperationQueryParameter = {
  parameterPath: "buildingId",
  mapper: {
    required: true,
    serializedName: "buildingId",
    type: {
      name: "Uuid"
    }
  }
};
export const buildingId1: msRest.OperationQueryParameter = {
  parameterPath: "buildingId",
  mapper: {
    required: true,
    serializedName: "buildingId",
    type: {
      name: "String"
    }
  }
};
export const businessRuleName: msRest.OperationQueryParameter = {
  parameterPath: "businessRuleName",
  mapper: {
    required: true,
    serializedName: "businessRuleName",
    type: {
      name: "String"
    }
  }
};
export const businessRuleNames: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "businessRuleNames"
  ],
  mapper: {
    serializedName: "businessRuleNames",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const calendarId0: msRest.OperationQueryParameter = {
  parameterPath: "calendarId",
  mapper: {
    required: true,
    serializedName: "calendarId",
    type: {
      name: "String"
    }
  }
};
export const calendarId1: msRest.OperationQueryParameter = {
  parameterPath: "calendarId",
  mapper: {
    required: true,
    serializedName: "calendarId",
    type: {
      name: "Uuid"
    }
  }
};
export const calendarTypes: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "calendarTypes"
  ],
  mapper: {
    serializedName: "calendarTypes",
    type: {
      name: "String"
    }
  }
};
export const childrenLevel: msRest.OperationQueryParameter = {
  parameterPath: "childrenLevel",
  mapper: {
    required: true,
    serializedName: "childrenLevel",
    type: {
      name: "Number"
    }
  }
};
export const closedDayIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "closedDayIds"
  ],
  mapper: {
    serializedName: "closedDayIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const closingReasons: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "closingReasons"
  ],
  mapper: {
    serializedName: "closingReasons",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const code: msRest.OperationQueryParameter = {
  parameterPath: "code",
  mapper: {
    required: true,
    serializedName: "code",
    type: {
      name: "String"
    }
  }
};
export const codes0: msRest.OperationQueryParameter = {
  parameterPath: "codes",
  mapper: {
    required: true,
    serializedName: "codes",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const codes1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "codes"
  ],
  mapper: {
    serializedName: "codes",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const culture: msRest.OperationQueryParameter = {
  parameterPath: "culture",
  mapper: {
    required: true,
    serializedName: "culture",
    type: {
      name: "String"
    }
  }
};
export const cultureCode: msRest.OperationQueryParameter = {
  parameterPath: "cultureCode",
  mapper: {
    required: true,
    serializedName: "cultureCode",
    type: {
      name: "String"
    }
  }
};
export const currentRole: msRest.OperationQueryParameter = {
  parameterPath: "currentRole",
  mapper: {
    required: true,
    serializedName: "currentRole",
    type: {
      name: "String"
    }
  }
};
export const currentVersion: msRest.OperationQueryParameter = {
  parameterPath: "currentVersion",
  mapper: {
    required: true,
    serializedName: "currentVersion",
    type: {
      name: "Number"
    }
  }
};
export const cycleId: msRest.OperationQueryParameter = {
  parameterPath: "cycleId",
  mapper: {
    required: true,
    serializedName: "cycleId",
    type: {
      name: "String"
    }
  }
};
export const cycleIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "cycleIds"
  ],
  mapper: {
    serializedName: "cycleIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const dateParameter: msRest.OperationQueryParameter = {
  parameterPath: "dateParameter",
  mapper: {
    required: true,
    serializedName: "date",
    type: {
      name: "DateTime"
    }
  }
};
export const disputeDescription: msRest.OperationQueryParameter = {
  parameterPath: "disputeDescription",
  mapper: {
    required: true,
    serializedName: "disputeDescription",
    type: {
      name: "String"
    }
  }
};
export const documentId: msRest.OperationQueryParameter = {
  parameterPath: "documentId",
  mapper: {
    required: true,
    serializedName: "documentId",
    type: {
      name: "Uuid"
    }
  }
};
export const endDate: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "endDate"
  ],
  mapper: {
    serializedName: "endDate",
    type: {
      name: "DateTime"
    }
  }
};
export const entityId: msRest.OperationQueryParameter = {
  parameterPath: "entityId",
  mapper: {
    required: true,
    serializedName: "entityId",
    type: {
      name: "String"
    }
  }
};
export const entryId: msRest.OperationQueryParameter = {
  parameterPath: "entryId",
  mapper: {
    required: true,
    serializedName: "entryId",
    type: {
      name: "String"
    }
  }
};
export const eventId: msRest.OperationQueryParameter = {
  parameterPath: "eventId",
  mapper: {
    required: true,
    serializedName: "eventId",
    type: {
      name: "Uuid"
    }
  }
};
export const excludedProsecutingAuthorityIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "excludedProsecutingAuthorityIds"
  ],
  mapper: {
    serializedName: "excludedProsecutingAuthorityIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const excludedStatuses: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "excludedStatuses"
  ],
  mapper: {
    serializedName: "excludedStatuses",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const expiryDate: msRest.OperationQueryParameter = {
  parameterPath: "expiryDate",
  mapper: {
    required: true,
    serializedName: "expiryDate",
    type: {
      name: "DateTime"
    }
  }
};
export const fileId0: msRest.OperationQueryParameter = {
  parameterPath: "fileId",
  mapper: {
    required: true,
    serializedName: "fileId",
    type: {
      name: "Uuid"
    }
  }
};
export const fileId1: msRest.OperationQueryParameter = {
  parameterPath: "fileId",
  mapper: {
    required: true,
    serializedName: "fileId",
    type: {
      name: "String"
    }
  }
};
export const fileIds0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileIds"
  ],
  mapper: {
    serializedName: "fileIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const fileIds1: msRest.OperationQueryParameter = {
  parameterPath: "fileIds",
  mapper: {
    required: true,
    serializedName: "fileIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const fileInvitationId: msRest.OperationQueryParameter = {
  parameterPath: "fileInvitationId",
  mapper: {
    required: true,
    serializedName: "fileInvitationId",
    type: {
      name: "Uuid"
    }
  }
};
export const fileStatus: msRest.OperationQueryParameter = {
  parameterPath: "fileStatus",
  mapper: {
    required: true,
    serializedName: "fileStatus",
    type: {
      name: "String"
    }
  }
};
export const formCode: msRest.OperationQueryParameter = {
  parameterPath: "formCode",
  mapper: {
    required: true,
    serializedName: "formCode",
    type: {
      name: "String"
    }
  }
};
export const formId: msRest.OperationQueryParameter = {
  parameterPath: "formId",
  mapper: {
    required: true,
    serializedName: "formId",
    type: {
      name: "String"
    }
  }
};
export const forumId: msRest.OperationQueryParameter = {
  parameterPath: "forumId",
  mapper: {
    required: true,
    serializedName: "forumId",
    type: {
      name: "Uuid"
    }
  }
};
export const hearingId: msRest.OperationQueryParameter = {
  parameterPath: "hearingId",
  mapper: {
    required: true,
    serializedName: "hearingId",
    type: {
      name: "Uuid"
    }
  }
};
export const id0: msRest.OperationQueryParameter = {
  parameterPath: "id",
  mapper: {
    required: true,
    serializedName: "id",
    type: {
      name: "String"
    }
  }
};
export const id1: msRest.OperationQueryParameter = {
  parameterPath: "id",
  mapper: {
    required: true,
    serializedName: "id",
    type: {
      name: "Uuid"
    }
  }
};
export const invitationId: msRest.OperationQueryParameter = {
  parameterPath: "invitationId",
  mapper: {
    required: true,
    serializedName: "invitationId",
    type: {
      name: "Uuid"
    }
  }
};
export const jEId: msRest.OperationQueryParameter = {
  parameterPath: "jEId",
  mapper: {
    required: true,
    serializedName: "JEId",
    type: {
      name: "String"
    }
  }
};
export const journalCodes: msRest.OperationQueryParameter = {
  parameterPath: "journalCodes",
  mapper: {
    required: true,
    serializedName: "journalCodes",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const journalId: msRest.OperationQueryParameter = {
  parameterPath: "journalId",
  mapper: {
    required: true,
    serializedName: "journalId",
    type: {
      name: "Uuid"
    }
  }
};
export const judicialEntityId0: msRest.OperationQueryParameter = {
  parameterPath: "judicialEntityId",
  mapper: {
    required: true,
    serializedName: "judicialEntityId",
    type: {
      name: "Uuid"
    }
  }
};
export const judicialEntityId1: msRest.OperationQueryParameter = {
  parameterPath: "judicialEntityId",
  mapper: {
    required: true,
    serializedName: "judicialEntityId",
    type: {
      name: "String"
    }
  }
};
export const judicialEntityIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "judicialEntityIds"
  ],
  mapper: {
    serializedName: "judicialEntityIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const judicialFileId: msRest.OperationQueryParameter = {
  parameterPath: "judicialFileId",
  mapper: {
    required: true,
    serializedName: "judicialFileId",
    type: {
      name: "String"
    }
  }
};
export const judicialFileIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "judicialFileIds"
  ],
  mapper: {
    serializedName: "judicialFileIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const key: msRest.OperationQueryParameter = {
  parameterPath: "key",
  mapper: {
    required: true,
    serializedName: "key",
    type: {
      name: "Uuid"
    }
  }
};
export const labelId0: msRest.OperationQueryParameter = {
  parameterPath: "labelId",
  mapper: {
    required: true,
    serializedName: "labelId",
    type: {
      name: "String"
    }
  }
};
export const labelId1: msRest.OperationQueryParameter = {
  parameterPath: "labelId",
  mapper: {
    required: true,
    serializedName: "labelId",
    type: {
      name: "Uuid"
    }
  }
};
export const labelSection: msRest.OperationQueryParameter = {
  parameterPath: "labelSection",
  mapper: {
    required: true,
    serializedName: "labelSection",
    type: {
      name: "String"
    }
  }
};
export const lang: msRest.OperationQueryParameter = {
  parameterPath: "lang",
  mapper: {
    required: true,
    serializedName: "lang",
    type: {
      name: "String"
    }
  }
};
export const lastModified0: msRest.OperationQueryParameter = {
  parameterPath: "lastModified",
  mapper: {
    required: true,
    serializedName: "lastModified",
    type: {
      name: "Number"
    }
  }
};
export const lastModified1: msRest.OperationQueryParameter = {
  parameterPath: "lastModified",
  mapper: {
    required: true,
    serializedName: "lastModified",
    type: {
      name: "DateTime"
    }
  }
};
export const lastModifiedDate: msRest.OperationQueryParameter = {
  parameterPath: "lastModifiedDate",
  mapper: {
    required: true,
    serializedName: "lastModifiedDate",
    type: {
      name: "Number"
    }
  }
};
export const linkId: msRest.OperationQueryParameter = {
  parameterPath: "linkId",
  mapper: {
    required: true,
    serializedName: "linkId",
    type: {
      name: "String"
    }
  }
};
export const locationBuildingIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "locationBuildingIds"
  ],
  mapper: {
    serializedName: "locationBuildingIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const locationRoomId: msRest.OperationQueryParameter = {
  parameterPath: "locationRoomId",
  mapper: {
    required: true,
    serializedName: "locationRoomId",
    type: {
      name: "String"
    }
  }
};
export const locationRoomIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "locationRoomIds"
  ],
  mapper: {
    serializedName: "locationRoomIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const maxCreatedDate: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "maxCreatedDate"
  ],
  mapper: {
    serializedName: "maxCreatedDate",
    type: {
      name: "DateTime"
    }
  }
};
export const menuId: msRest.OperationQueryParameter = {
  parameterPath: "menuId",
  mapper: {
    required: true,
    serializedName: "menuId",
    type: {
      name: "Uuid"
    }
  }
};
export const minCreatedDate: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "minCreatedDate"
  ],
  mapper: {
    serializedName: "minCreatedDate",
    type: {
      name: "DateTime"
    }
  }
};
export const modifiedTicks: msRest.OperationQueryParameter = {
  parameterPath: "modifiedTicks",
  mapper: {
    required: true,
    serializedName: "modifiedTicks",
    type: {
      name: "Number"
    }
  }
};
export const name: msRest.OperationQueryParameter = {
  parameterPath: "name",
  mapper: {
    required: true,
    serializedName: "name",
    type: {
      name: "String"
    }
  }
};
export const names0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "names"
  ],
  mapper: {
    serializedName: "names",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const names1: msRest.OperationQueryParameter = {
  parameterPath: "names",
  mapper: {
    required: true,
    serializedName: "names",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const notificationCode0: msRest.OperationQueryParameter = {
  parameterPath: "notificationCode",
  mapper: {
    required: true,
    serializedName: "notificationCode",
    type: {
      name: "String"
    }
  }
};
export const notificationCode1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "notificationCode"
  ],
  mapper: {
    serializedName: "notificationCode",
    type: {
      name: "String"
    }
  }
};
export const notificationId: msRest.OperationQueryParameter = {
  parameterPath: "notificationId",
  mapper: {
    required: true,
    serializedName: "notificationId",
    type: {
      name: "Number"
    }
  }
};
export const objectCode: msRest.OperationQueryParameter = {
  parameterPath: "objectCode",
  mapper: {
    required: true,
    serializedName: "objectCode",
    type: {
      name: "String"
    }
  }
};
export const orderBy: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "orderBy"
  ],
  mapper: {
    serializedName: "orderBy",
    type: {
      name: "String"
    }
  }
};
export const orderByDescending: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "orderByDescending"
  ],
  mapper: {
    serializedName: "orderByDescending",
    type: {
      name: "Boolean"
    }
  }
};
export const partyEntityCodes: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "partyEntityCodes"
  ],
  mapper: {
    serializedName: "partyEntityCodes",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const partyEntityIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "partyEntityIds"
  ],
  mapper: {
    serializedName: "partyEntityIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const partyId0: msRest.OperationQueryParameter = {
  parameterPath: "partyId",
  mapper: {
    required: true,
    serializedName: "partyId",
    type: {
      name: "String"
    }
  }
};
export const partyId1: msRest.OperationQueryParameter = {
  parameterPath: "partyId",
  mapper: {
    required: true,
    serializedName: "partyId",
    type: {
      name: "Uuid"
    }
  }
};
export const partyInvitationId: msRest.OperationQueryParameter = {
  parameterPath: "partyInvitationId",
  mapper: {
    required: true,
    serializedName: "partyInvitationId",
    type: {
      name: "Uuid"
    }
  }
};
export const partyType: msRest.OperationQueryParameter = {
  parameterPath: "partyType",
  mapper: {
    required: true,
    serializedName: "partyType",
    type: {
      name: "String"
    }
  }
};
export const periodAvailabilityGroupId: msRest.OperationQueryParameter = {
  parameterPath: "periodAvailabilityGroupId",
  mapper: {
    required: true,
    serializedName: "periodAvailabilityGroupId",
    type: {
      name: "String"
    }
  }
};
export const periodAvailabilityId: msRest.OperationQueryParameter = {
  parameterPath: "periodAvailabilityId",
  mapper: {
    required: true,
    serializedName: "periodAvailabilityId",
    type: {
      name: "String"
    }
  }
};
export const periodAvailabilityIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "periodAvailabilityIds"
  ],
  mapper: {
    serializedName: "periodAvailabilityIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const prosecutingAuthorityIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "prosecutingAuthorityIds"
  ],
  mapper: {
    serializedName: "prosecutingAuthorityIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const prosecutingAuthorityNames: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "prosecutingAuthorityNames"
  ],
  mapper: {
    serializedName: "prosecutingAuthorityNames",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const realm: msRest.OperationQueryParameter = {
  parameterPath: "realm",
  mapper: {
    required: true,
    serializedName: "realm",
    type: {
      name: "String"
    }
  }
};
export const representativeId: msRest.OperationQueryParameter = {
  parameterPath: "representativeId",
  mapper: {
    required: true,
    serializedName: "representativeId",
    type: {
      name: "Uuid"
    }
  }
};
export const representativeIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "representativeIds"
  ],
  mapper: {
    serializedName: "representativeIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const requestId: msRest.OperationQueryParameter = {
  parameterPath: "requestId",
  mapper: {
    required: true,
    serializedName: "requestId",
    type: {
      name: "Uuid"
    }
  }
};
export const resourceTypes: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "resourceTypes"
  ],
  mapper: {
    serializedName: "resourceTypes",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const roleCode: msRest.OperationQueryParameter = {
  parameterPath: "roleCode",
  mapper: {
    required: true,
    serializedName: "roleCode",
    type: {
      name: "String"
    }
  }
};
export const roomId0: msRest.OperationQueryParameter = {
  parameterPath: "roomId",
  mapper: {
    required: true,
    serializedName: "roomId",
    type: {
      name: "Uuid"
    }
  }
};
export const roomId1: msRest.OperationQueryParameter = {
  parameterPath: "roomId",
  mapper: {
    required: true,
    serializedName: "roomId",
    type: {
      name: "String"
    }
  }
};
export const roomIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "roomIds"
  ],
  mapper: {
    serializedName: "roomIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const scheduleEntryId: msRest.OperationQueryParameter = {
  parameterPath: "scheduleEntryId",
  mapper: {
    required: true,
    serializedName: "scheduleEntryId",
    type: {
      name: "String"
    }
  }
};
export const schedulePatternId: msRest.OperationQueryParameter = {
  parameterPath: "schedulePatternId",
  mapper: {
    required: true,
    serializedName: "schedulePatternId",
    type: {
      name: "String"
    }
  }
};
export const schedulePatternIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "schedulePatternIds"
  ],
  mapper: {
    serializedName: "schedulePatternIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Uuid"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const searchBy: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "searchBy"
  ],
  mapper: {
    serializedName: "searchBy",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const searchStatuses: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "searchStatuses"
  ],
  mapper: {
    serializedName: "searchStatuses",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const searchText: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "searchText"
  ],
  mapper: {
    serializedName: "searchText",
    type: {
      name: "String"
    }
  }
};
export const skip: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skip"
  ],
  mapper: {
    serializedName: "skip",
    type: {
      name: "Number"
    }
  }
};
export const startDate: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "startDate"
  ],
  mapper: {
    serializedName: "startDate",
    type: {
      name: "DateTime"
    }
  }
};
export const status: msRest.OperationQueryParameter = {
  parameterPath: "status",
  mapper: {
    required: true,
    serializedName: "status",
    type: {
      name: "String"
    }
  }
};
export const statuses: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "statuses"
  ],
  mapper: {
    serializedName: "statuses",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const statusFrom: msRest.OperationQueryParameter = {
  parameterPath: "statusFrom",
  mapper: {
    required: true,
    serializedName: "statusFrom",
    type: {
      name: "String"
    }
  }
};
export const statusTo: msRest.OperationQueryParameter = {
  parameterPath: "statusTo",
  mapper: {
    required: true,
    serializedName: "statusTo",
    type: {
      name: "String"
    }
  }
};
export const tagCode: msRest.OperationQueryParameter = {
  parameterPath: "tagCode",
  mapper: {
    required: true,
    serializedName: "tagCode",
    type: {
      name: "String"
    }
  }
};
export const tagCodes: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "tagCodes"
  ],
  mapper: {
    serializedName: "tagCodes",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const tagId: msRest.OperationQueryParameter = {
  parameterPath: "tagId",
  mapper: {
    required: true,
    serializedName: "tagId",
    type: {
      name: "Uuid"
    }
  }
};
export const take0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "take"
  ],
  mapper: {
    serializedName: "take",
    type: {
      name: "Number"
    }
  }
};
export const take1: msRest.OperationQueryParameter = {
  parameterPath: "take",
  mapper: {
    required: true,
    serializedName: "take",
    type: {
      name: "Number"
    }
  }
};
export const titles: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "titles"
  ],
  mapper: {
    serializedName: "titles",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const type: msRest.OperationQueryParameter = {
  parameterPath: "type",
  mapper: {
    required: true,
    serializedName: "type",
    type: {
      name: "String"
    }
  }
};
export const urn: msRest.OperationQueryParameter = {
  parameterPath: "urn",
  mapper: {
    required: true,
    serializedName: "urn",
    type: {
      name: "String"
    }
  }
};
export const userCodes: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "userCodes"
  ],
  mapper: {
    serializedName: "userCodes",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const userId: msRest.OperationQueryParameter = {
  parameterPath: "userId",
  mapper: {
    required: true,
    serializedName: "userId",
    type: {
      name: "String"
    }
  }
};
export const username: msRest.OperationQueryParameter = {
  parameterPath: "username",
  mapper: {
    required: true,
    serializedName: "username",
    type: {
      name: "String"
    }
  }
};
export const userRoles: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "userRoles"
  ],
  mapper: {
    serializedName: "userRoles",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const weekday: msRest.OperationQueryParameter = {
  parameterPath: "weekday",
  mapper: {
    required: true,
    serializedName: "weekday",
    type: {
      name: "String"
    }
  }
};
export const witnessCode: msRest.OperationQueryParameter = {
  parameterPath: "witnessCode",
  mapper: {
    required: true,
    serializedName: "witnessCode",
    type: {
      name: "String"
    }
  }
};
export const witnessId: msRest.OperationQueryParameter = {
  parameterPath: "witnessId",
  mapper: {
    required: true,
    serializedName: "witnessId",
    type: {
      name: "Uuid"
    }
  }
};
