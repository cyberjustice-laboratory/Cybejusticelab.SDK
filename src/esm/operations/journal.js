/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/journalMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Journal. */
var Journal = /** @class */ (function () {
    /**
     * Create a Journal.
     * @param {CyberjusticeAPIsContext} client Reference to the service client.
     */
    function Journal(client) {
        this.client = client;
    }
    Journal.prototype.getJournalEntryById = function (fileId, journalId, lang, options, callback) {
        return this.client.sendOperationRequest({
            fileId: fileId,
            journalId: journalId,
            lang: lang,
            options: options
        }, getJournalEntryByIdOperationSpec, callback);
    };
    Journal.prototype.getLatestJournalsByCodes = function (fileId, journalCodes, options, callback) {
        return this.client.sendOperationRequest({
            fileId: fileId,
            journalCodes: journalCodes,
            options: options
        }, getLatestJournalsByCodesOperationSpec, callback);
    };
    Journal.prototype.getFileHistory = function (requestModel, options, callback) {
        return this.client.sendOperationRequest({
            requestModel: requestModel,
            options: options
        }, getFileHistoryOperationSpec, callback);
    };
    Journal.prototype.getFileLatestJournals = function (requestModel, options, callback) {
        return this.client.sendOperationRequest({
            requestModel: requestModel,
            options: options
        }, getFileLatestJournalsOperationSpec, callback);
    };
    Journal.prototype.addJournalEntry = function (journalEntry, options, callback) {
        return this.client.sendOperationRequest({
            journalEntry: journalEntry,
            options: options
        }, addJournalEntryOperationSpec, callback);
    };
    return Journal;
}());
export { Journal };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getJournalEntryByIdOperationSpec = {
    httpMethod: "GET",
    path: "Journal/GET/JournalEntryById",
    queryParameters: [
        Parameters.fileId0,
        Parameters.journalId,
        Parameters.lang
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsJournalJournalData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getLatestJournalsByCodesOperationSpec = {
    httpMethod: "GET",
    path: "Journal/GET/LatestJournalsByCodes",
    queryParameters: [
        Parameters.fileId0,
        Parameters.journalCodes
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelSharedJournalModelsJournalModel"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getFileHistoryOperationSpec = {
    httpMethod: "POST",
    path: "Journal/POST/FileHistory",
    requestBody: {
        parameterPath: "requestModel",
        mapper: tslib_1.__assign({}, Mappers.CyberjusticeLabKernelSharedJournalModelsJournalApiResquestData, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CyberjusticeLabKernelSharedJournalModelsJournalApiResponseData
        },
        default: {}
    },
    serializer: serializer
};
var getFileLatestJournalsOperationSpec = {
    httpMethod: "POST",
    path: "Journal/POST/FileLatestJournals",
    requestBody: {
        parameterPath: "requestModel",
        mapper: tslib_1.__assign({}, Mappers.CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResquestData, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CyberjusticeLabKernelSharedJournalModelsJournalLatestApiResponseData
        },
        default: {}
    },
    serializer: serializer
};
var addJournalEntryOperationSpec = {
    httpMethod: "POST",
    path: "Journal/POST/AddJournalEntry",
    requestBody: {
        parameterPath: "journalEntry",
        mapper: tslib_1.__assign({}, Mappers.CyberjusticeLabKernelSharedJournalModelsCreateJournalModel, { required: true })
    },
    responses: {
        204: {},
        default: {}
    },
    serializer: serializer
};
//# sourceMappingURL=journal.js.map