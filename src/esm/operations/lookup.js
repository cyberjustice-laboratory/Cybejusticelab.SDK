/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/lookupMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Lookup. */
var Lookup = /** @class */ (function () {
    /**
     * Create a Lookup.
     * @param {CyberjusticeAPIsContext} client Reference to the service client.
     */
    function Lookup(client) {
        this.client = client;
    }
    Lookup.prototype.getLocalizedLookup = function (name, culture, childrenLevel, options, callback) {
        return this.client.sendOperationRequest({
            name: name,
            culture: culture,
            childrenLevel: childrenLevel,
            options: options
        }, getLocalizedLookupOperationSpec, callback);
    };
    Lookup.prototype.getLookup = function (name, childrenLevel, options, callback) {
        return this.client.sendOperationRequest({
            name: name,
            childrenLevel: childrenLevel,
            options: options
        }, getLookupOperationSpec, callback);
    };
    Lookup.prototype.getLocalizedLookups = function (names, culture, childrenLevel, options, callback) {
        return this.client.sendOperationRequest({
            names: names,
            culture: culture,
            childrenLevel: childrenLevel,
            options: options
        }, getLocalizedLookupsOperationSpec, callback);
    };
    Lookup.prototype.getLookups = function (names, childrenLevel, options, callback) {
        return this.client.sendOperationRequest({
            names: names,
            childrenLevel: childrenLevel,
            options: options
        }, getLookupsOperationSpec, callback);
    };
    Lookup.prototype.getLookups1 = function (getLookupsModel, options, callback) {
        return this.client.sendOperationRequest({
            getLookupsModel: getLookupsModel,
            options: options
        }, getLookups1OperationSpec, callback);
    };
    return Lookup;
}());
export { Lookup };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getLocalizedLookupOperationSpec = {
    httpMethod: "GET",
    path: "Lookup/GET/LocalizedLookup",
    queryParameters: [
        Parameters.name,
        Parameters.culture,
        Parameters.childrenLevel
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CyberjusticeLabKernelSharedLookupModelsLookupModel
        },
        default: {}
    },
    serializer: serializer
};
var getLookupOperationSpec = {
    httpMethod: "GET",
    path: "Lookup/GET/Lookup",
    queryParameters: [
        Parameters.name,
        Parameters.childrenLevel
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CyberjusticeLabKernelSharedLookupModelsLookupModel
        },
        default: {}
    },
    serializer: serializer
};
var getLocalizedLookupsOperationSpec = {
    httpMethod: "GET",
    path: "Lookup/GET/LocalizedLookups",
    queryParameters: [
        Parameters.names1,
        Parameters.culture,
        Parameters.childrenLevel
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelSharedLookupModelsLookupModel"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getLookupsOperationSpec = {
    httpMethod: "GET",
    path: "Lookup/GET/Lookups",
    queryParameters: [
        Parameters.names1,
        Parameters.childrenLevel
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelSharedLookupModelsLookupModel"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getLookups1OperationSpec = {
    httpMethod: "POST",
    path: "Lookup/POST/Lookups",
    requestBody: {
        parameterPath: "getLookupsModel",
        mapper: tslib_1.__assign({}, Mappers.CyberjusticeLabKernelSharedLookupModelsLookupApiRequestData, { required: true })
    },
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelSharedLookupModelsLookupModel"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
//# sourceMappingURL=lookup.js.map