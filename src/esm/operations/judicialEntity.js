/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/judicialEntityMappers";
import * as Parameters from "../models/parameters";
/** Class representing a JudicialEntity. */
var JudicialEntity = /** @class */ (function () {
    /**
     * Create a JudicialEntity.
     * @param {CyberjusticeAPIsContext} client Reference to the service client.
     */
    function JudicialEntity(client) {
        this.client = client;
    }
    JudicialEntity.prototype.getJudicialEntityCompleteInfos = function (jEId, options, callback) {
        return this.client.sendOperationRequest({
            jEId: jEId,
            options: options
        }, getJudicialEntityCompleteInfosOperationSpec, callback);
    };
    JudicialEntity.prototype.getJudicialEntity = function (urn, options, callback) {
        return this.client.sendOperationRequest({
            urn: urn,
            options: options
        }, getJudicialEntityOperationSpec, callback);
    };
    JudicialEntity.prototype.getMatters = function (requestModel, options, callback) {
        return this.client.sendOperationRequest({
            requestModel: requestModel,
            options: options
        }, getMattersOperationSpec, callback);
    };
    JudicialEntity.prototype.getJudicialEntities = function (requestModel, options, callback) {
        return this.client.sendOperationRequest({
            requestModel: requestModel,
            options: options
        }, getJudicialEntitiesOperationSpec, callback);
    };
    return JudicialEntity;
}());
export { JudicialEntity };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getJudicialEntityCompleteInfosOperationSpec = {
    httpMethod: "GET",
    path: "JudicialEntity/GET/JudicialEntityCompleteInfos",
    queryParameters: [
        Parameters.jEId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CyberjusticeLabKernelServiceContractsJudicialEntityJudicialEntityData
        },
        default: {}
    },
    serializer: serializer
};
var getJudicialEntityOperationSpec = {
    httpMethod: "GET",
    path: "JudicialEntity/GET/JudicialEntityId",
    queryParameters: [
        Parameters.urn
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getMattersOperationSpec = {
    httpMethod: "POST",
    path: "JudicialEntity/POST/Matters",
    requestBody: {
        parameterPath: "requestModel",
        mapper: tslib_1.__assign({}, Mappers.CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiRequestData, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CyberjusticeLabKernelSharedJudicialEntityModelsMatterApiResponseData
        },
        default: {}
    },
    serializer: serializer
};
var getJudicialEntitiesOperationSpec = {
    httpMethod: "POST",
    path: "JudicialEntity/POST/JudicialEntities",
    requestBody: {
        parameterPath: "requestModel",
        mapper: tslib_1.__assign({}, Mappers.CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiRequestData, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CyberjusticeLabKernelSharedJudicialEntityModelsJudicialEntityApiResponseData
        },
        default: {}
    },
    serializer: serializer
};
//# sourceMappingURL=judicialEntity.js.map