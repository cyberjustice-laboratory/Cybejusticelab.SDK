/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/formMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Form. */
var Form = /** @class */ (function () {
    /**
     * Create a Form.
     * @param {CyberjusticeAPIsContext} client Reference to the service client.
     */
    function Form(client) {
        this.client = client;
    }
    Form.prototype.getFormQuestionProposal = function (formId, options, callback) {
        return this.client.sendOperationRequest({
            formId: formId,
            options: options
        }, getFormQuestionProposalOperationSpec, callback);
    };
    Form.prototype.getFormQuestionProposalByCode = function (formCode, entityId, options, callback) {
        return this.client.sendOperationRequest({
            formCode: formCode,
            entityId: entityId,
            options: options
        }, getFormQuestionProposalByCodeOperationSpec, callback);
    };
    Form.prototype.getFormQuestionDescription = function (formId, options, callback) {
        return this.client.sendOperationRequest({
            formId: formId,
            options: options
        }, getFormQuestionDescriptionOperationSpec, callback);
    };
    Form.prototype.getFormQuestionDescriptionByCode = function (formCode, entityId, options, callback) {
        return this.client.sendOperationRequest({
            formCode: formCode,
            entityId: entityId,
            options: options
        }, getFormQuestionDescriptionByCodeOperationSpec, callback);
    };
    Form.prototype.getDraftQuestionForm = function (formId, options, callback) {
        return this.client.sendOperationRequest({
            formId: formId,
            options: options
        }, getDraftQuestionFormOperationSpec, callback);
    };
    Form.prototype.getDraftQuestionDescriptionForm = function (formId, options, callback) {
        return this.client.sendOperationRequest({
            formId: formId,
            options: options
        }, getDraftQuestionDescriptionFormOperationSpec, callback);
    };
    Form.prototype.getDraftQuestionProposalForm = function (formId, options, callback) {
        return this.client.sendOperationRequest({
            formId: formId,
            options: options
        }, getDraftQuestionProposalFormOperationSpec, callback);
    };
    Form.prototype.getPartyQuestionDescription = function (fileId, partyId, options, callback) {
        return this.client.sendOperationRequest({
            fileId: fileId,
            partyId: partyId,
            options: options
        }, getPartyQuestionDescriptionOperationSpec, callback);
    };
    Form.prototype.getPartyQuestionDescriptions = function (fileId, options, callback) {
        return this.client.sendOperationRequest({
            fileId: fileId,
            options: options
        }, getPartyQuestionDescriptionsOperationSpec, callback);
    };
    Form.prototype.getPartyQuestionProposal = function (fileId, partyId, options, callback) {
        return this.client.sendOperationRequest({
            fileId: fileId,
            partyId: partyId,
            options: options
        }, getPartyQuestionProposalOperationSpec, callback);
    };
    Form.prototype.getPartyQuestionProposals = function (fileId, options, callback) {
        return this.client.sendOperationRequest({
            fileId: fileId,
            options: options
        }, getPartyQuestionProposalsOperationSpec, callback);
    };
    Form.prototype.getPartyQuestionProposalCount = function (fileId, options, callback) {
        return this.client.sendOperationRequest({
            fileId: fileId,
            options: options
        }, getPartyQuestionProposalCountOperationSpec, callback);
    };
    Form.prototype.getPartyArchiveQuestionProposals = function (fileId, options, callback) {
        return this.client.sendOperationRequest({
            fileId: fileId,
            options: options
        }, getPartyArchiveQuestionProposalsOperationSpec, callback);
    };
    Form.prototype.getDraftQuestionForms = function (requestModel, options, callback) {
        return this.client.sendOperationRequest({
            requestModel: requestModel,
            options: options
        }, getDraftQuestionFormsOperationSpec, callback);
    };
    return Form;
}());
export { Form };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getFormQuestionProposalOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/FormQuestionProposals",
    queryParameters: [
        Parameters.formId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getFormQuestionProposalByCodeOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/FormQuestionProposalsByCode",
    queryParameters: [
        Parameters.formCode,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getFormQuestionDescriptionOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/FormQuestionDescriptions",
    queryParameters: [
        Parameters.formId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getFormQuestionDescriptionByCodeOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/FormQuestionDescriptionsByCode",
    queryParameters: [
        Parameters.formCode,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getDraftQuestionFormOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/DraftQuestionForms",
    queryParameters: [
        Parameters.formId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormFormData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getDraftQuestionDescriptionFormOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/DraftQuestionDescriptionForm",
    queryParameters: [
        Parameters.formId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getDraftQuestionProposalFormOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/DraftQuestionProposalForm",
    queryParameters: [
        Parameters.formId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormFormQuestionData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getPartyQuestionDescriptionOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/PartyQuestionDescription",
    queryParameters: [
        Parameters.fileId1,
        Parameters.partyId0
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionData
        },
        default: {}
    },
    serializer: serializer
};
var getPartyQuestionDescriptionsOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/PartyQuestionDescriptions",
    queryParameters: [
        Parameters.fileId1
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormFormPartyDescriptionData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getPartyQuestionProposalOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/PartyQuestionProposal",
    queryParameters: [
        Parameters.fileId1,
        Parameters.partyId0
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CyberjusticeLabKernelServiceContractsFormFormPartyProposalData
        },
        default: {}
    },
    serializer: serializer
};
var getPartyQuestionProposalsOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/PartyQuestionProposals",
    queryParameters: [
        Parameters.fileId1
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormFormPartyProposalData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getPartyQuestionProposalCountOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/PartyQuestionProposalCounts",
    queryParameters: [
        Parameters.fileId1
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormPartyQuestionProposalCountData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getPartyArchiveQuestionProposalsOperationSpec = {
    httpMethod: "GET",
    path: "Form/GET/PartyArchiveQuestionProposals",
    queryParameters: [
        Parameters.fileId1
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CyberjusticeLabKernelServiceContractsFormFormPartyProposalData"
                        }
                    }
                }
            }
        },
        default: {}
    },
    serializer: serializer
};
var getDraftQuestionFormsOperationSpec = {
    httpMethod: "POST",
    path: "Form/POST/DraftQuestionForms",
    requestBody: {
        parameterPath: "requestModel",
        mapper: tslib_1.__assign({}, Mappers.CyberjusticeLabKernelSharedFormModelsQuestionFormApiRequestData, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CyberjusticeLabKernelSharedFormModelsQuestionFormApiResponseData
        },
        default: {}
    },
    serializer: serializer
};
//# sourceMappingURL=form.js.map