/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/secureMailMappers";
import * as Parameters from "../models/parameters";
import { CyberjusticeAPIsContext } from "../cyberjusticeAPIsContext";

/** Class representing a SecureMail. */
export class SecureMail {
  private readonly client: CyberjusticeAPIsContext;

  /**
   * Create a SecureMail.
   * @param {CyberjusticeAPIsContext} client Reference to the service client.
   */
  constructor(client: CyberjusticeAPIsContext) {
    this.client = client;
  }

  /**
   * @summary Returns a list of all emails models.
   * <remarks>This service is for administration purpose only. The user must have administrator role
   * to extract information.</remarks>
   * @param [options] The optional parameters
   * @returns Promise<Models.SecureMailGetMailListResponse>
   */
  getMailList(options?: msRest.RequestOptionsBase): Promise<Models.SecureMailGetMailListResponse>;
  /**
   * @param callback The callback
   */
  getMailList(callback: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsSecureMailEmailData[]>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  getMailList(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsSecureMailEmailData[]>): void;
  getMailList(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsSecureMailEmailData[]>, callback?: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsSecureMailEmailData[]>): Promise<Models.SecureMailGetMailListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      getMailListOperationSpec,
      callback) as Promise<Models.SecureMailGetMailListResponse>;
  }

  /**
   * @summary Return a specific email model by type and culture.
   * @param type The email model type.
   * @param culture The email model culture.
   * @param [options] The optional parameters
   * @returns Promise<Models.SecureMailGetMailResponse>
   */
  getMail(type: string, culture: string, options?: msRest.RequestOptionsBase): Promise<Models.SecureMailGetMailResponse>;
  /**
   * @param type The email model type.
   * @param culture The email model culture.
   * @param callback The callback
   */
  getMail(type: string, culture: string, callback: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsSecureMailEmailData>): void;
  /**
   * @param type The email model type.
   * @param culture The email model culture.
   * @param options The optional parameters
   * @param callback The callback
   */
  getMail(type: string, culture: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsSecureMailEmailData>): void;
  getMail(type: string, culture: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsSecureMailEmailData>, callback?: msRest.ServiceCallback<Models.CyberjusticeLabKernelServiceContractsSecureMailEmailData>): Promise<Models.SecureMailGetMailResponse> {
    return this.client.sendOperationRequest(
      {
        type,
        culture,
        options
      },
      getMailOperationSpec,
      callback) as Promise<Models.SecureMailGetMailResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getMailListOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "SecureMail/GET/MailList",
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CyberjusticeLabKernelServiceContractsSecureMailEmailData"
            }
          }
        }
      }
    },
    default: {}
  },
  serializer
};

const getMailOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "SecureMail/GET/Mail",
  queryParameters: [
    Parameters.type,
    Parameters.culture
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CyberjusticeLabKernelServiceContractsSecureMailEmailData
    },
    default: {}
  },
  serializer
};
